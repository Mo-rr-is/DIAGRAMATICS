{"version":3,"file":"diagramatics.js","sources":["../src/vector.ts","../src/BBcode.ts","../src/tag_names.ts","../src/diagram.ts","../src/utils.ts","../src/color_palette.ts","../src/unicode_utils.ts","../src/draw_svg.ts","../src/shapes.ts","../src/shapes/shapes_geometry.ts","../src/alignment.ts","../src/html_interactivity.ts","../src/modifier.ts","../src/shapes/shapes_graph.ts","../src/shapes/shapes_annotation.ts","../src/shapes/shapes_mechanics.ts","../src/shapes/shapes_bar.ts","../src/shapes/shapes_numberline.ts","../src/shapes/shapes_table.ts","../src/shapes/shapes_boxplot.ts","../src/geo_construct/geo_construct.ts","../src/shapes/utils_tree.ts","../src/shapes/shapes_tree.ts","../src/shapes/shapes_curves.ts","../src/encoding.ts"],"sourcesContent":["/**\n *  Class for 2D Vectors \n*/\nexport class Vector2 {\n    constructor(public x: number, public y: number) { }\n    add(v: Vector2) : Vector2 {\n        return new Vector2(this.x + v.x, this.y + v.y);\n    }\n    sub(v: Vector2) : Vector2 {\n        return new Vector2(this.x - v.x, this.y - v.y);\n    }\n    scale(s: number) : Vector2 {\n        return new Vector2(this.x * s, this.y * s);\n    }\n    mul(v: Vector2) : Vector2 {\n        return new Vector2(this.x * v.x, this.y * v.y);\n    }\n    rotate(angle: number) : Vector2 {\n        let x = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n        let y = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n        return new Vector2(x, y);\n    }\n    dot(v: Vector2) : number {\n        return this.x * v.x + this.y * v.y;\n    }\n    cross(v: Vector2) : number {\n        return this.x * v.y - this.y * v.x;\n    }\n    equals(v: Vector2) : boolean {\n        return this.x == v.x && this.y == v.y;\n    }\n    length() : number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    length_sq() : number {\n        return this.x * this.x + this.y * this.y;\n    }\n    angle() : number {\n        return Math.atan2(this.y, this.x);\n    }\n    normalize() : Vector2 {\n        let len = this.length();\n        return new Vector2(this.x / len, this.y / len);\n    }\n    copy() : Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n    apply(f : (v : Vector2) => Vector2) : Vector2 {\n        return f(this.copy());\n    }\n}\n\n/**\n * Helper function to create a Vector2\n */\nexport function V2(x : number, y : number) : Vector2 {\n    return new Vector2(x, y);\n}\n\n/**\n * Helper function to create a Vector2 from an angle\n * @param angle angle in radians\n * @returns Vector2 with length 1\n */\nexport function Vdir(angle : number) : Vector2 {\n    return new Vector2(Math.cos(angle), Math.sin(angle));\n}\n\n\n// transformation functions\ntype TransformFunc = (p : Vector2) => Vector2;\nexport class Transform {\n    static translate(v : Vector2) : TransformFunc {\n        return (p : Vector2) => p.add(v);\n    }\n    static rotate(angle : number, pivot : Vector2) : TransformFunc {\n        return (p : Vector2) => p.sub(pivot).rotate(angle).add(pivot);\n    }\n    static scale(scale : Vector2, origin : Vector2) : TransformFunc {\n        return (p : Vector2) => p.sub(origin).mul(scale).add(origin);\n    }\n    static reflect_over_point(q : Vector2) : TransformFunc {\n        return (p : Vector2) => p.sub(q).rotate(Math.PI).add(q);\n    }\n    static reflect_over_line(p1 : Vector2, p2 : Vector2) : TransformFunc {\n        let v = p2.sub(p1);\n        let n = v.rotate(Math.PI / 2).normalize();\n        return (p : Vector2) => {\n            let d = n.dot(p.sub(p1));\n            return p.sub(n.scale(2*d));\n        }   \n    }\n    static skewX(angle : number, ybase : number) : TransformFunc {\n        return (p : Vector2) => {\n            let x = p.x + (ybase - p.y) * Math.tan(angle);\n            return new Vector2(x, p.y);\n        }\n    }\n    static skewY(angle : number, xbase : number) : TransformFunc {\n        return (p : Vector2) => {\n            let y = p.y + (xbase - p.x) * Math.tan(angle);\n            return new Vector2(p.x, y);\n        }\n    }\n};\n","// BBCode parser for multiline text object\n//\n\nenum BB_TokenType {\n    TEXT      = \"TEXT\",\n    OPEN_TAG  = \"OPEN_TAG\",\n    CLOSE_TAG = \"CLOSE_TAG\",\n    EOF       = \"EOF\",\n}\ntype BB_Token = {\n    type       : BB_TokenType,\n    attributes : { [key: string]: string }\n}\n\nexport class BB_Lexer {\n    static parse_tag_content(str : string) : BB_Token {\n        if (str[0] === \"/\") {\n        // close tag\n            let name = str.substring(1);\n            return {\n                type: BB_TokenType.CLOSE_TAG,\n                attributes: {_tag_name : name}\n            }\n        }\n\n        // open tag\n        let space_id = str.indexOf(\" \");\n        let equal_id = str.indexOf(\"=\");\n        if (space_id === -1 && equal_id === -1) {\n        // [name]\n            return {\n                type: BB_TokenType.OPEN_TAG,\n                attributes: {_tag_name : str}\n            }\n        }\n        if (space_id === -1 && equal_id > 0) {\n        // [name=value]\n            let name = str.substring(0, equal_id);\n            let value = str.substring(equal_id + 1);\n            let attributes : any = {_tag_name : name}\n            attributes[name] = value;\n            return {\n                type: BB_TokenType.OPEN_TAG,\n                attributes\n            }\n        }\n        // [name attr1=value1 attr2=value2]\n        throw new Error(\"Unimplemented\");\n    }\n\n    static parse(text : string) : BB_Token[] | null {\n        let tokens : BB_Token[] = [];\n\n        let pos = 0;\n        let len = text.length;\n        while (pos < len) {\n            // Find the next tag\n            // Find [\n            let TagLeft = text.indexOf(\"[\", pos);\n            if (TagLeft === -1) {\n            // no more tags, add the rest of the text\n                tokens.push({ \n                    type: BB_TokenType.TEXT, \n                    attributes: {_text : text.substring(pos)} \n                });\n                break;\n            }\n            if (TagLeft > pos) {\n            // add the text before the [\n                tokens.push({ \n                    type: BB_TokenType.TEXT, \n                    attributes: {_text : text.substring(pos, TagLeft)} \n                });\n            }\n\n            // find ]\n            let TagRight = text.indexOf(\"]\", TagLeft);\n            let nextTagLeft  = text.indexOf(\"[\", TagLeft + 1);\n            // make sure there is no [ between the [ and ]\n            if (nextTagLeft > 0 && nextTagLeft < TagRight) return null;\n            // make sure there is a ] after the [\n            if (TagRight === -1) return null;\n\n            let tag_content = text.substring(TagLeft + 1, TagRight);\n            tokens.push(BB_Lexer.parse_tag_content(tag_content));\n\n            pos = TagRight + 1;\n        }\n        return tokens;\n    }\n}\n\nexport class BB_multiline {\n    static from_BBCode(text : string, linespace : string = \"1em\") {\n        let tspans : {text : string, style : {}}[]  = []\n        let tag_stack : { [key: string]: string }[] = [];\n        let tokens = BB_Lexer.parse(text);\n        if (tokens === null) {\n            console.error(\"Invalid BBCode\");\n            return;\n        }\n        for (let token of tokens) {\n            switch (token.type) {\n                case BB_TokenType.OPEN_TAG: {\n                    // if the token is [br] then add a new line\n                    if (token.attributes['_tag_name'] === \"br\") {\n                        tspans.push({text: \"\\n\", style: {dy: linespace}});\n                        break;\n                    }\n                    tag_stack.push(token.attributes);\n                } break;\n                case BB_TokenType.CLOSE_TAG: {\n                    if (tag_stack.length === 0) {\n                        console.error(\"Invalid BBCode\");\n                        return;\n                    }\n                    let tag_top = tag_stack[tag_stack.length - 1];\n                    if (tag_top['_tag_name'] !== token.attributes['_tag_name']) {\n                        console.error(\"Invalid BBCode\");\n                        return;\n                    }\n                    tag_stack.pop();\n                } break;\n                case BB_TokenType.TEXT: {\n                    let style = BB_multiline.build_style(tag_stack);\n                    tspans.push({text: token.attributes['_text'], style});\n                } break;\n            }\n        }\n\n        return tspans;\n    }\n\n    static build_style(tag_stack : { [key: string]: string }[]) {\n        let style : any = {};\n        for (let tag of tag_stack) {\n            switch (tag['_tag_name']) {\n                case \"b\"     : style[\"font-weight\"] = \"bold\"; break;\n                case \"i\"     : style[\"font-style\"] = \"italic\"; break;\n                case \"color\" : style[\"fill\"] = tag[\"color\"]; break;\n                case \"size\"  : style[\"font-size\"] = tag[\"size\"]; break;\n                case \"dx\"    : style[\"dx\"] = tag[\"dx\"]; break;\n                case \"dy\"    : style[\"dy\"] = tag[\"dy\"]; break;\n                case \"font\"  : style[\"font-family\"] = tag[\"font\"]; break;\n                case \"var\"   : style[\"textvar\"] = true; break;\n                case \"tag\"   : style[\"tag\"] = tag[\"tag\"]; break;\n            }\n        }\n        return style;\n    }\n}\n\n","/*\n* For objects that contain children, having a tag is useful so that the children can be easily accessed.\n*/\n\nexport enum TAG {\n    LINE = \"line\",\n    CIRCLE = \"circle\",\n    TEXTVAR = \"textvar\",\n    \n    // prefix\n    ROW_ = \"row_\",\n    COL_ = \"col_\",\n    \n    // arrow\n    ARROW_LINE = \"arrow_line\",\n    ARROW_HEAD = \"arrow_head\",\n    \n    // table\n    TABLE = \"table\",\n    CONTAIN_TABLE = \"contain_table\",\n    TABLE_CELL = \"table_cell\",\n    TABLE_CONTENT = \"table_content\",\n    \n    //graph\n    GRAPH_AXIS = \"graph_axis_line\",\n    GRAPH_TICK = \"graph_tick\",\n    GRAPH_TICK_LABEL = \"graph_tick_label\",\n    GRAPH_GRID = \"graph_grid\",\n}\n","import { Vector2, V2, Transform } from './vector.js';\nimport { BB_multiline } from './BBcode.js'\nimport { TAG } from './tag_names.js'\n\nfunction assert(condition : boolean, message : string) : void {\n    if (!condition) {\n        throw new Error(message || \"Assertion failed\");\n    }\n}\n\nexport enum DiagramType {\n    Polygon = 'polygon',\n    Curve   = 'curve',\n    Text    = 'text',\n    Image   = 'image',\n    Diagram = 'diagram',\n    MultilineText = 'multilinetext',\n}\n\nexport const DEFAULT_FONTSIZE = \"16\"; // 16px (12pt) is the web default\n\nexport type Anchor = \n    'top-left'    | 'top-center'    | 'top-right'    | \n    'center-left' | 'center-center' | 'center-right' | \n    'bottom-left' | 'bottom-center' | 'bottom-right' ;\n\n/**\n * Make sure that every function return a new Diagram\n * Diagram is immutable to the user\n */\n\nexport type DiagramStyle = {\n    \"stroke\"           : string,\n    \"fill\"             : string,\n    \"opacity\"          : string,\n    \"stroke-width\"     : string, // number\n    \"stroke-linecap\"   : string,\n    \"stroke-dasharray\" : string, // number[]\n    \"stroke-linejoin\"  : string,\n    \"vector-effect\"    : string,\n    // TODO : add more style\n}\n\nexport type TextData = {\n    \"text\"             : string,\n    \"font-family\"      : string,\n    \"font-size\"        : string,\n    \"font-weight\"      : string,\n    \"font-style\"       : string,\n    \"text-anchor\"      : string,\n    \"dy\"               : string, // used to be \"dominant-baseline\": string,\n    \"angle\"            : string,\n    \"font-scale\"       : string, // this is a custom attribute that is not present in SVG\n    // \"letter-spacing\"   : string,\n    // \"word-spacing\"     : string,\n    // \"text-decoration\"  : string,\n    // \"writing-mode\"     : string,\n}\n\nexport type ImageData = {\n    \"src\"    : string,\n}\n\ntype ExtraTspanStyle = {\n    \"dy\" : string,\n    \"dx\" : string,\n    \"textvar\" : boolean,\n    \"tag\" : string,\n}\ntype TextSpanData = {\n    \"text\"  : string,\n    \"style\" : Partial<TextData> & Partial<DiagramStyle> & Partial<ExtraTspanStyle>,\n}\nexport type MultilineTextData = {\n    \"content\" : TextSpanData[],\n    \"scale-factor\" : number,\n}\n\nfunction anchor_to_textdata(anchor : Anchor) : Partial<TextData> {\n    // TODO : might want to look at\n    // hanging vs text-before-edge\n    // ideographic vs text-after-edge\n    switch (anchor) {\n        case \"top-left\"      : return {\"text-anchor\" : \"start\" , \"dy\" : \"0.75em\"};\n        case \"top-center\"    : return {\"text-anchor\" : \"middle\", \"dy\" : \"0.75em\"};\n        case \"top-right\"     : return {\"text-anchor\" : \"end\"   , \"dy\" : \"0.75em\"};\n        case \"center-left\"   : return {\"text-anchor\" : \"start\" , \"dy\" : \"0.25em\"};\n        case \"center-center\" : return {\"text-anchor\" : \"middle\", \"dy\" : \"0.25em\"};\n        case \"center-right\"  : return {\"text-anchor\" : \"end\"   , \"dy\" : \"0.25em\"};\n        case \"bottom-left\"   : return {\"text-anchor\" : \"start\" , \"dy\" : \"-0.25em\"};\n        case \"bottom-center\" : return {\"text-anchor\" : \"middle\", \"dy\" : \"-0.25em\"};\n        case \"bottom-right\"  : return {\"text-anchor\" : \"end\"   , \"dy\" : \"-0.25em\"};\n        default: throw new Error(\"Unknown anchor \" + anchor);\n    }\n}\n\n\n/**\n* Diagram Class \n*\n* Diagram is a tree structure\n* Diagram can be a polygon, curve, text, image, or diagram\n* Polygon is a closed path\n* Curve is an open path\n* Diagram is a tree of Diagrams\n*/\nexport class Diagram {\n    type : DiagramType;\n    children : Diagram[] = [];\n    path : Path | undefined = undefined; // Polygon and Curve have a path\n    origin : Vector2 = new Vector2(0, 0); // position of the origin of the diagram\n    style         : Partial<DiagramStyle>      = {};\n    textdata      : Partial<TextData>          = {};\n    multilinedata : Partial<MultilineTextData> = {};\n    imgdata       : Partial<ImageData>         = {};\n    mutable       : boolean   = false;\n    tags : string[] = [];\n\n    constructor(type_ : DiagramType, \n        args : { \n            path?     : Path, \n            children? : Diagram[], \n            textdata? : Partial<TextData>, \n            imgdata?  : Partial<ImageData>,\n            multilinedata? : Partial<MultilineTextData>,\n            tags?     : string[],\n        } = {}\n    ) {\n        this.type = type_;\n        this.path = args.path;\n        if (args.children) { this.children = args.children; }\n        if (args.textdata) { this.textdata = args.textdata; }\n        if (args.imgdata)  { this.imgdata  = args.imgdata; }\n        if (args.tags)     { this.tags     = args.tags; }\n        if (args.multilinedata) { this.multilinedata = args.multilinedata; }\n    }\n\n    /**\n     * Turn the diagram into a mutable diagram\n     */\n    public mut() : Diagram {\n        this.mutable = true;\n        // make path mutable\n        if (this.path != undefined) this.path.mutable = true;\n        // make all of the children mutable\n        for (let i = 0; i < this.children.length; i++) this.children[i].mut();\n        return this;\n    }\n\n    public mut_parent_only() : Diagram {\n        this.mutable = true;\n        // make path mutable\n        if (this.path != undefined) this.path.mutable = true;\n        return this;\n    }\n\n    /**\n     * Create a copy of the diagram that is immutable\n     */\n    public immut() : Diagram {\n        let newd : Diagram = this.copy();\n        newd.mutable = false;\n        // make path immutable\n        if (this.path != undefined) this.path.mutable = false;\n        // make all of the children immutable\n        for (let i = 0; i < newd.children.length; i++) newd.children[i].immut();\n        return newd;\n    }\n\n    private static deep_setPrototypeOf(obj : any) : void {\n        Object.setPrototypeOf(obj, Diagram.prototype);\n        let objd : Diagram = obj;\n        // convert position and origin_offset to Vector2\n        objd.origin = Object.setPrototypeOf(objd.origin, Vector2.prototype);\n        // make sure all of the children are Diagram\n        for (let c = 0; c < objd.children.length; c++)\n            Diagram.deep_setPrototypeOf(objd.children[c]);\n\n        // set path to Path\n        if (objd.path != undefined) {\n            Object.setPrototypeOf(objd.path, Path.prototype);\n            objd.path = objd.path.copy();\n        }\n    }\n\n    /**\n     * Copy the diagram\n     * @return { Diagram }\n     */\n    public copy() : Diagram {\n        // do deepcopy with JSON\n        let newd : Diagram = JSON.parse(JSON.stringify(this));\n        // turn newd into Diagram\n        Diagram.deep_setPrototypeOf(newd);\n        return newd;\n    }\n\n    public copy_if_not_mutable() : Diagram {\n        return this.mutable ? this : this.copy();\n    }\n\n    /**\n     * Append tags to the diagram\n     */\n    public append_tags(tags : string | string[]) : Diagram {\n        let newd = this.copy_if_not_mutable();\n        if (!Array.isArray(tags)) tags = [tags];\n        for (let tag of tags){\n            if(!newd.tags.includes(tag)) newd.tags.push(tag);\n        }\n        return newd;\n    }\n    /**\n     * Remove tags from the diagram\n     */\n    public remove_tags(tags : string | string[]) : Diagram {\n        let newd = this.copy_if_not_mutable();\n        newd.tags = newd.tags.filter(t => !tags.includes(t));\n        return newd;\n    }\n    /**\n     * Reset all tags of the diagram\n     */\n    public reset_tags() : Diagram {\n        let newd = this.copy_if_not_mutable();\n        newd.tags = [];\n        return newd;\n    }\n    /**\n    * Check if the diagram contains a tag\n    */\n    public contain_tag(tag : string) : boolean {\n        return this.tags.includes(tag);\n    }\n    public contain_all_tags(tags : string[]) : boolean {\n        for (let tag of tags){\n            if (!this.tags.includes(tag)) return false;\n        }\n        return true;\n    }\n\n    /**\n     * Collect all children and subchildren of the diagram\n     * helper function for flatten()\n     */\n    private collect_children() : Diagram[] {\n        let children : Diagram[] = [];\n        if (this.type == DiagramType.Diagram) {\n            for (let c of this.children) {\n                children = children.concat(c.collect_children());\n            }\n        } else {\n            children.push(this);\n        }\n        return children;\n    }\n\n    /**\n     * Flatten the children structure of the diagram\n     * so that the diagram only has one level of children\n     * \\* implemented for performance reason\n     */\n    public flatten() : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        newd.children = newd.collect_children();\n        return newd;\n    }\n\n    /**\n     * Apply a function to the diagram\n     * @param func function to apply\n     * func takes in a diagram and returns a diagram\n     */\n    public apply(func : (d : Diagram) => Diagram) : Diagram {\n        return func(this.copy_if_not_mutable());\n    }\n\n    /**\n     * Apply a function to the diagram and all of its children recursively\n     * @param func function to apply\n     * func takes in a diagram and returns a diagram\n     */\n    public apply_recursive(func : (d : Diagram) => Diagram) : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        // apply to self\n        newd = func(newd);\n        // apply to children\n        for (let i = 0; i < newd.children.length; i++) {\n            newd.children[i] = newd.children[i].apply_recursive(func);\n        }\n        return newd;\n    }\n    \n    /**\n    * Apply a function to the diagram and all of its children recursively\n    * The function is only applied to the diagrams that contain a specific tag\n    * @param tags the tag to filter the diagrams\n    * @param func function to apply\n    * func takes in a diagram and returns a diagram\n    */ \n    public apply_to_tagged_recursive(tags : string | string[], func : (d : Diagram) => Diagram) : Diagram {\n        if (!Array.isArray(tags)) tags = [tags];\n        \n        let newd : Diagram = this.copy_if_not_mutable();\n        // if the diagram has the tag, apply the function to self\n        if (newd.contain_all_tags(tags)) newd = func(newd);\n        // apply to children\n        for (let i = 0; i < newd.children.length; i++) {\n            newd.children[i] = newd.children[i].apply_to_tagged_recursive(tags, func);\n        }\n        return newd;\n    }\n\n    /**\n     * Combine another diagram with this diagram\n     * @param diagrams a diagram or a list of diagrams\n     */\n    public combine(...diagrams : Diagram[]) : Diagram {\n        return diagram_combine(this, ...diagrams);\n    }\n\n    /**\n     * Convert the diagram to a curve\n     * If the diagram is a polygon, convert it to a curve\n     * If the diagram is a Diagram, convert all of the children to curves\n     */\n    public to_curve() : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (newd.type == DiagramType.Polygon) {\n            newd.type = DiagramType.Curve;\n        } else if (newd.type == DiagramType.Diagram) {\n            // newd.children = newd.children.map(c => c.to_curve());\n            for (let i = 0; i < newd.children.length; i++) \n                newd.children[i] = newd.children[i].to_curve();\n        }\n        return newd;\n    }\n\n    /**\n     * Convert the diagram to a polygon\n     * If the diagram is a curve, convert it to a polygon\n     * If the diagram is a Diagram, convert all of the children to polygons\n     */\n    public to_polygon() : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (newd.type == DiagramType.Curve) {\n            newd.type = DiagramType.Polygon;\n        } else if (newd.type == DiagramType.Diagram) {\n            // newd.children = newd.children.map(c => c.to_polygon());\n            for (let i = 0; i < newd.children.length; i++)\n                newd.children[i] = newd.children[i].to_polygon();\n        }\n        return newd;\n    }\n\n    /**\n     * Add points to the diagram\n     * if the diagram is a polygon or curve, add points to the path\n     * if the diagram is a diagram, add points to the last polygon or curve child\n     * @param points points to add\n     */\n    public add_points(points : Vector2[]) : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (newd.type == DiagramType.Polygon || newd.type == DiagramType.Curve) {\n            if (newd.path == undefined) { throw new Error(this.type + \" must have a path\"); }\n            newd.path = newd.path.add_points(points);\n        } else if (newd.type == DiagramType.Diagram) {\n            // add point to the last polygon or curve child\n            let last_child = newd.children[newd.children.length - 1];\n            newd.children[newd.children.length - 1] = last_child.add_points(points);\n        }\n        return newd;\n    }\n\n    private update_style(stylename : keyof Diagram['style'], stylevalue : string, excludedType? : DiagramType[]) : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (excludedType?.includes(newd.type)) { \n            return newd; \n        } else if (newd.type == DiagramType.Polygon || newd.type == DiagramType.Curve \n            || newd.type == DiagramType.Text || newd.type == DiagramType.Image \n            || newd.type == DiagramType.MultilineText\n        ) {\n            newd.style[stylename] = stylevalue;\n        } else if (newd.type == DiagramType.Diagram) {\n            // newd.children = newd.children.map(c => c.update_style(stylename, stylevalue, excludedType));\n            for (let i = 0; i < newd.children.length; i++)\n                newd.children[i] = newd.children[i].update_style(stylename, stylevalue, excludedType);\n        } else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + newd.type);\n        }\n        return newd;\n    }\n    \n    /* * Clone style from another diagram */\n    public clone_style_from(diagram : Diagram) : Diagram {\n        return this.apply_recursive(d => {\n            d.style = {...diagram.style};\n            return d;\n        });\n    }\n\n    public fill(color : string) : Diagram { \n        return this.update_style('fill', color, [DiagramType.Text]);\n    }\n    public stroke(color : string) : Diagram { \n        return this.update_style('stroke', color, [DiagramType.Text]);\n    }\n    public opacity(opacity : number) : Diagram {\n        return this.update_style('opacity', opacity.toString());\n    }\n    public strokewidth(width : number) : Diagram { \n        return this.update_style('stroke-width', width.toString(), [DiagramType.Text]);\n    }\n    public strokelinecap(linecap : 'butt' | 'round' | 'square') : Diagram {\n        return this.update_style('stroke-linecap', linecap);\n    }\n    public strokelinejoin(linejoin : 'arcs' | 'bevel' | 'miter' | 'miter-clip' | 'round') : Diagram {\n        return this.update_style('stroke-linejoin', linejoin);\n    }\n    public strokedasharray(dasharray : number[]) : Diagram {\n        return this.update_style('stroke-dasharray', dasharray.join(','));\n    }\n    public vectoreffect(vectoreffect : 'none' | 'non-scaling-stroke' | 'non-scaling-size' | 'non-rotation' | 'fixed-position'\n) : Diagram {\n        return this.update_style('vector-effect', vectoreffect);\n    }\n\n    public textfill(color : string) : Diagram {\n        return this.update_style('fill', color, [DiagramType.Polygon, DiagramType.Curve]);\n    }\n    public textstroke(color : string) : Diagram {\n        return this.update_style('stroke', color, [DiagramType.Polygon, DiagramType.Curve]);\n    }\n    public textstrokewidth(width : number) : Diagram {\n        return this.update_style('stroke-width', width.toString(), [DiagramType.Polygon, DiagramType.Curve]);\n    }\n\n\n    private update_textdata(textdataname : keyof Diagram['textdata'], textdatavalue : string) : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (newd.type == DiagramType.Text || newd.type == DiagramType.MultilineText) {\n            newd.textdata[textdataname] = textdatavalue;\n        } else if (newd.type == DiagramType.Diagram) {\n            // newd.children = newd.children.map(c => c.update_textdata(textdataname, textdatavalue));\n            for (let i = 0; i < newd.children.length; i++)\n                newd.children[i] = newd.children[i].update_textdata(textdataname, textdatavalue);\n        } else if (newd.type == DiagramType.Polygon || newd.type == DiagramType.Curve) {\n            // do nothing\n        } else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + newd.type);\n        }\n        return newd;\n    }\n    public fontfamily(fontfamily : string) : Diagram {\n        return this.update_textdata('font-family', fontfamily);\n    }\n    public fontstyle(fontstyle : string) : Diagram {\n        return this.update_textdata('font-style', fontstyle);\n    }\n    public fontsize(fontsize : number) : Diagram {\n        return this.update_textdata('font-size', fontsize.toString());\n    }\n    public fontweight(fontweight : 'normal' | 'bold' | 'bolder' | 'lighter' | number ) : Diagram {\n        return this.update_textdata('font-weight', fontweight.toString());\n    }\n    public fontscale(fontscale : number | 'auto') : Diagram {\n        return this.update_textdata('font-scale', fontscale.toString());\n    }\n    public textanchor(textanchor : 'start' | 'middle' | 'end' ) : Diagram {\n        return this.update_textdata('text-anchor', textanchor);\n    }\n    public textdy(dy : string) : Diagram {\n        return this.update_textdata('dy', dy);\n    }\n    public textangle(angle : number){\n        return this.update_textdata('angle', angle.toString());\n    }\n    public text_tovar() : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (newd.type == DiagramType.Text) {\n            newd = newd.append_tags(TAG.TEXTVAR);\n        } else if (newd.type == DiagramType.Diagram) {\n            // newd.children = newd.children.map(c => c.text_tovar());\n            for (let i = 0; i < newd.children.length; i++)\n                newd.children[i] = newd.children[i].text_tovar();\n        }\n        return newd;\n    }\n    public text_totext() : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (newd.type == DiagramType.Text) {\n            newd = newd.remove_tags('textvar');\n        } else if (newd.type == DiagramType.Diagram) {\n            // newd.children = newd.children.map(c => c.text_totext());\n            for (let i = 0; i < newd.children.length; i++)\n                newd.children[i] = newd.children[i].text_totext();\n        }\n        return newd;\n    }\n            \n\n\n    /**\n     * Get the bounding box of the diagram\n     * @returns [min, max] where min is the top left corner and max is the bottom right corner\n     */\n    public bounding_box() : [Vector2, Vector2] {\n        let minx = Infinity, miny = Infinity;\n        let maxx = -Infinity, maxy = -Infinity;\n        if (this.type == DiagramType.Diagram){\n                for (let c = 0; c < this.children.length; c++){\n                    let child = this.children[c];\n                    let [min, max] = child.bounding_box();\n                    minx = Math.min(minx, min.x);\n                    miny = Math.min(miny, min.y);\n                    maxx = Math.max(maxx, max.x);\n                    maxy = Math.max(maxy, max.y);\n                }\n                return [new Vector2(minx, miny), new Vector2(maxx, maxy)];\n        }\n        else if (this.type == DiagramType.Curve || this.type == DiagramType.Polygon \n            || this.type == DiagramType.Image){\n                if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\n                for (let p = 0; p < this.path.points.length; p++) {\n                    let point = this.path.points[p];\n                    minx = Math.min(minx, point.x);\n                    miny = Math.min(miny, point.y);\n                    maxx = Math.max(maxx, point.x);\n                    maxy = Math.max(maxy, point.y);\n                }\n                return [new Vector2(minx, miny), new Vector2(maxx, maxy)];\n        } \n        else if (this.type == DiagramType.Text || this.type == DiagramType.MultilineText){\n            return [this.origin.copy(), this.origin.copy()];\n        }\n        else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\n        }\n    }\n\n    /**\n     * Transform the diagram by a function\n     * @param transform_function function to transform the diagram\n     */\n    public transform(transform_function : (p : Vector2) => Vector2) : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        // transform all children\n        // newd.children = newd.children.map(c => c.transform(transform_function));\n        for (let i = 0; i < newd.children.length; i++)\n            newd.children[i] = newd.children[i].transform(transform_function);\n        // transform path\n        if (newd.path != undefined) newd.path = newd.path.transform(transform_function);\n        // transform origin\n        newd.origin = transform_function(newd.origin);\n        return newd;\n    }\n\n    /**\n     * Translate the diagram by a vector\n     * @param v vector to translate\n     */\n    public translate(v : Vector2) : Diagram {\n        return this.transform(Transform.translate(v));\n    }\n\n    /**\n     * move the diagram to a position\n     * @param v position to move to (if left undefined, move to the origin)\n     */\n    public position(v : Vector2 = new Vector2(0,0)) : Diagram {\n        let dv = v.sub(this.origin)\n        return this.translate(dv);\n    }\n\n    /**\n     * Rotate the diagram by an angle around a pivot\n     * @param angle angle to rotate\n     * @param pivot pivot point, if left undefined, rotate around the origin\n     */\n    public rotate(angle : number, pivot : Vector2 | undefined = undefined) : Diagram {\n        if (pivot == undefined) { pivot = this.origin; }\n        return this.transform(Transform.rotate(angle, pivot));\n    }\n\n    /**\n     * Scale the diagram by a scale around a origin\n     * @param scale scale to scale (x, y)\n     * @param origin origin point, if left undefined, scale around the origin\n     */\n    public scale(scale : Vector2 | number, origin? : Vector2) : Diagram {\n        if (origin == undefined) { origin = this.origin; }\n        if (typeof scale == 'number') { scale = new Vector2(scale, scale); }\n        return this.transform(Transform.scale(scale, origin));\n    }\n\n    /**\n     * Scale texts contained in the diagram by a scale\n     * @param scale scaling factor\n     */\n    public scaletext(scale : number) : Diagram {\n        return this.apply_recursive(d => {\n            switch (d.type) {\n                case DiagramType.Text: {\n                    let fontsize = parseFloat(d.textdata['font-size'] || DEFAULT_FONTSIZE);\n                    let newd = d.copy_if_not_mutable();\n                    newd.textdata['font-size'] = (fontsize * scale).toString();\n                    return newd;\n                }\n                case DiagramType.MultilineText: {\n                    let newd = d.copy_if_not_mutable();\n                    newd.multilinedata['scale-factor'] = (newd.multilinedata['scale-factor'] || 1) * scale;\n                    return newd;\n                }\n                default: return d;\n            }\n        });\n    }\n\n    /**\n     * Skew the diagram in the x direction by an angle around a base\n     * @param angle angle to skew\n     * @param base base point, if left undefined, skew around the origin\n     */\n    public skewX(angle : number, base? : Vector2) : Diagram {\n        if (base == undefined) { base = this.origin; }\n        return this.transform(Transform.skewX(angle, base.y));\n    }\n\n    /**\n     * Skew the diagram in the y direction by an angle around a base\n     * @param angle angle to skew\n     * @param base base point, if left undefined, skew around the origin\n     */\n    public skewY(angle : number, base? : Vector2) : Diagram {\n        if (base == undefined) { base = this.origin; }\n        return this.transform(Transform.skewY(angle, base.x));\n    }\n\n    /**\n     * Reflect the diagram over a point\n     * @param p point to reflect over\n     */\n    public reflect_over_point(p : Vector2) {\n        return this.transform(Transform.reflect_over_point(p));\n    }\n\n    /**\n     * Reflect the diagram over a line defined by two points\n     * @param p1 point on the line\n     * @param p2 point on the line\n     */\n    public reflect_over_line(p1 : Vector2, p2 : Vector2) {\n        return this.transform(Transform.reflect_over_line(p1, p2));\n    }\n\n    /**\n     * Reflect the diagram\n     * if given 0 arguments, reflect over the origin\n     * if given 1 argument, reflect over a point p1\n     * if given 2 arguments, reflect over a line defined by two points p1 and p2\n     * @param p1 point\n     * @param p2 point\n     */\n    public reflect(p1? : Vector2, p2? : Vector2){\n        if (p1 == undefined && p2 == undefined) {\n            return this.reflect_over_point(this.origin);\n        } else if (p1 != undefined && p2 == undefined) {\n            return this.reflect_over_point(p1);\n        } else if (p1 != undefined && p2 != undefined) {\n            return this.reflect_over_line(p1, p2);\n        } else {\n            throw new Error(\"Unreachable\");\n        }\n    }\n\n    /**\n     * Vertical flip\n     * Reflect the diagram over a horizontal line y = a\n     * @param a y value of the line\n     * if left undefined, flip over the origin\n     */\n    public vflip(a? : number) {\n        if (a == undefined) { a = this.origin.y; }\n        return this.reflect(new Vector2(0, a), new Vector2(1, a));\n    }\n\n    /**\n     * Horizontal flip\n     * Reflect the diagram over a vertical line x = a\n     * @param a x value of the line\n     * if left undefined, flip over the origin\n     */\n    public hflip(a? : number){\n        if (a == undefined) { a = this.origin.x; }\n        return this.reflect(new Vector2(a, 0), new Vector2(a, 1));\n    }\n\n\n    /**\n     * Get the position of the anchor of the diagram\n     * @param anchor anchor to get, anchors can be\n     *   'top-left', 'top-center', 'top-right'\n     *   'center-left', 'center-center', 'center-right'\n     *   'bottom-left', 'bottom-center', 'bottom-right'\n     * @returns the position of the anchor\n     */\n    public get_anchor(anchor : Anchor) : Vector2 {\n        let [min, max] = this.bounding_box();\n        let minx = min.x, miny = min.y;\n        let maxx = max.x, maxy = max.y;\n        let midx = (minx + maxx) / 2;\n        let midy = (miny + maxy) / 2;\n        switch (anchor) {\n            case \"top-left\"      : return new Vector2(minx, maxy);\n            case \"top-center\"    : return new Vector2(midx, maxy);\n            case \"top-right\"     : return new Vector2(maxx, maxy);\n            case \"center-left\"   : return new Vector2(minx, midy);\n            case \"center-center\" : return new Vector2(midx, midy);\n            case \"center-right\"  : return new Vector2(maxx, midy);\n            case \"bottom-left\"   : return new Vector2(minx, miny);\n            case \"bottom-center\" : return new Vector2(midx, miny);\n            case \"bottom-right\"  : return new Vector2(maxx, miny);\n            default: throw new Error(\"Unknown anchor \" + anchor);\n        }\n    }\n\n    /**\n     * Move the origin of the diagram to a position or anchor\n     * @param pos position to move the origin to (Vector2), or anchor to move the origin to.\n     * anchors can be\n     *  'top-left', 'top-center', 'top-right'\n     *  'center-left', 'center-center', 'center-right'\n     *  'bottom-left', 'bottom-center', 'bottom-right'\n     * * for texts, use `move_origin_text()`\n     */\n    public move_origin(pos : Vector2 | Anchor) : Diagram {\n        let newd : Diagram = this.copy_if_not_mutable();\n        if (pos instanceof Vector2) {\n            newd.origin = pos;\n        } else {\n            newd.origin = newd.get_anchor(pos);\n        }\n        return newd;\n    }\n\n    /**\n     * Move the origin of text diagram to an anchor\n     * @param anchor anchor to move the origin to.\n     * anchors can be\n     * 'top-left', 'top-center', 'top-right'\n     * 'center-left', 'center-center', 'center-right'\n     * 'bottom-left', 'bottom-center', 'bottom-right'\n     */\n    private __move_origin_text(anchor : Anchor) : Diagram {\n        // for text, use text-anchor and dominant-baseline\n        let newd = this.copy_if_not_mutable();\n        let textdata = anchor_to_textdata(anchor);\n        newd.textdata['text-anchor'] = textdata['text-anchor'];\n        newd.textdata['dy'] = textdata['dy'];\n        return newd;\n    }\n\n    /**\n     * Move the origin of text diagram to a position\n     * @param anchor anchor to move the origin to.\n     * anchors can be\n     * 'top-left', 'top-center', 'top-right'\n     * 'center-left', 'center-center', 'center-right'\n     * 'bottom-left', 'bottom-center', 'bottom-right'\n     *\n     */\n    public move_origin_text(anchor : Anchor) : Diagram {\n        let newd = this.copy_if_not_mutable();\n        if (this.type == DiagramType.Text || this.type == DiagramType.MultilineText) {\n            newd = newd.__move_origin_text(anchor);\n        } else if (this.type == DiagramType.Diagram) {\n            //newd.children = newd.children.map(c => c.move_origin_text(anchor));\n            for (let i = 0; i < newd.children.length; i++)\n                newd.children[i] = newd.children[i].move_origin_text(anchor);\n        } else {\n            // do nothing\n        }\n        return newd;\n    }\n\n    public path_length() : number {\n        if (this.type == DiagramType.Diagram) {\n            let length = 0;\n            for (let c = 0; c < this.children.length; c++) {\n                length += this.children[c].path_length();\n            }\n            return length;\n        } else if (this.type == DiagramType.Curve || this.type == DiagramType.Polygon) {\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\n            return this.path.length();\n        } else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\n        }\n    }\n    \n    /**\n    * Reverse the order of the points in the path\n    */\n    public reverse_path() {\n        let newd = this.copy_if_not_mutable();\n        if (newd.path) {\n            newd.path = newd.path?.reverse();\n        }\n        return newd;\n    }\n\n    /**\n     * Get the point on the path at t\n     * Path can be described parametrically in the form of (x(t), y(t))\n     * Path starts at t=0 and ends at t=1\n     * @param t parameter\n     * @param segment_index (only works for polygon and curves)\n     * If segment_index (n) is defined, get the point at the nth segment\n     * If segment_index (n) is defined, t can be outside of [0, 1] and will return the extrapolated point\n     * @returns the position of the point\n     */\n    public parametric_point(t : number, segment_index? : number) : Vector2 {\n        if (this.type == DiagramType.Diagram) {\n            // use entire length, use the childrens\n            let cumuative_length = [];\n            let length   = 0.0;\n            for (let c = 0; c < this.children.length; c++) {\n                length += this.children[c].path_length();\n                cumuative_length.push(length);\n            }\n            let total_length = length;\n            let cumulative_t = cumuative_length.map(l => l / total_length);\n\n            // figure out which children t is in\n            for (let i = 0; i < cumulative_t.length; i++) {\n                if (t <= cumulative_t[i]) {\n                    let child_id = i;\n\n                    let prev_t = (i == 0) ? 0 : cumulative_t[i-1];\n                    let segment_t = (t - prev_t) / (cumulative_t[i] - prev_t);\n                    return this.children[child_id].parametric_point(segment_t);\n                }\n            }\n            throw Error(\"Unreachable\");\n        } else if (this.type == DiagramType.Curve) {\n            // get the point on the path\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\n            return this.path.parametric_point(t, false, segment_index);\n        } else if (this.type == DiagramType.Polygon) {\n            // get the point on the path\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\n            return this.path.parametric_point(t, true, segment_index);\n        } else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\n        }\n    }\n\n    public debug_bbox() : Diagram {\n        // TODO : let user supply the styling function\n        let style_bbox = (d : Diagram) => {\n            return d.fill('none').stroke('gray').strokedasharray([5,5])\n        };\n\n        let [min, max] = this.bounding_box();\n        let rect_bbox = polygon([\n            new Vector2(min.x, min.y), new Vector2(max.x, min.y), \n            new Vector2(max.x, max.y), new Vector2(min.x, max.y)\n        ]).apply(style_bbox);\n\n        let origin_x = text('+').position(this.origin)\n\n        return rect_bbox.combine(origin_x);\n    }\n\n    public debug(show_index : boolean = true) : Diagram {\n        // TODO : let user supply the styling function\n        let style_path = (d : Diagram) => {\n            return d.fill('none').stroke('red').strokedasharray([5,5])\n        };\n        let style_index = (d : Diagram) => {\n            let bg = d.textfill('white').textstroke('white').textstrokewidth(5);\n            let dd = d.fill('black');\n            return bg.combine(dd);\n        };\n\n        // handle each type separately\n        if (this.type == DiagramType.Diagram) {\n            return this.debug_bbox();\n        } \n        else if (this.type == DiagramType.Text){\n            // return empty at diagram origin\n            return empty(this.origin);\n        }\n        else if (this.type == DiagramType.Polygon || this.type == DiagramType.Curve \n            || this.type == DiagramType.Image){\n            let f_obj = this.type == DiagramType.Polygon || DiagramType.Image ? polygon : curve;\n\n            let deb_bbox = this.debug_bbox();\n\n            if (this.path == undefined) { throw new Error(this.type + \" must have a path\"); }\n            let deb_object = f_obj(this.path.points).apply(style_path);\n\n            // if show_index is false, return only the bbox and polygon\n            if (show_index == false) { return deb_bbox.combine(deb_object); }\n\n            // iterate for all path points\n            let points = this.path.points;\n            // let point_texts = points.map((p, i) => text(i.toString()).position(p).apply(style_index));\n            let point_texts : Diagram[] = [];\n            let prev_point : Vector2 | undefined = undefined;\n\n            let [min, max] = this.bounding_box();\n            let minimum_dist_tolerance = Math.min(max.x - min.x, max.y - min.y) / 10;\n            for (let i = 0; i < points.length; i++) {\n                // push to point_texts only if far enough from prev_point\n                let dist_to_prev = prev_point == undefined ? Infinity : points[i].sub(prev_point).length();\n                if (dist_to_prev < minimum_dist_tolerance) continue;\n\n                point_texts.push(text(i.toString()).position(points[i]).apply(style_index));\n                prev_point = points[i];\n            }\n\n            return deb_bbox.combine(deb_object,...point_texts);\n        }\n        else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + this.type);\n        }\n    }\n}\n\nexport class Path {\n    mutable : boolean = false;\n    constructor(public points : Vector2[]) { }\n\n    copy() : Path {\n        let newpoints = this.points.map(p => new Vector2(p.x,p.y));\n        return new Path(newpoints);\n    }\n    copy_if_not_mutable() : Path {\n        return this.mutable ? this : this.copy();\n    }\n    \n    /**\n    * Reverse the order of the points in the path\n    */\n    public reverse() : Path {\n        let newp : Path = this.copy_if_not_mutable();\n        newp.points = newp.points.reverse();\n        return newp;\n    }\n\n    /**\n     * Get the length of the path\n     */\n    public length() : number {\n        let length = 0;\n        for (let i = 1; i < this.points.length; i++) {\n            length += this.points[i].sub(this.points[i-1]).length();\n        }\n        return length;\n    }\n\n    /**\n     * add points to the path\n     * @param points points to add\n     */\n    public add_points(points : Vector2[]) : Path {\n        let newp : Path = this.copy_if_not_mutable();\n        newp.points = newp.points.concat(points);\n        return newp;\n    }\n\n    /**\n     * Get the point on the path at t \n     * Path can be described parametrically in the form of (x(t), y(t))\n     * Path starts at t=0 and ends at t=1\n     * @param t parameter\n     * @param closed if true, the path is closed\n     * @param segment_index \n     * If `segment_index` (n) is defined, get the point at the nth segment.\n     * If `segment_index` (n) is defined, t can be outside of [0, 1] and will return the extrapolated point.\n     * @returns the position of the point\n    */\n    public parametric_point(t : number, closed : boolean = false, segment_index? : number) : Vector2 {\n        let extended_points = this.points;\n        if (closed) extended_points = this.points.concat(this.points[0]);\n        // for a closed path, there's an extra segment connecting the last point to the first point\n\n        if (segment_index == undefined) { \n            if (t < 0 || t > 1) { throw Error(\"t must be between 0 and 1\"); }\n            // use entire length\n            let cumulative_length = [];\n            let length   = 0.0;\n            for (let i = 1; i < extended_points.length; i++) {\n                length += extended_points[i].sub(extended_points[i-1]).length();\n                cumulative_length.push(length);\n            }\n            let total_length = length;\n            let cumulative_t = cumulative_length.map(l => l / total_length);\n            // figure out which segment t is in\n            for (let i = 0; i < cumulative_t.length; i++) {\n                if (t <= cumulative_t[i]) {\n                    let segment_id = i;\n\n                    let prev_t = (i == 0) ? 0 : cumulative_t[i-1];\n                    let segment_t = (t - prev_t) / (cumulative_t[i] - prev_t);\n                    return this.parametric_point(segment_t, closed, segment_id);\n                }\n            }\n            // segment must have been retrieved at this point\n            throw Error(\"Unreachable\");\n        } else {\n            // take nth segment\n            if (segment_index < 0 || segment_index > extended_points.length - 1) { \n                throw Error(\"segment_index must be between 0 and n-1\"); \n            }\n            let start = extended_points[segment_index];\n            let end   = extended_points[segment_index + 1];\n            let dir : Vector2 = end.sub(start);\n            return start.add(dir.scale(t));\n        }\n    }\n\n    /**\n     * Tranfrom the path by a function\n     * @param transform_function function to transform the path\n     */\n    public transform(transform_function : (p : Vector2) => Vector2) : Path {\n        let newp : Path = this.copy_if_not_mutable();\n        // transform all the points\n        // newp.points = newp.points.map(p => transform_function(p));\n        for (let i = 0; i < newp.points.length; i++) newp.points[i] = transform_function(newp.points[i]);\n        return newp;\n    }\n}\n\n/**\n * Combine multiple diagrams into one diagram\n * @param diagrams list of diagrams to combine\n * @returns a diagram\n */\nexport function diagram_combine(...diagrams : Diagram[]) : Diagram {\n    if (diagrams.length == 0) { return empty(); }\n    let newdiagrams = diagrams.map(d => d.copy_if_not_mutable());\n\n    // check if all children is mutable\n    // if they are, then set the new diagram to be mutable\n    let all_children_mutable = true;\n    for (let i = 0; i < newdiagrams.length; i++) {\n        if (!newdiagrams[i].mutable) { \n            all_children_mutable = false; \n            break; \n        }\n    }\n\n    let newd = new Diagram(DiagramType.Diagram, {children : newdiagrams});\n    newd.mutable = all_children_mutable;\n    return newd.move_origin(diagrams[0].origin);\n    // return newd.move_origin(Anchor.CenterCenter);\n    // i think it's better to keep the origin at the origin of the first diagram\n}\n\n// ====== function helpers to create primitives =========\n\n\n/**\n * Create a curve from a list of points\n * @param points list of points\n * @returns a curve diagram\n */\nexport function curve(points : Vector2[]) : Diagram {\n    let path : Path = new Path(points);\n    let curve = new Diagram(DiagramType.Curve, {path : path});\n    return curve;\n}\n\n/**\n * Create a line from start to end \n * @param start start point\n * @param end end point\n * @returns a line diagram\n */\nexport function line(start : Vector2, end : Vector2) : Diagram {\n    return curve([start, end]).append_tags(TAG.LINE);\n}\n\n\n/**\n * Create a polygon from a list of points\n * @param points list of points\n * @param names list of names for each path\n * @returns a polygon diagram\n */\nexport function polygon(points: Vector2[]) : Diagram {\n    assert(points.length >= 3, \"Polygon must have at least 3 points\");\n    let path : Path = new Path(points);\n\n    // create diagram\n    let polygon = new Diagram(DiagramType.Polygon, {path : path});\n    return polygon;\n}\n\n/**\n * Create an empty diagram, contain just a single point\n * @param v position of the point\n * @returns an empty diagram\n */\nexport function empty(v : Vector2 = V2(0,0)) : Diagram {\n    let emp = curve([v])\n    return emp;\n}\n\n/**\n * Create a text diagram\n * @param str text to display\n * @returns a text diagram\n */\nexport function text(str : string) : Diagram {\n    let dtext = new Diagram(DiagramType.Text, {\n        textdata : { text : str, \"font-size\" : DEFAULT_FONTSIZE },\n        path : new Path([new Vector2(0, 0)]),\n    });\n    return dtext;\n}\n\n/**\n * Create an image diagram\n * @param src image source\n * @param width width of the image\n * @param height height of the image\n * @returns an image diagram\n */\nexport function image(src : string, width : number, height: number){\n    let imgdata : ImageData = { src }\n    // path: bottom-left, bottom-right, top-right, top-left\n    let path    : Path      = new Path([\n        V2(-width/2, -height/2), V2(width/2, -height/2),\n        V2(width/2, height/2), V2(-width/2, height/2),\n    ]);\n    let img = new Diagram(DiagramType.Image, {imgdata : imgdata, path : path});\n    return img;\n}\n\n/**\n * Create a multiline text diagram\n * @param strs list of text to display\n */\nexport function multiline(spans : ([string] | [string,Partial<TextData>])[]) : Diagram {\n    let tspans : TextSpanData[] = [];\n    for (let i = 0; i < spans.length; i++) {\n        let text = spans[i][0];\n        let style = spans[i][1] ?? {};\n        tspans.push({text, style});\n    }\n    let dmulti = new Diagram(DiagramType.MultilineText, {\n        multilinedata : { content : tspans, \"scale-factor\" : 1 },\n        path : new Path([new Vector2(0, 0)]),\n    });\n    return dmulti;\n}\n\nexport function multiline_bb(bbstr : string, linespace? : string) : Diagram {\n    let tspans : TextSpanData[] = BB_multiline.from_BBCode(bbstr,linespace) as TextSpanData[];\n    let dmulti = new Diagram(DiagramType.MultilineText, {\n        multilinedata : { content : tspans, \"scale-factor\" : 1 },\n        path : new Path([new Vector2(0, 0)]),\n    });\n    return dmulti;\n}\n\n\n// END primitives =============================\n\nexport function diagram_from_jsonstring(str : string) : Diagram {\n    try {\n        // turn str into JSON object\n        let d : Diagram = JSON.parse(str);\n        // turn d into Diagram\n        Object.setPrototypeOf(d, Diagram.prototype);\n        d = d.copy();\n        return d;\n    } catch (e) {\n        // if there's a mistake, return an empty diagram\n        console.warn(e);\n        return empty(new Vector2(0,0));\n    }\n}\n","import { Vector2, V2 } from \"./vector.js\";\n\n/**\n * Helper function to convert from degrees to radians\n */\nexport function to_radian(angle: number) : number {\n    return angle * Math.PI / 180;\n}\n\n/**\n * Helper function to convert from radians to degrees\n */\nexport function to_degree(angle: number) : number {\n    return angle * 180 / Math.PI;\n}\n\n\n\nexport function array_repeat<T>(arr : T[], len : number) : T[] {\n    let new_arr : T[] = [];\n    for (let i = 0; i < len; i++) {\n        new_arr.push(arr[i % arr.length]);\n    }\n    return new_arr;\n}\n\n/**\n * Create a equivalently spaced array of numbers from start to end (inclusive) \n * [start, end]\n * @param start start value\n * @param end end value\n * @param n number of points\n */\nexport function linspace(start: number, end: number, n: number = 100) : number[] {\n    let result = [];\n    let step = (end - start) / (n - 1);\n    for (let i = 0; i < n; i++) {\n        result.push(start + step * i);\n    }\n    return result;\n}\n\n/**\n * Create a equivalently spaced array of numbers from start to end (exclusice) \n * [start, end)\n * @param start start value\n * @param end end value\n * @param n number of points\n */\nexport function linspace_exc(start: number, end: number, n: number = 100) : number[] {\n    let result = [];\n    let step = (end - start) / n;\n    for (let i = 0; i < n; i++) {\n        result.push(start + step * i);\n    }\n    return result;\n}\n\n/**\n * Create a equivalently spaced array of numbers from start to end (exclusive)\n * [start, end)\n * @param start start value\n * @param end end value\n * @param step step size\n */\nexport function range(start: number, end: number, step: number = 1) : number[] {\n    // step cannot be 0 and cannot be in the wrong direction\n    if (step == 0) return [];\n    let n = Math.floor((end - start) / step);\n    if (n <= 0) return [];\n\n    let result = [];\n    if (step > 0){\n        for (let i = start; i < end; i += step) {\n            result.push(i);\n        }\n    } else {\n        for (let i = start; i > end; i += step) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\n/**\n * Create a equivalently spaced array of numbers from start to end (inc)\n * [start, end]\n * @param start start value\n * @param end end value\n * @param step step size\n */\nexport function range_inc(start: number, end: number, step: number = 1) : number[] {\n    // step cannot be 0 and cannot be in the wrong direction\n    if (step == 0) return [];\n    let n = Math.floor((end - start) / step);\n    if (n <= 0) return [];\n\n    let result = [];\n    if (step > 0){\n        for (let i = start; i <= end; i += step) {\n            result.push(i);\n        }\n    } else {\n        for (let i = start; i >= end; i += step) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n\n/**\n * Transpose a 2D array\n * if the array is not a rectangle, the transposed array will be padded with undefined\n * @param arr 2D array\n * @returns transposed 2D array\n */\nexport function transpose<T>(arr : T[][]) : (T|undefined)[][] {\n    let result : T[][] = [];\n    let n = Math.max(...arr.map(a => a.length));\n    for (let i = 0; i < n; i++) {\n        result.push([]);\n        for (let j = 0; j < arr.length; j++) {\n            result[i].push(arr[j][i]);\n        }\n    }\n    return result;\n}\n\n/* @return [top, right, bottom, left] */\nexport function expand_directional_value(padding : number | number[]) : [number,number,number,number] {\n    let p = padding;\n    if (typeof p === 'number') return [p,p,p,p];\n    if (!Array.isArray(p)) return [0,0,0,0];\n    if (p.length === 1) return [p[0], p[0], p[0], p[0]];\n    if (p.length === 2) return [p[0], p[1], p[0], p[1]];\n    if (p.length === 3) return [p[0], p[1], p[2], p[1]];\n    if (p.length >= 4)  return [p[0], p[1], p[2], p[3]];\n    return [0,0,0,0];\n}\n","// color from matpltlib's tab20\nexport const tab_color : {[key : string]: string} = {\n    'blue'        : '#1f77b4',\n    'lightblue'   : '#aec7e8',\n    'orange'      : '#ff7f0e',\n    'lightorange' : '#ffbb78',\n    'green'       : '#2ca02c',\n    'lightgreen'  : '#98df8a',\n    'red'         : '#d62728',\n    'lightred'    : '#ff9896',\n    'purple'      : '#9467bd',\n    'lightpurple' : '#c5b0d5',\n    'brown'       : '#8c564b',\n    'lightbrown'  : '#c49c94',\n    'pink'        : '#e377c2',\n    'lightpink'   : '#f7b6d2',\n    'grey'        : '#7f7f7f',\n    'lightgrey'   : '#c7c7c7',\n    'gray'        : '#7f7f7f',\n    'lightgray'   : '#c7c7c7',\n    'olive'       : '#bcbd22',\n    'lightolive'  : '#dbdb8d',\n    'cyan'        : '#17becf',\n    'lightcyan'   : '#9edae5',\n}\n\nexport function get_color(colorname : string, palette : {[key : string]: string}) : string {\n    return palette[colorname] ?? colorname;\n}\n","const unicode_mathematical_italic = {\n    'A' : '𝐴', 'B' : '𝐵', 'C' : '𝐶', 'D' : '𝐷', 'E' : '𝐸',\n    'F' : '𝐹', 'G' : '𝐺', 'H' : '𝐻', 'I' : '𝐼', 'J' : '𝐽',\n    'K' : '𝐾', 'L' : '𝐿', 'M' : '𝑀', 'N' : '𝑁', 'O' : '𝑂',\n    'P' : '𝑃', 'Q' : '𝑄', 'R' : '𝑅', 'S' : '𝑆', 'T' : '𝑇',\n    'U' : '𝑈', 'V' : '𝑉', 'W' : '𝑊', 'X' : '𝑋', 'Y' : '𝑌', 'Z' : '𝑍',\n    'a' : '𝑎', 'b' : '𝑏', 'c' : '𝑐', 'd' : '𝑑', 'e' : '𝑒',\n    'f' : '𝑓', 'g' : '𝑔', 'h' : 'ℎ', 'i' : '𝑖', 'j' : '𝑗',\n    'k' : '𝑘', 'l' : '𝑙', 'm' : '𝑚', 'n' : '𝑛', 'o' : '𝑜',\n    'p' : '𝑝', 'q' : '𝑞', 'r' : '𝑟', 's' : '𝑠', 't' : '𝑡',\n    'u' : '𝑢', 'v' : '𝑣', 'w' : '𝑤', 'x' : '𝑥', 'y' : '𝑦', 'z' : '𝑧',\n\n    'Α' : '𝛢', 'Β' : '𝛣', 'Γ' : '𝛤', 'Δ' : '𝛥', 'Ε' : '𝛦',\n    'Ζ' : '𝛧', 'Η' : '𝛨', 'Θ' : '𝛩', 'Ι' : '𝛪', 'Κ' : '𝛫',\n    'Λ' : '𝛬', 'Μ' : '𝛭', 'Ν' : '𝛮', 'Ξ' : '𝛯', 'Ο' : '𝛰',\n    'Π' : '𝛱', 'Ρ' : '𝛲', 'Σ' : '𝛴', 'Τ' : '𝛵', 'Υ' : '𝛶',\n    'Φ' : '𝛷', 'Χ' : '𝛸', 'Ψ' : '𝛹', 'Ω' : '𝛺',\n    'α' : '𝛼', 'β' : '𝛽', 'γ' : '𝛾', 'δ' : '𝛿', 'ε' : '𝜀',\n    'ζ' : '𝜁', 'η' : '𝜂', 'θ' : '𝜃', 'ι' : '𝜄', 'κ' : '𝜅',\n    'λ' : '𝜆', 'μ' : '𝜇', 'ν' : '𝜈', 'ξ' : '𝜉', 'ο' : '𝜊',\n    'π' : '𝜋', 'ρ' : '𝜌', 'ς' : '𝜍', 'σ' : '𝜎', 'τ' : '𝜏', 'υ' : '𝜐', \n    'φ' : '𝜑', 'χ' : '𝜒', 'ψ' : '𝜓', 'ω' : '𝜔',\n    'ϑ' : '𝜗', 'ϰ' : '𝜘', 'ϕ' : '𝜙', 'ϱ' : '𝜚', 'ϖ' : '𝜛',\n    // '.' : '𝛻', '.' : '𝛳', '.' : '𝜕', '.' : '𝜖',\n}\nconst reversed_unicode_mathematical_italic = Object.fromEntries(\n    Object.entries(unicode_mathematical_italic).map(([k,v]) => [v,k])\n);\n\nconst latex_greek  = {\n    '\\\\alpha'   : 'α', '\\\\beta'    : 'β', '\\\\gamma'   : 'γ', '\\\\delta'   : 'δ', '\\\\epsilon' : 'ε',\n    '\\\\zeta'    : 'ζ', '\\\\eta'     : 'η', '\\\\theta'   : 'θ', '\\\\iota'    : 'ι', '\\\\kappa'   : 'κ',\n    '\\\\lambda'  : 'λ', '\\\\mu'      : 'μ', '\\\\nu'      : 'ν', '\\\\xi'      : 'ξ', '\\\\omicron' : 'ο',\n    '\\\\pi'      : 'π', '\\\\rho'     : 'ρ', '\\\\sigma'   : 'σ', '\\\\tau'     : 'τ', '\\\\upsilon' : 'υ',\n    '\\\\phi'     : 'ϕ', '\\\\chi'     : 'χ', '\\\\psi'     : 'ψ', '\\\\omega'   : 'ω',\n    '\\\\vartheta'   : 'ϑ', '\\\\varchi'     : 'ϰ', '\\\\varphi'     : 'φ', '\\\\varepsilon' : 'ε',\n    '\\\\varrho'     : 'ϱ', '\\\\varsigma'   : 'ς',\n}\n\nconst latex_symbols = {\n    \"textfractionsolidus\" : \"⁄\",\n    \"leftrightsquigarrow\" : \"↭\",\n    \"textpertenthousand\" : \"‱\",\n    \"blacktriangleright\" : \"▸\",\n    \"blacktriangledown\" : \"▾\",\n    \"blacktriangleleft\" : \"◂\",\n    \"twoheadrightarrow\" : \"↠\",\n    \"leftrightharpoons\" : \"⇋\",\n    \"rightleftharpoons\" : \"⇌\",\n    \"textreferencemark\" : \"※\",\n    \"circlearrowright\" : \"↻\",\n    \"rightrightarrows\" : \"⇉\",\n    \"vartriangleright\" : \"⊳\",\n    \"textordmasculine\" : \"º\",\n    \"textvisiblespace\" : \"␣\",\n    \"twoheadleftarrow\" : \"↞\",\n    \"downharpoonright\" : \"⇂\",\n    \"ntrianglerighteq\" : \"⋭\",\n    \"rightharpoondown\" : \"⇁\",\n    \"textperthousand\" : \"‰\",\n    \"leftrightarrows\" : \"⇆\",\n    \"textmusicalnote\" : \"♪\",\n    \"nleftrightarrow\" : \"↮\",\n    \"rightleftarrows\" : \"⇄\",\n    \"bigtriangledown\" : \"▽\",\n    \"textordfeminine\" : \"ª\",\n    \"ntrianglelefteq\" : \"⋬\",\n    \"rightthreetimes\" : \"⋌\",\n    \"trianglerighteq\" : \"⊵\",\n    \"vartriangleleft\" : \"⊲\",\n    \"rightsquigarrow\" : \"⇝\",\n    \"downharpoonleft\" : \"⇃\",\n    \"curvearrowright\" : \"↷\",\n    \"circlearrowleft\" : \"↺\",\n    \"leftharpoondown\" : \"↽\",\n    \"nLeftrightarrow\" : \"⇎\",\n    \"curvearrowleft\" : \"↶\",\n    \"guilsinglright\" : \"›\",\n    \"leftthreetimes\" : \"⋋\",\n    \"leftrightarrow\" : \"↔\",\n    \"rightharpoonup\" : \"⇀\",\n    \"guillemotright\" : \"»\",\n    \"downdownarrows\" : \"⇊\",\n    \"hookrightarrow\" : \"↪\",\n    \"dashrightarrow\" : \"⇢\",\n    \"leftleftarrows\" : \"⇇\",\n    \"trianglelefteq\" : \"⊴\",\n    \"ntriangleright\" : \"⋫\",\n    \"doublebarwedge\" : \"⌆\",\n    \"upharpoonright\" : \"↾\",\n    \"rightarrowtail\" : \"↣\",\n    \"looparrowright\" : \"↬\",\n    \"Leftrightarrow\" : \"⇔\",\n    \"sphericalangle\" : \"∢\",\n    \"divideontimes\" : \"⋇\",\n    \"measuredangle\" : \"∡\",\n    \"blacktriangle\" : \"▴\",\n    \"ntriangleleft\" : \"⋪\",\n    \"mathchar1356\" : \"⁁\",\n    \"texttrademark\" : \"™\",\n    \"mathchar2208\" : \"⌖\",\n    \"triangleright\" : \"▹\",\n    \"leftarrowtail\" : \"↢\",\n    \"guilsinglleft\" : \"‹\",\n    \"upharpoonleft\" : \"↿\",\n    \"mathbb{gamma}\" : \"ℽ\",\n    \"fallingdotseq\" : \"≒\",\n    \"looparrowleft\" : \"↫\",\n    \"textbrokenbar\" : \"¦\",\n    \"hookleftarrow\" : \"↩\",\n    \"smallsetminus\" : \"﹨\",\n    \"dashleftarrow\" : \"⇠\",\n    \"guillemotleft\" : \"«\",\n    \"leftharpoonup\" : \"↼\",\n    \"mathbb{Gamma}\" : \"ℾ\",\n    \"bigtriangleup\" : \"△\",\n    \"textcircledP\" : \"℗\",\n    \"risingdotseq\" : \"≓\",\n    \"triangleleft\" : \"◃\",\n    \"mathsterling\" : \"£\",\n    \"textcurrency\" : \"¤\",\n    \"triangledown\" : \"▿\",\n    \"blacklozenge\" : \"\",\n    \"sfrac{5}{6}\" : \"⅚\",\n    \"preccurlyeq\" : \"≼\",\n    \"Rrightarrow\" : \"⇛\",\n    \"circledcirc\" : \"⊚\",\n    \"nRightarrow\" : \"⇏\",\n    \"sfrac{3}{8}\" : \"⅜\",\n    \"sfrac{1}{3}\" : \"⅓\",\n    \"sfrac{2}{5}\" : \"⅖\",\n    \"vartriangle\" : \"▵\",\n    \"Updownarrow\" : \"⇕\",\n    \"nrightarrow\" : \"↛\",\n    \"sfrac{1}{2}\" : \"½\",\n    \"sfrac{3}{5}\" : \"⅗\",\n    \"succcurlyeq\" : \"≽\",\n    \"sfrac{4}{5}\" : \"⅘\",\n    \"diamondsuit\" : \"♦\",\n    \"sfrac{1}{6}\" : \"⅙\",\n    \"curlyeqsucc\" : \"⋟\",\n    \"blacksquare\" : \"▪\",\n    \"curlyeqprec\" : \"⋞\",\n    \"sfrac{1}{8}\" : \"⅛\",\n    \"sfrac{7}{8}\" : \"⅞\",\n    \"sfrac{1}{5}\" : \"⅕\",\n    \"sfrac{2}{3}\" : \"⅔\",\n    \"updownarrow\" : \"↕\",\n    \"backepsilon\" : \"∍\",\n    \"circleddash\" : \"⊝\",\n    \"eqslantless\" : \"⋜\",\n    \"sfrac{3}{4}\" : \"¾\",\n    \"sfrac{5}{8}\" : \"⅝\",\n    \"sfrac{1}{4}\" : \"¼\",\n    \"mathbb{Pi}\" : \"ℿ\",\n    \"mathcal{M}\" : \"ℳ\",\n    \"mathcal{o}\t\" : \"ℴ\",\n    \"mathcal{O}\t\" : \"𝒪\",\n    \"nsupseteqq\" : \"⊉\",\n    \"mathcal{B}\" : \"ℬ\",\n    \"textrecipe\" : \"℞\",\n    \"nsubseteqq\" : \"⊈\",\n    \"subsetneqq\" : \"⊊\",\n    \"mathcal{I}\" : \"ℑ\",\n    \"upuparrows\" : \"⇈\",\n    \"mathcal{e}\" : \"ℯ\",\n    \"mathcal{L}\" : \"ℒ\",\n    \"nleftarrow\" : \"↚\",\n    \"mathcal{H}\" : \"ℋ\",\n    \"mathcal{E}\" : \"ℰ\",\n    \"eqslantgtr\" : \"⋝\",\n    \"curlywedge\" : \"⋏\",\n    \"varepsilon\" : \"ε\",\n    \"supsetneqq\" : \"⊋\",\n    \"rightarrow\" : \"→\",\n    \"mathcal{R}\" : \"ℛ\",\n    \"sqsubseteq\" : \"⊑\",\n    \"mathcal{g}\" : \"ℊ\",\n    \"sqsupseteq\" : \"⊒\",\n    \"complement\" : \"∁\",\n    \"Rightarrow\" : \"⇒\",\n    \"gtreqqless\" : \"⋛\",\n    \"lesseqqgtr\" : \"⋚\",\n    \"circledast\" : \"⊛\",\n    \"nLeftarrow\" : \"⇍\",\n    \"Lleftarrow\" : \"⇚\",\n    \"varnothing\" : \"∅\",\n    \"mathcal{N}\" : \"𝒩\",\n    \"Leftarrow\" : \"⇐\",\n    \"gvertneqq\" : \"≩\",\n    \"mathbb{C}\" : \"ℂ\",\n    \"supsetneq\" : \"⊋\",\n    \"leftarrow\" : \"←\",\n    \"nleqslant\" : \"≰\",\n    \"mathbb{Q}\" : \"ℚ\",\n    \"mathbb{Z}\" : \"ℤ\",\n    \"llbracket\" : \"〚\",\n    \"mathbb{H}\" : \"ℍ\",\n    \"spadesuit\" : \"♠\",\n    \"mathit{o}\" : \"ℴ\",\n    \"mathbb{P}\" : \"ℙ\",\n    \"rrbracket\" : \"〛\",\n    \"supseteqq\" : \"⊇\",\n    \"copyright\" : \"©\",\n    \"textsc{k}\" : \"ĸ\",\n    \"gtreqless\" : \"⋛\",\n    \"mathbb{j}\" : \"ⅉ\",\n    \"pitchfork\" : \"⋔\",\n    \"estimated\" : \"℮\",\n    \"ngeqslant\" : \"≱\",\n    \"mathbb{e}\" : \"ⅇ\",\n    \"therefore\" : \"∴\",\n    \"triangleq\" : \"≜\",\n    \"varpropto\" : \"∝\",\n    \"subsetneq\" : \"⊊\",\n    \"heartsuit\" : \"♥\",\n    \"mathbb{d}\" : \"ⅆ\",\n    \"lvertneqq\" : \"≨\",\n    \"checkmark\" : \"✓\",\n    \"nparallel\" : \"∦\",\n    \"mathbb{R}\" : \"ℝ\",\n    \"lesseqgtr\" : \"⋚\",\n    \"downarrow\" : \"↓\",\n    \"mathbb{D}\" : \"ⅅ\",\n    \"mathbb{i}\" : \"ⅈ\",\n    \"backsimeq\" : \"⋍\",\n    \"mathbb{N}\" : \"ℕ\",\n    \"Downarrow\" : \"⇓\",\n    \"subseteqq\" : \"⊆\",\n    \"setminus\" : \"∖\",\n    \"succnsim\" : \"⋩\",\n    \"doteqdot\" : \"≑\",\n    \"clubsuit\" : \"♣\",\n    \"emptyset\" : \"∅\",\n    \"sqsupset\" : \"⊐\",\n    \"fbox{~~}\" : \"▭\",\n    \"curlyvee\" : \"⋎\",\n    \"varkappa\" : \"ϰ\",\n    \"llcorner\" : \"⌞\",\n    \"varsigma\" : \"ς\",\n    \"approxeq\" : \"≊\",\n    \"backcong\" : \"≌\",\n    \"supseteq\" : \"⊇\",\n    \"circledS\" : \"Ⓢ\",\n    \"circledR\" : \"®\",\n    \"textcent\" : \"¢\",\n    \"urcorner\" : \"⌝\",\n    \"lrcorner\" : \"⌟\",\n    \"boxminus\" : \"⊟\",\n    \"texteuro\" : \"€\",\n    \"vartheta\" : \"ϑ\",\n    \"barwedge\" : \"⊼\",\n    \"ding{86}\" : \"✶\",\n    \"sqsubset\" : \"⊏\",\n    \"subseteq\" : \"⊆\",\n    \"intercal\" : \"⊺\",\n    \"ding{73}\" : \"☆\",\n    \"ulcorner\" : \"⌜\",\n    \"recorder\" : \"⌕\",\n    \"precnsim\" : \"⋨\",\n    \"parallel\" : \"∥\",\n    \"boxtimes\" : \"⊠\",\n    \"ding{55}\" : \"✗\",\n    \"multimap\" : \"⊸\",\n    \"maltese\" : \"✠\",\n    \"nearrow\" : \"↗\",\n    \"swarrow\" : \"↙\",\n    \"lozenge\" : \"◊\",\n    \"sqrt[3]\" : \"∛\",\n    \"succsim\" : \"≿\",\n    \"dotplus\" : \"∔\",\n    \"tilde{}\" : \"~\",\n    \"check{}\" : \"ˇ\",\n    \"lessgtr\" : \"≶\",\n    \"Upsilon\" : \"ϒ\",\n    \"Cdprime\" : \"Ъ\",\n    \"gtrless\" : \"≷\",\n    \"backsim\" : \"∽\",\n    \"nexists\" : \"∄\",\n    \"searrow\" : \"↘\",\n    \"lessdot\" : \"⋖\",\n    \"boxplus\" : \"⊞\",\n    \"upsilon\" : \"υ\",\n    \"epsilon\" : \"ε\",\n    \"diamond\" : \"⋄\",\n    \"bigstar\" : \"★\",\n    \"ddagger\" : \"‡\",\n    \"cdprime\" : \"ъ\",\n    \"Uparrow\" : \"⇑\",\n    \"sqrt[4]\" : \"∜\",\n    \"between\" : \"≬\",\n    \"sqangle\" : \"∟\",\n    \"digamma\" : \"Ϝ\",\n    \"uparrow\" : \"↑\",\n    \"nwarrow\" : \"↖\",\n    \"precsim\" : \"≾\",\n    \"breve{}\" : \"˘\",\n    \"because\" : \"∵\",\n    \"bigcirc\" : \"◯\",\n    \"acute{}\" : \"´\",\n    \"grave{}\" : \"`\",\n    \"lesssim\" : \"≲\",\n    \"partial\" : \"∂\",\n    \"natural\" : \"♮\",\n    \"supset\" : \"⊃\",\n    \"hstrok\" : \"ħ\",\n    \"Tstrok\" : \"Ŧ\",\n    \"coprod\" : \"∐\",\n    \"models\" : \"⊧\",\n    \"otimes\" : \"⊗\",\n    \"degree\" : \"°\",\n    \"gtrdot\" : \"⋗\",\n    \"preceq\" : \"≼\",\n    \"Lambda\" : \"Λ\",\n    \"lambda\" : \"λ\",\n    \"cprime\" : \"ь\",\n    \"varrho\" : \"ϱ\",\n    \"Bumpeq\" : \"≎\",\n    \"hybull\" : \"⁃\",\n    \"lmidot\" : \"ŀ\",\n    \"nvdash\" : \"⊬\",\n    \"lbrace\" : \"{\",\n    \"bullet\" : \"•\",\n    \"varphi\" : \"φ\",\n    \"bumpeq\" : \"≏\",\n    \"ddot{}\" : \"¨\",\n    \"Lmidot\" : \"Ŀ\",\n    \"Cprime\" : \"Ь\",\n    \"female\" : \"♀\",\n    \"rtimes\" : \"⋊\",\n    \"gtrsim\" : \"≳\",\n    \"mapsto\" : \"↦\",\n    \"daleth\" : \"ℸ\",\n    \"square\" : \"■\",\n    \"nVDash\" : \"⊯\",\n    \"rangle\" : \"⟩\",\n    \"tstrok\" : \"ŧ\",\n    \"oslash\" : \"⊘\",\n    \"ltimes\" : \"⋉\",\n    \"lfloor\" : \"⌊\",\n    \"marker\" : \"▮\",\n    \"Subset\" : \"⋐\",\n    \"Vvdash\" : \"⊪\",\n    \"propto\" : \"∝\",\n    \"Hstrok\" : \"Ħ\",\n    \"dlcrop\" : \"⌍\",\n    \"forall\" : \"∀\",\n    \"nVdash\" : \"⊮\",\n    \"Supset\" : \"⋑\",\n    \"langle\" : \"⟨\",\n    \"ominus\" : \"⊖\",\n    \"rfloor\" : \"⌋\",\n    \"circeq\" : \"≗\",\n    \"eqcirc\" : \"≖\",\n    \"drcrop\" : \"⌌\",\n    \"veebar\" : \"⊻\",\n    \"ulcrop\" : \"⌏\",\n    \"nvDash\" : \"⊭\",\n    \"urcrop\" : \"⌎\",\n    \"exists\" : \"∃\",\n    \"approx\" : \"≈\",\n    \"dagger\" : \"†\",\n    \"boxdot\" : \"⊡\",\n    \"succeq\" : \"≽\",\n    \"bowtie\" : \"⋈\",\n    \"subset\" : \"⊂\",\n    \"notin\" : \"∉\",\n    \"Sigma\" : \"Σ\",\n    \"Omega\" : \"Ω\",\n    \"nabla\" : \"∇\",\n    \"colon\" : \":\",\n    \"boxHu\" : \"╧\",\n    \"boxHd\" : \"╤\",\n    \"aleph\" : \"ℵ\",\n    \"gnsim\" : \"⋧\",\n    \"boxHU\" : \"╩\",\n    \"boxHD\" : \"╦\",\n    \"equiv\" : \"≡\",\n    \"lneqq\" : \"≨\",\n    \"alpha\" : \"α\",\n    \"amalg\" : \"∐\",\n    \"boxhU\" : \"╨\",\n    \"boxhD\" : \"╥\",\n    \"uplus\" : \"⊎\",\n    \"boxhu\" : \"┴\",\n    \"kappa\" : \"κ\",\n    \"sigma\" : \"σ\",\n    \"boxDL\" : \"╗\",\n    \"Theta\" : \"Θ\",\n    \"Vdash\" : \"⊩\",\n    \"boxDR\" : \"╔\",\n    \"boxDl\" : \"╖\",\n    \"sqcap\" : \"⊓\",\n    \"boxDr\" : \"╓\",\n    \"bar{}\" : \"¯\",\n    \"dashv\" : \"⊣\",\n    \"vDash\" : \"⊨\",\n    \"boxdl\" : \"┐\",\n    \"boxVl\" : \"╢\",\n    \"boxVh\" : \"╫\",\n    \"boxVr\" : \"╟\",\n    \"boxdr\" : \"┌\",\n    \"boxdL\" : \"╕\",\n    \"boxVL\" : \"╣\",\n    \"boxVH\" : \"╬\",\n    \"boxVR\" : \"╠\",\n    \"boxdR\" : \"╒\",\n    \"theta\" : \"θ\",\n    \"lhblk\" : \"▄\",\n    \"uhblk\" : \"▀\",\n    \"ldotp\" : \".\",\n    \"ldots\" : \"…\",\n    \"boxvL\" : \"╡\",\n    \"boxvH\" : \"╪\",\n    \"boxvR\" : \"╞\",\n    \"boxvl\" : \"┤\",\n    \"boxvh\" : \"┼\",\n    \"boxvr\" : \"├\",\n    \"Delta\" : \"Δ\",\n    \"boxUR\" : \"╚\",\n    \"boxUL\" : \"╝\",\n    \"oplus\" : \"⊕\",\n    \"boxUr\" : \"╙\",\n    \"boxUl\" : \"╜\",\n    \"doteq\" : \"≐\",\n    \"happy\" : \"㋡\",\n    \"varpi\" : \"ϖ\",\n    \"smile\" : \"☺\",\n    \"boxul\" : \"┘\",\n    \"simeq\" : \"≃\",\n    \"boxuR\" : \"╘\",\n    \"boxuL\" : \"╛\",\n    \"boxhd\" : \"┬\",\n    \"gimel\" : \"ℷ\",\n    \"Gamma\" : \"Γ\",\n    \"lnsim\" : \"⋦\",\n    \"sqcup\" : \"⊔\",\n    \"omega\" : \"ω\",\n    \"sharp\" : \"♯\",\n    \"times\" : \"×\",\n    \"block\" : \"█\",\n    \"hat{}\" : \"^\",\n    \"wedge\" : \"∧\",\n    \"vdash\" : \"⊢\",\n    \"angle\" : \"∠\",\n    \"infty\" : \"∞\",\n    \"gamma\" : \"γ\",\n    \"asymp\" : \"≍\",\n    \"rceil\" : \"⌉\",\n    \"dot{}\" : \"˙\",\n    \"lceil\" : \"⌈\",\n    \"delta\" : \"δ\",\n    \"gneqq\" : \"≩\",\n    \"frown\" : \"⌢\",\n    \"phone\" : \"☎\",\n    \"vdots\" : \"⋮\",\n    \"boxr\" : \"└\",\n    \"k{i}\" : \"į\",\n    \"`{I}\" : \"Ì\",\n    \"perp\" : \"⊥\",\n    \"\\\"{o}\" : \"ö\",\n    \"={I}\" : \"Ī\",\n    \"`{a}\" : \"à\",\n    \"v{T}\" : \"Ť\",\n    \"surd\" : \"√\",\n    \"H{O}\" : \"Ő\",\n    \"vert\" : \"|\",\n    \"k{I}\" : \"Į\",\n    \"\\\"{y}\" : \"ÿ\",\n    \"\\\"{O}\" : \"Ö\",\n    \"u{u}\" : \"ў\",\n    \"u{G}\" : \"Ğ\",\n    \".{E}\" : \"Ė\",\n    \".{z}\" : \"ż\",\n    \"v{t}\" : \"ť\",\n    \"prec\" : \"≺\",\n    \"H{o}\" : \"ő\",\n    \"mldr\" : \"…\",\n    \"cong\" : \"≅\",\n    \".{e}\" : \"ė\",\n    \"star\" : \"*\",\n    \".{Z}\" : \"Ż\",\n    \"geqq\" : \"≧\",\n    \"cdot\" : \"⋅\",\n    \"cdots\" : \"…\",\n    \"`{U}\" : \"Ù\",\n    \"v{L}\" : \"Ľ\",\n    \"c{s}\" : \"ş\",\n    \"~{A}\" : \"Ã\",\n    \"Vert\" : \"‖\",\n    \"k{e}\" : \"ę\",\n    \"lnot\" : \"¬\",\n    \"leqq\" : \"≦\",\n    \"beta\" : \"β\",\n    \"beth\" : \"ℶ\",\n    \"~{n}\" : \"ñ\",\n    \"u{i}\" : \"й\",\n    \"c{S}\" : \"Ş\",\n    \"c{N}\" : \"Ņ\",\n    \"H{u}\" : \"ű\",\n    \"v{n}\" : \"ň\",\n    \"={U}\" : \"Ū\",\n    \"~{O}\" : \"Õ\",\n    \"v{E}\" : \"Ě\",\n    \"H{U}\" : \"Ű\",\n    \"v{N}\" : \"Ň\",\n    \"prod\" : \"∏\",\n    \"v{s}\" : \"š\",\n    \"\\\"{U}\" : \"Ü\",\n    \"c{n}\" : \"ņ\",\n    \"k{U}\" : \"Ų\",\n    \"c{R}\" : \"Ŗ\",\n    \"~{o}\" : \"õ\",\n    \"v{e}\" : \"ě\",\n    \"v{S}\" : \"Š\",\n    \"u{A}\" : \"Ă\",\n    \"circ\" : \"∘\",\n    \"\\\"{u}\" : \"ü\",\n    \"flat\" : \"♭\",\n    \"v{z}\" : \"ž\",\n    \"r{U}\" : \"Ů\",\n    \"`{O}\" : \"Ò\",\n    \"={u}\" : \"ū\",\n    \"oint\" : \"∮\",\n    \"c{K}\" : \"Ķ\",\n    \"k{u}\" : \"ų\",\n    \"not<\" : \"≮\",\n    \"not>\" : \"≯\",\n    \"`{o}\" : \"ò\",\n    \"\\\"{I}\" : \"Ï\",\n    \"v{D}\" : \"Ď\",\n    \".{G}\" : \"Ġ\",\n    \"r{u}\" : \"ů\",\n    \"not=\" : \"≠\",\n    \"`{u}\" : \"ù\",\n    \"v{c}\" : \"č\",\n    \"c{k}\" : \"ķ\",\n    \".{g}\" : \"ġ\",\n    \"odot\" : \"⊙\",\n    \"`{e}\" : \"э\",\n    \"c{T}\" : \"Ţ\",\n    \"v{d}\" : \"ď\",\n    \"\\\"{e}\" : \"ё\",\n    \"v{R}\" : \"Ř\",\n    \"k{a}\" : \"ą\",\n    \"nldr\" : \"‥\",\n    \"`{A}\" : \"À\",\n    \"~{N}\" : \"Ñ\",\n    \"nmid\" : \"∤\",\n    \".{C}\" : \"Ċ\",\n    \"zeta\" : \"ζ\",\n    \"~{u}\" : \"ũ\",\n    \"`{E}\" : \"Э\",\n    \"~{a}\" : \"ã\",\n    \"c{t}\" : \"ţ\",\n    \"={o}\" : \"ō\",\n    \"v{r}\" : \"ř\",\n    \"={A}\" : \"Ā\",\n    \".{c}\" : \"ċ\",\n    \"~{U}\" : \"Ũ\",\n    \"k{A}\" : \"Ą\",\n    \"\\\"{a}\" : \"ä\",\n    \"u{U}\" : \"Ў\",\n    \"iota\" : \"ι\",\n    \"={O}\" : \"Ō\",\n    \"c{C}\" : \"Ç\",\n    \"gneq\" : \"≩\",\n    \"boxH\" : \"═\",\n    \"hbar\" : \"ℏ\",\n    \"\\\"{A}\" : \"Ä\",\n    \"boxv\" : \"│\",\n    \"boxh\" : \"─\",\n    \"male\" : \"♂\",\n    \"sqrt\" : \"√\",\n    \"succ\" : \"≻\",\n    \"c{c}\" : \"ç\",\n    \"v{l}\" : \"ľ\",\n    \"u{a}\" : \"ă\",\n    \"v{Z}\" : \"Ž\",\n    \"c{G}\" : \"Ģ\",\n    \"v{C}\" : \"Č\",\n    \"lneq\" : \"≨\",\n    \"{E}\" : \"Ё\",\n    \"={a}\" : \"ā\",\n    \"c{l}\" : \"ļ\",\n    \"={E}\" : \"Ē\",\n    \"boxV\" : \"║\",\n    \"u{g}\" : \"ğ\",\n    \"u{I}\" : \"Й\",\n    \"c{L}\" : \"Ļ\",\n    \"k{E}\" : \"Ę\",\n    \".{I}\" : \"İ\",\n    \"~{I}\" : \"Ĩ\",\n    \"c{r}\" : \"ŗ\",\n    \"{Y}\" : \"Ÿ\",\n    \"={e}\" : \"ē\",\n    \"leq\" : \"≤\",\n    \"Cup\" : \"⋓\",\n    \"Psi\" : \"Ψ\",\n    \"neq\" : \"≠\",\n    \"k{}\" : \"˛\",\n    \"={}\" : \"‾\",\n    \"H{}\" : \"˝\",\n    \"cup\" : \"∪\",\n    \"geq\" : \"≥\",\n    \"mho\" : \"℧\",\n    \"Dzh\" : \"Џ\",\n    \"cap\" : \"∩\",\n    \"bot\" : \"⊥\",\n    \"psi\" : \"ψ\",\n    \"chi\" : \"χ\",\n    \"c{}\" : \"¸\",\n    \"Phi\" : \"Φ\",\n    \"ast\" : \"*\",\n    \"ell\" : \"ℓ\",\n    \"top\" : \"⊤\",\n    \"lll\" : \"⋘\",\n    \"tau\" : \"τ\",\n    \"Cap\" : \"⋒\",\n    \"sad\" : \"☹\",\n    \"iff\" : \"⇔\",\n    \"eta\" : \"η\",\n    \"eth\" : \"ð\",\n    \"d{\" : \"\ṭ\",\n    \"rho\" : \"ρ\",\n    \"dzh\" : \"џ\",\n    \"div\" : \"÷\",\n    \"phi\" : \"ϕ\",\n    \"Rsh\" : \"↱\",\n    \"vee\" : \"∨\",\n    \"b{}\" : \"ˍ\",\n    \"t{\" : \"\t͡\",\n    \"int\" : \"∫\",\n    \"sim\" : \"∼\",\n    \"r{}\" : \"˚\",\n    \"Lsh\" : \"↰\",\n    \"yen\" : \"¥\",\n    \"ggg\" : \"⋙\",\n    \"mid\" : \"∣\",\n    \"sum\" : \"∑\",\n    \"neg\" : \"¬\",\n    \"Dz\" : \"Ѕ\",\n    \"Re\" : \"ℜ\",\n    \"oe\" : \"œ\",\n    \"DH\" : \"Ð\",\n    \"ll\" : \"≪\",\n    \"ng\" : \"ŋ\",\n    \"wr\" : \"≀\",\n    \"wp\" : \"℘\",\n    \"=I\" : \"І\",\n    \":)\" : \"☺\",\n    \":(\" : \"☹\",\n    \"AE\" : \"Æ\",\n    \"AA\" : \"Å\",\n    \"ss\" : \"ß\",\n    \"dz\" : \"ѕ\",\n    \"ae\" : \"æ\",\n    \"aa\" : \"å\",\n    \"th\" : \"þ\",\n    \"to\" : \"→\",\n    \"Pi\" : \"Π\",\n    \"mp\" : \"∓\",\n    \"Im\" : \"ℑ\",\n    \"pm\" : \"±\",\n    \"pi\" : \"π\",\n    \"\\\"I\" : \"Ї\",\n    \"in\" : \"∈\",\n    \"ni\" : \"∋\",\n    \"ne\" : \"≠\",\n    \"TH\" : \"Þ\",\n    \"Xi\" : \"Ξ\",\n    \"nu\" : \"ν\",\n    \"NG\" : \"Ŋ\",\n    \":G\" : \"㋡\",\n    \"xi\" : \"ξ\",\n    \"OE\" : \"Œ\",\n    \"gg\" : \"≫\",\n    \"DJ\" : \"Đ\",\n    \"=e\" : \"є\",\n    \"=E\" : \"Є\",\n    \"mu\" : \"μ\",\n    \"dj\" : \"đ\",\n    // \"&\" : \"&\",\n    // \"$\" : \"$\",\n    // \"%\" : \"%\",\n    // \"#\" : \"#\",\n    // \"-\" : \"­\",\n    \"S\" : \"§\",\n    \"P\" : \"¶\",\n    \"O\" : \"Ø\",\n    \"L\" : \"Ł\",\n    // \"}\" : \"}\",\n    \"o\" : \"ø\",\n    \"l\" : \"ł\",\n    \"h\" : \"ℎ\",\n    \"i\" : \"ℹ\",\n    // \"-\" : \"−\",\n    \"'{Y}\" : \"Ý\",\n    \"'{y}\" : \"ý\",\n    \"'{L}\" : \"Ĺ\",\n    \"'{e}\" : \"é\",\n    \"'{l}\" : \"ĺ\",\n    \"'{s}\" : \"ś\",\n    \"'{z}\" : \"ź\",\n    \"'{E}\" : \"É\",\n    \"'{S}\" : \"Ś\",\n    \"'{Z}\" : \"Ź\",\n    \"'{R}\" : \"Ŕ\",\n    \"'{A}\" : \"Á\",\n    \"'{N}\" : \"Ń\",\n    \"'{I}\" : \"Í\",\n    \"'{n}\" : \"ń\",\n    \"'{c}\" : \"ć\",\n    \"'{u}\" : \"ú\",\n    \"'{C}\" : \"Ć\",\n    \"'{o}\" : \"ó\",\n    \"'{a}\" : \"á\",\n    \"'{O}\" : \"Ó\",\n    \"'{g}\" : \"ǵ\",\n    \"'{r}\" : \"ŕ\",\n    \"'{U}\" : \"Ú\",\n    \"'G\" : \"Ѓ\",\n    \"'C\" : \"Ћ\",\n    \"'K\" : \"Ќ\",\n    \"'k\" : \"ќ\",\n    \"'c\" : \"ћ\",\n    \"'g\" : \"ѓ\",\n}\n\n\nexport function str_latex_to_unicode(str : string){\n    str = str;\n    for (let key in latex_greek){\n        str = str.replaceAll(key, (latex_greek as any)[key]);\n    }\n    for (let key in latex_symbols){\n        str = str.replaceAll('\\\\'+key, (latex_symbols as any)[key]);\n    }\n    return str;\n}\nexport function str_to_mathematical_italic(str : string) {\n    return [...str_latex_to_unicode(str)]\n        .map(c => (unicode_mathematical_italic as any)[c] || c).join('');\n}\nexport function str_to_normal_from_mathematical_italic(str : string) {\n    return [...str]\n        .map(c => reversed_unicode_mathematical_italic[c] || c).join('');\n}\n","import { Diagram, DiagramType, DiagramStyle, TextData, DEFAULT_FONTSIZE } from \"./diagram.js\";\nimport { tab_color, get_color } from \"./color_palette.js\";\nimport { to_degree, expand_directional_value } from \"./utils.js\";\nimport { str_to_mathematical_italic, str_to_normal_from_mathematical_italic } from './unicode_utils.js'\nimport { TAG } from \"./tag_names.js\";\n\n// TODO : add guard for the dictionary key\n// since the implementation is using `for (let stylename in style)` without checking\n// if the correct key is in the dictionary, it can lead to unintended behavior\n// for example, `font-size` could be defined in default_text_diagram_style\n// and will shadow the `font-size` in default_diagram_style\n\nexport const default_diagram_style : DiagramStyle = {\n    \"fill\"             : \"none\",\n    \"stroke\"           : \"black\",\n    \"stroke-width\"     : \"1\",\n    \"stroke-linecap\"   : \"butt\",\n    \"stroke-dasharray\" : \"none\",\n    \"stroke-linejoin\"  : \"round\",\n    \"vector-effect\"    : \"non-scaling-stroke\",\n    \"opacity\"          : \"1\",\n}\nexport const _init_default_diagram_style : DiagramStyle = {...default_diagram_style}\n\nexport const default_text_diagram_style : DiagramStyle = {\n    \"fill\"             : \"black\",\n    \"stroke\"           : \"none\",\n    \"stroke-width\"     : \"1\",\n    \"stroke-linecap\"   : \"butt\",\n    \"stroke-dasharray\" : \"none\",\n    \"stroke-linejoin\"  : \"round\",\n    \"vector-effect\"    : \"non-scaling-stroke\",\n    \"opacity\"          : \"1\",\n}\nexport const _init_default_text_diagram_style : DiagramStyle = {...default_text_diagram_style}\n\nexport const default_textdata : TextData = {\n    \"text\"             : \"\",\n    \"font-family\"      : \"Latin Modern Math, sans-serif\",\n    \"font-size\"        : DEFAULT_FONTSIZE,\n    \"font-weight\"      : \"normal\",\n    \"text-anchor\"      : \"middle\",\n    \"dy\"               : \"0.25em\",\n    \"angle\"            : \"0\",\n    \"font-style\"       : \"normal\",\n    \"font-scale\"       : \"auto\",\n}\nexport const _init_default_textdata : TextData = {...default_textdata}\n\nexport function reset_default_styles() : void {\n    for (let s in default_diagram_style) \n        (default_diagram_style as any)[s] = (_init_default_diagram_style as any)[s];\n    for (let s in default_text_diagram_style)\n        (default_text_diagram_style as any)[s] = (_init_default_text_diagram_style as any)[s];\n    for (let s in default_textdata)\n        (default_textdata as any)[s] = (_init_default_textdata as any)[s];\n}\n\nfunction draw_polygon(svgelement : SVGSVGElement, diagram : Diagram, svgtag? : string) : void {\n    // get properties\n    let style = {...default_diagram_style, ...diagram.style}; // use default if not defined\n    style.fill = get_color(style.fill as string, tab_color);\n    style.stroke = get_color(style.stroke as string, tab_color);\n\n    // draw svg\n    let polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n    for (let stylename in style) {\n        polygon.style[stylename as any] = (style as any)[stylename as any];\n    }\n    if (svgtag != undefined) polygon.setAttribute(\"_dg_tag\", svgtag);\n    // polygon.style.fill = color_fill;\n    // polygon.style.stroke = color_stroke;\n    // use tab_color color palette\n\n    svgelement.appendChild(polygon);\n    if (diagram.path != undefined) {\n        for (let i = 0; i < diagram.path.points.length; i++) {\n            let p = diagram.path.points[i];\n            var point = svgelement.createSVGPoint();\n            point.x =  p.x;\n            point.y = -p.y;\n            polygon.points.appendItem(point);\n        }\n    }\n}\n\n\nfunction draw_curve(svgelement : SVGSVGElement, diagram : Diagram, svgtag? : string) : void {\n    // get properties\n    let style = {...default_diagram_style, ...diagram.style}; // use default if not defined\n    style.fill = \"none\";\n    style.stroke = get_color(style.stroke as string, tab_color);\n\n    // draw svg\n    let polyline = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\n    for (let stylename in style) {\n        polyline.style[stylename as any] = (style as any)[stylename as any];\n    }\n    if (svgtag != undefined) polyline.setAttribute(\"_dg_tag\", svgtag);\n\n    svgelement.appendChild(polyline);\n    if (diagram.path != undefined) {\n        for (let i = 0; i < diagram.path.points.length; i++) {\n            let p = diagram.path.points[i];\n            var point = svgelement.createSVGPoint();\n            point.x =  p.x;\n            point.y = -p.y;\n            polyline.points.appendItem(point);\n        }\n    }\n}\n\n\nfunction is_dataURL(url : string) : boolean {\n    // Regular expression to check for data URL\n    const dataUrlPattern = /^data:image\\/(png|jpeg|jpg|gif|svg\\+xml);base64,/;\n    return dataUrlPattern.test(url);\n}\n\nconst _IMAGE_DATAURL_CACHE_MAP = new Map<string, string|undefined>();\n\n/**\n * Convert image href to data url\n * This is necessary so that the image diagram can be downloaded as png\n */\nfunction set_image_href_dataURL(img : SVGImageElement, src : string) : void{\n    // if it is already a dataURL, just set it\n    if (is_dataURL(src)) {\n        img.setAttribute(\"href\", src);\n        img.setAttribute(\"xlink:href\", src);\n        return;\n    }\n    \n    // if it's already cached, just set it\n    if (_IMAGE_DATAURL_CACHE_MAP.has(src)){\n        const dataURL = _IMAGE_DATAURL_CACHE_MAP.get(src)!;\n        if (!dataURL) return; \n        // dataURL can be undefined, indicating it's still loading or\n        // the image is not found\n        img.setAttribute(\"href\", dataURL);\n        img.setAttribute(\"xlink:href\", dataURL);\n        return;\n    }\n    \n    // _IMAGE_DATAURL_CACHE_MAP.set(src, undefined);\n    let canvas    = document.createElement(\"canvas\");\n    let ctx       = canvas.getContext('2d');\n\n    let base_image = new Image();\n    base_image.crossOrigin = \"anonymous\";\n    base_image.onload = () => {\n        canvas.height = base_image.height;\n        canvas.width  = base_image.width;\n        ctx?.drawImage(base_image, 0, 0);\n\n        // NOTE : we need to set both href and xlink:href for compatibility reason\n        // most browser already deprecate xlink:href because of SVG 2.0\n        // but other browser and image viewer/editor still only support xlink:href\n        // might be removed in the future\n        const dataURL = canvas.toDataURL(\"image/png\");\n        img.setAttribute(\"href\", dataURL);\n        img.setAttribute(\"xlink:href\", dataURL);\n        _IMAGE_DATAURL_CACHE_MAP.set(src, dataURL);\n        canvas.remove();\n    }\n    base_image.src = src;\n\n}\n\n/**\n * if `embed_image` is `true`, the image will be embedded as dataURL\n * this allow the image to be downloaded as SVG with the image embedded\n */\nfunction draw_image(svgelement : SVGSVGElement, diagram : Diagram, embed_image : boolean, svgtag? : string) : void {\n    let image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n    if (diagram.imgdata.src == undefined) return;\n    // make sure path is defined and have 4 points\n    if (diagram.path == undefined) return;\n    if (diagram.path.points.length != 4) return;\n\n    // it's calculated like this to be able to apply linear transformation\n    // path: bottom-left, bottom-right, top-right, top-left\n    // width  : 0-1\n    // height : 1-2\n    let width  = diagram.path.points[1].sub(diagram.path.points[0]).length();\n    let height = diagram.path.points[2].sub(diagram.path.points[1]).length();\n    \n    // calculate the linear transformation matrix\n    // [ a c ]\n    // [ b d ]\n    let ex = diagram.path.points[1].sub(diagram.path.points[0]).normalize();\n    let ey = diagram.path.points[3].sub(diagram.path.points[0]).normalize();\n    let a =  ex.x; let b = -ex.y;\n    let c = -ey.x; let d =  ey.y;\n\n    let xpos = diagram.path.points[3].x;\n    let ypos = -diagram.path.points[3].y;\n\n    if (embed_image) {\n        set_image_href_dataURL(image, diagram.imgdata.src);\n    } else {\n        image.setAttribute(\"href\", diagram.imgdata.src);\n    }\n    image.setAttribute(\"width\", width.toString());\n    image.setAttribute(\"height\", height.toString());\n    image.setAttribute(\"transform\", `matrix(${a} ${b} ${c} ${d} ${xpos} ${ypos})`);\n    image.setAttribute(\"preserveAspectRatio\", \"none\");\n    if (svgtag != undefined) image.setAttribute(\"_dg_tag\", svgtag);\n\n    svgelement.appendChild(image);\n}\n\n/**\n * Collect all DiagramType.Text in the diagram\n * @param diagram the outer diagram\n * @returns a list of DiagramType.Text\n*/\nfunction collect_text(diagram : Diagram, type : DiagramType.Text | DiagramType.MultilineText) : Diagram[] {\n    if (diagram.type == type) {\n        return [diagram];\n    } else if (diagram.type == DiagramType.Diagram) {\n        let result : Diagram[] = [];\n        for (let d of diagram.children) {\n            result = result.concat(collect_text(d, type));\n        }\n        return result;\n    } else {\n        return [];\n    }\n}\n\n/** Calculate the scaling factor for the text based on the reference svg element */\nexport function calculate_text_scale(referencesvgelement : SVGSVGElement, padding? : [number, number, number, number]) : number {\n    const pad = expand_directional_value(padding ?? 0)\n    let bbox = referencesvgelement.getBBox();\n    let refsvgelement_width = referencesvgelement.width.baseVal.value - pad[1] - pad[3];\n    let refsvgelement_height = referencesvgelement.height.baseVal.value - pad[0] - pad[2];\n    return Math.max(bbox.width / refsvgelement_width, bbox.height / refsvgelement_height)\n}\n\n/**\n * @param svgelement the svg element to draw to\n * @param diagrams the list of text diagrams to draw\n * @param calculated_scale the calculated scale for the text\n */\nfunction draw_texts(svgelement : SVGSVGElement, diagrams : Diagram[], \n    calculated_scale : number, svgtag? : string) : void {\n    for (let diagram of diagrams) {\n        let style = {...default_text_diagram_style, ...diagram.style}; // use default if not defined\n        style.fill = get_color(style.fill as string, tab_color);\n        style.stroke = get_color(style.stroke as string, tab_color);\n\n        let textdata = {...default_textdata, ...diagram.textdata}; // use default if not defined\n        if (diagram.path == undefined) { throw new Error(\"Text must have a path\"); }\n        // draw svg of text\n        let text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        // text.setAttribute(\"x\", diagram.path.points[0].x.toString());\n        // text.setAttribute(\"y\", (-diagram.path.points[0].y).toString());\n        let xpos = diagram.path.points[0].x;\n        let ypos = -diagram.path.points[0].y;\n        let angle_deg = to_degree(parseFloat(textdata[\"angle\"] as string));\n\n        let scale = textdata[\"font-scale\"] == \"auto\" ? \n            calculated_scale : parseFloat(textdata[\"font-scale\"] as string);\n        let font_size = parseFloat(textdata[\"font-size\"] as string) * scale;\n\n        // set font styles (font-family, font-size, font-weight)\n        text.setAttribute(\"font-family\", textdata[\"font-family\"] as string);\n        text.setAttribute(\"font-style\", textdata[\"font-style\"] as string);\n        text.setAttribute(\"font-size\", font_size.toString());\n        text.setAttribute(\"font-weight\", textdata[\"font-weight\"] as string);\n        text.setAttribute(\"text-anchor\", textdata[\"text-anchor\"] as string);\n        text.setAttribute(\"dy\", textdata[\"dy\"] as string);\n        // text.setAttribute(\"dominant-baseline\", textdata[\"dominant-baseline\"] as string);\n        text.setAttribute(\"transform\", `translate(${xpos} ${ypos}) rotate(${angle_deg}) `);\n        if (svgtag != undefined) text.setAttribute(\"_dg_tag\", svgtag);\n\n        // custom attribute for tex display\n        text.setAttribute(\"_x\", xpos.toString());\n        text.setAttribute(\"_y\", ypos.toString());\n        text.setAttribute(\"_angle\", angle_deg.toString());\n        \n        for (let stylename in style) {\n            text.style[stylename as any] = (style as any)[stylename as any];\n        }\n\n        // set the content of the text\n        let text_content = textdata[\"text\"];\n        if (diagram.tags.includes(TAG.TEXTVAR) && !is_texstr(text_content)) \n            text_content = str_to_mathematical_italic(text_content);\n        text.innerHTML = text_content;\n\n        // add to svgelement\n        svgelement.appendChild(text);\n    }\n}\n\n/**\n * @param svgelement the svg element to draw to\n * @param diagrams the list of text diagrams to draw\n * @param calculated_scale the calculated scale for the text\n */\nfunction draw_multiline_texts(svgelement : SVGSVGElement, diagrams : Diagram[], \n    calculated_scale : number, svgtag? : string) : void {\n    for (let diagram of diagrams) {\n    //     let style = {...default_text_diagram_style, ...diagram.style}; // use default if not defined\n    //     style.fill = get_color(style.fill as string, tab_color);\n    //     style.stroke = get_color(style.stroke as string, tab_color);\n    //\n    //     let textdata = {...default_textdata, ...diagram.textdata}; // use default if not defined\n        if (diagram.path == undefined) { throw new Error(\"Text must have a path\"); }\n        // draw svg of text\n        let textsvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        let xpos = diagram.path.points[0].x;\n        let ypos = -diagram.path.points[0].y;\n        // let angle_deg = to_degree(parseFloat(textdata[\"angle\"] as string));\n        let angle_deg = 0;\n\n\n        // use default if not defined\n        let textdata = {...default_textdata, ...{dy:\"0\", \"text-anchor\":\"start\"}, ...diagram.textdata}; \n        let diagram_font_size = textdata[\"font-size\"];\n\n\n        if (diagram.multilinedata?.content == undefined) { throw new Error(\"MultilineText must have multilinedata\"); }\n        // let current_line : number = 0;\n        let dg_scale_factor = diagram.multilinedata[\"scale-factor\"] ?? 1;\n        let is_firstline : boolean = true;\n        let is_in_front  : boolean = true;\n        let newline_dy   : string  = \"1em\";\n        for (let tspandata of diagram.multilinedata.content) {\n\n            if (tspandata.text == \"\\n\") { \n                is_in_front = true; \n                newline_dy = tspandata.style['dy'] ?? \"1em\";\n                continue; \n            }\n\n            // create tspan for each tspandata\n            let tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n\n            let not_setting_dy = (tspandata.style['dy'] == undefined)\n            let tspanstyle = {\n                ...default_text_diagram_style, \n                ...textdata,\n                ...{dy : \"0\", dx : \"0\"}, \n                ...{\"font-size\" : diagram_font_size},\n                ...tspandata.style\n            };\n\n            if (is_in_front) {\n                tspan.setAttribute(\"x\", \"0\");\n                let textdata_dy = textdata[\"dy\"] as string ?? \"0\";\n                if (not_setting_dy) tspanstyle.dy = is_firstline ? textdata_dy : newline_dy;\n                is_in_front = false;\n            }\n\n            let scale = tspanstyle[\"font-scale\"] == \"auto\" ? \n                calculated_scale : parseFloat(tspanstyle[\"font-scale\"] as string);\n            let font_size = parseFloat(tspanstyle[\"font-size\"] as string) * scale * dg_scale_factor;\n\n            if (tspanstyle[\"tag\"]) tspan.setAttribute(\"_dg_tag\", tspanstyle[\"tag\"] as string);\n\n            tspan.style.whiteSpace = \"pre\";\n            // if we do style.whiteSpace in `textsvg`, it doesnt work in Apple's webkit\n            tspan.setAttribute(\"dx\", tspanstyle.dx as string);\n            tspan.setAttribute(\"dy\", tspanstyle.dy as string);\n            tspan.setAttribute(\"font-style\", tspanstyle[\"font-style\"] as string);\n            tspan.setAttribute(\"font-family\", tspanstyle[\"font-family\"] as string);\n            // tspan.setAttribute(\"font-size\", tspanstyle[\"font-size\"] as string);\n            tspan.setAttribute(\"font-size\", font_size.toString());\n            tspan.setAttribute(\"font-weight\", tspanstyle[\"font-weight\"] as string);\n            // tspan.setAttribute(\"text-anchor\", tspanstyle[\"text-anchor\"] as string);\n            tspan.style[\"fill\"] = get_color(tspanstyle.fill as string, tab_color);\n            tspan.style[\"stroke\"] = get_color(tspanstyle.stroke as string, tab_color);\n            tspan.style[\"opacity\"] = tspanstyle.opacity as string;\n\n            let text = tspandata.text;\n            if (tspanstyle[\"textvar\"]) text = str_to_mathematical_italic(text);\n            tspan.innerHTML = text;\n            textsvg.appendChild(tspan);\n\n            is_firstline = false;\n        }\n\n        //\n        // let scale = textdata[\"font-scale\"] == \"auto\" ? \n        //     calculated_scale : parseFloat(textdata[\"font-scale\"] as string);\n        // let font_size = parseFloat(textdata[\"font-size\"] as string) * scale;\n        //\n        // // set font styles (font-family, font-size, font-weight)\n        // text.setAttribute(\"font-family\", textdata[\"font-family\"] as string);\n        // text.setAttribute(\"font-size\", font_size.toString());\n        // text.setAttribute(\"font-weight\", textdata[\"font-weight\"] as string);\n        // text.setAttribute(\"text-anchor\", textdata[\"text-anchor\"] as string);\n        // // text.setAttribute(\"dominant-baseline\", textdata[\"dominant-baseline\"] as string);\n        textsvg.setAttribute(\"dy\", textdata[\"dy\"] as string);\n        textsvg.setAttribute(\"text-anchor\", textdata[\"text-anchor\"] as string);\n        textsvg.setAttribute(\"transform\", `translate(${xpos} ${ypos}) rotate(${angle_deg}) `);\n        if (svgtag != undefined) textsvg.setAttribute(\"_dg_tag\", svgtag);\n        //\n        // // custom attribute for tex display\n        // text.setAttribute(\"_x\", xpos.toString());\n        // text.setAttribute(\"_y\", ypos.toString());\n        // text.setAttribute(\"_angle\", angle_deg.toString());\n        // \n        // for (let stylename in style) {\n        //     text.style[stylename as any] = (style as any)[stylename as any];\n        // }\n        //\n        // // set the content of the text\n        // let text_content = textdata[\"text\"];\n        // if (diagram.tags.includes('textvar') && !is_texstr(text_content)) \n        //     text_content = str_to_mathematical_italic(text_content);\n        // text.innerHTML = text_content;\n        //\n        // // add to svgelement\n        svgelement.appendChild(textsvg);\n    }\n}\n\n/**\n * Get all svg elements with a specific tag\n * @param svgelement the svg element to search\n * @param tag the tag to search\n * @returns a list of svg elements with the tag\n */\nexport function get_tagged_svg_element(tag : string, svgelement : SVGElement) : SVGElement[] {\n    let result : SVGElement[] = [];\n    for (let i in svgelement.children) {\n        let child = svgelement.children[i];\n        if (!(child instanceof SVGElement)) continue;\n        if (child.getAttribute(\"_dg_tag\") == tag) {\n            result.push(child);\n        }\n        // recurse through all children\n        if (child.children?.length) {\n            result = result.concat(get_tagged_svg_element(tag, child));\n        }\n    }\n    return result;\n}\n\n/**\n * @param svgelement the svg element to draw to\n * @param diagram the diagram to draw\n * @param render_text whether to render text\n * @param embed_image (optional) whether to embed images\n * this allow the image to be downloaded as SVG with the image embedded\n * @param text_scaling_factor (optional) the scaling factor for text\n * @param svgtag (optional) the tag to add to the svg element\n */\nexport function f_draw_to_svg(svgelement : SVGSVGElement, diagram : Diagram, render_text : boolean = true, embed_image : boolean = false,\n    text_scaling_factor? : number, svgtag? : string) : void {\n    \n    if (diagram.type == DiagramType.Polygon) {\n        draw_polygon(svgelement, diagram, svgtag);\n    } else if (diagram.type == DiagramType.Curve){\n        draw_curve(svgelement, diagram, svgtag);\n    } else if (diagram.type == DiagramType.Text || diagram.type == DiagramType.MultilineText){\n        // do nothing\n    } else if (diagram.type == DiagramType.Image){\n        draw_image(svgelement, diagram, embed_image, svgtag);\n    } else if (diagram.type == DiagramType.Diagram){\n        for (let d of diagram.children) {\n            f_draw_to_svg(svgelement, d, false, embed_image, undefined, svgtag);\n        }\n    } else {\n        console.warn(\"Unreachable, unknown diagram type : \" + diagram.type);\n    }\n\n    // draw text last to make the scaling works\n    // because the text is scaled based on the bounding box of the svgelement\n    if (render_text) {\n        if (text_scaling_factor == undefined){\n            text_scaling_factor = calculate_text_scale(svgelement);\n        }\n        let text_diagrams      : Diagram[] = collect_text(diagram, DiagramType.Text);\n        let multiline_diagrams : Diagram[] = collect_text(diagram, DiagramType.MultilineText);\n        draw_texts(svgelement, text_diagrams, text_scaling_factor ?? 1, svgtag);\n        draw_multiline_texts(svgelement, multiline_diagrams, text_scaling_factor ?? 1, svgtag);\n    }\n    \n}\n\n/**\n * WARNING: DEPRECATED\n * use `draw_to_svg_element` instead\n *\n * Draw a diagram to an svg element\n * @param outer_svgelement the outer svg element to draw to\n * @param diagram the diagram to draw\n * @param set_html_attribute whether to set the html attribute of the outer_svgelement\n * @param render_text whether to render text\n * @param clear_svg whether to clear the svg before drawing\n */\nexport function draw_to_svg(outer_svgelement : SVGSVGElement, diagram : Diagram,\n    set_html_attribute : boolean = true, render_text : boolean = true, clear_svg : boolean = true) : void {\n    let options : draw_to_svg_options = {\n        set_html_attribute : set_html_attribute,\n        render_text : render_text,\n        clear_svg : clear_svg,\n    };\n    draw_to_svg_element(outer_svgelement, diagram, options);\n}\n\nexport interface draw_to_svg_options {\n    set_html_attribute? : boolean,\n    render_text? : boolean,\n    clear_svg? : boolean,\n    embed_image? : boolean,\n    background_color? : string,\n    padding? : number | number[],\n    text_scaling_reference_svg? : SVGSVGElement,\n    text_scaling_reference_padding? : number | number[],\n}\n\n// TODO: replace draw_to_svg with the current draw_to_svg_element in the next major version\n\n/**\n * Draw a diagram to an svg element\n * @param outer_svgelement the outer svg element to draw to\n * @param diagram the diagram to draw\n * @param options the options for drawing\n * ```typescript\n * options : {\n *    set_html_attribute? : boolean (true),\n *    render_text? : boolean (true),\n *    clear_svg? : boolean (true),\n *    embed_image? : boolean (false),\n *    background_color? : string (undefined),\n *    padding? : number | number[] (10),\n *    text_scaling_reference_svg? : SVGSVGElement (undefined),\n *    text_scaling_reference_padding? : number | number[] (undefined),\n * }\n * ````\n * define `text_scaling_reference_svg` and `text_scaling_reference_padding` to scale text based on another svg element\n */\nexport function draw_to_svg_element(outer_svgelement : SVGSVGElement, diagram : Diagram, options : draw_to_svg_options = {}) : void {\n    const set_html_attribute = options.set_html_attribute ?? true;\n    const render_text = options.render_text ?? true;\n    const clear_svg = options.clear_svg ?? true;\n    const embed_image = options.embed_image ?? false;\n    \n    let svgelement : SVGSVGElement | undefined = undefined;\n    // check if outer_svgelement has a child with meta=diagram_svg\n    for (let i in outer_svgelement.children) {\n        let child = outer_svgelement.children[i];\n        if (child instanceof SVGSVGElement && child.getAttribute(\"meta\") == \"diagram_svg\") {\n            svgelement = child;\n            break;\n        }\n    }\n\n    if (svgelement == undefined) {\n        // if svgelemet doesn't exist yet, create it\n        // create an inner svg element\n        svgelement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svgelement.setAttribute(\"meta\", \"diagram_svg\")\n        svgelement.setAttribute(\"width\", \"100%\");\n        svgelement.setAttribute(\"height\", \"100%\");\n        outer_svgelement.appendChild(svgelement);\n    }\n\n    let text_scaling_factor : number | undefined = undefined;\n    if (options.text_scaling_reference_svg) {\n        options.text_scaling_reference_padding = options.text_scaling_reference_padding ?? options.padding ?? 10;\n        options.text_scaling_reference_padding = expand_directional_value(options.text_scaling_reference_padding);\n        text_scaling_factor = calculate_text_scale(\n            options.text_scaling_reference_svg,\n            options.text_scaling_reference_padding as [number, number, number, number]\n        );\n    }\n    \n    // TODO : for performance, do smart clearing of svg, and not just clear everything\n    if (clear_svg) svgelement.innerHTML = \"\";\n\n    f_draw_to_svg(svgelement, diagram, render_text, embed_image, text_scaling_factor);\n\n    if (set_html_attribute) {\n        const pad_px = expand_directional_value(options.padding ?? 10);\n        // set viewbox to the bounding box\n        let bbox = svgelement.getBBox();\n        // add padding of 10px to the bounding box (if the graph is small, it'll mess it up)\n        // scale 10px based on the width and height of the svg\n        let svg_width = svgelement.width.baseVal.value - pad_px[1] - pad_px[3];\n        let svg_height = svgelement.height.baseVal.value - pad_px[0] - pad_px[2];\n        let scale = Math.max(bbox.width / svg_width, bbox.height / svg_height)\n        let pad = pad_px.map(p => p*scale);\n        // [top, right, bottom, left]\n        bbox.x -= pad[3];\n        bbox.y -= pad[0];\n        bbox.width += pad[1] + pad[3];\n        bbox.height += pad[0] + pad[2];\n        svgelement.setAttribute(\"viewBox\", `${bbox.x} ${bbox.y} ${bbox.width} ${bbox.height}`);\n        // set preserveAspectRatio to xMidYMid meet\n        svgelement.setAttribute(\"preserveAspectRatio\", \"xMidYMid meet\");\n        outer_svgelement.style.overflow = \"visible\";\n    }\n    \n    if (options.background_color) {\n        let bbox = svgelement.getBBox();\n        // if svgelement has viewBox set, use it instead of getBBox\n        if (svgelement.viewBox.baseVal.width !== 0) bbox = svgelement.viewBox.baseVal;\n        \n        // draw a rectangle as the background\n        let rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rect.setAttribute(\"x\", bbox.x.toString());\n        rect.setAttribute(\"y\", bbox.y.toString());\n        rect.setAttribute(\"width\", bbox.width.toString());\n        rect.setAttribute(\"height\", bbox.height.toString());\n        rect.style.fill = get_color(options.background_color as string, tab_color);\n        rect.style.stroke = \"none\";\n        \n        // prepend\n        svgelement.insertBefore(rect, svgelement.firstChild);\n    }\n}\n\nfunction is_texstr(s : string) : boolean {\n    return s.startsWith(\"$\") && s.endsWith(\"$\");\n}\nfunction is_texdisplaystr(s : string) : boolean {\n    return s.startsWith(\"$$\") && s.endsWith(\"$$\");\n}\nfunction strip_texstr(s : string) : string {\n    if (is_texdisplaystr(s)) return s.substring(2, s.length-2);\n    if (is_texstr(s)) return s.substring(1, s.length-1);\n    return s;\n}\n\ntype texhandler_config = {\n    display : boolean,\n    // fontsize : number,\n}\ntype texhadler_function = (texstr : string, config : texhandler_config) => string; // return SVG string\n\n/**\n * Recursively handle tex in svg\n * @param svg the svg element to handle\n * @param texhandler the tex handler function\n */\nexport function handle_tex_in_svg(svg : SVGElement, texhandler : texhadler_function) : void {\n    // recurse through all children of svg until we find text\n    // then replace the text with the svg returned by texhandler\n    for (let i = 0; i < svg.children.length; i++) {\n        let child = svg.children[i];\n        if (child instanceof SVGTextElement) {\n            let str = child.innerHTML;\n            if (!is_texstr(str)) continue;\n\n            let fontsizestr = child.getAttribute('font-size');\n            if (fontsizestr == null) continue;\n            let fontsize = parseFloat(fontsizestr);\n\n            let svgstr = texhandler(strip_texstr(str), {\n                display : is_texdisplaystr(str),\n                // fontsize : parseFloat(fontsize),\n            });\n\n            let xstr = child.getAttribute('_x');\n            let ystr = child.getAttribute('_y');\n            // let angstr = child.getAttribute('_angle');\n            if (xstr == null || ystr == null) continue;\n\n            let textanchor = child.getAttribute('text-anchor');\n            let dy = child.getAttribute('dy');\n            if (textanchor == null || dy == null) continue;\n\n            child.outerHTML = svgstr;\n            child = svg.children[i]; // update child\n\n            // HACK: scaling for mathjax tex2svg, for other option think about it later\n            let widthexstr = child.getAttribute('width');   // ###ex\n            if (widthexstr == null) continue;\n            let widthex = parseFloat(widthexstr.substring(0, widthexstr.length-2));\n            let heightexstr = child.getAttribute('height'); // ###ex\n            if (heightexstr == null) continue;\n            let heightex = parseFloat(heightexstr.substring(0, heightexstr.length-2));\n\n            const magic_number = 2;\n            let width = widthex * fontsize / magic_number;\n            let height = heightex * fontsize / magic_number;\n\n            let xval = parseFloat(xstr);\n            let yval = parseFloat(ystr);\n            switch (textanchor) {\n                case \"start\": break; // left\n                case \"middle\":       // center\n                    xval -= width/2; break;\n                case \"end\":          // right\n                    xval -= width; break;\n            }\n            switch (dy) {\n                case \"0.75em\": break; // top\n                case \"0.25em\":                  // center\n                    yval -= height/2; break;\n                case \"-0.25em\":         // bottom\n                    yval -= height; break;\n            }\n\n            child.setAttribute('width', width.toString());\n            child.setAttribute('height', height.toString());\n            child.setAttribute('x', xval.toString());\n            child.setAttribute('y', yval.toString());\n        } else if (child instanceof SVGElement) {\n            handle_tex_in_svg(child, texhandler);\n        }\n    }\n}\n\n/**\n * Download the svg as svg file\n * @param outer_svgelement the outer svg element to download\n */\nexport function download_svg_as_svg(outer_svgelement : SVGSVGElement) : void {\n    let inner_svgelement = outer_svgelement.querySelector(\"svg[meta=diagram_svg]\") as SVGSVGElement | null;\n    if (inner_svgelement == null) { console.warn(\"Cannot find svg element\"); return; }\n    let locator_svgelement = outer_svgelement.querySelector(\"svg[meta=control_svg]\") as SVGSVGElement | null;\n\n    let svgelement = inner_svgelement;\n    // concat locator_svgelement to the copy of inner_svgelement\n    if (locator_svgelement != null) {  \n        let copy_inner_svgelement = inner_svgelement.cloneNode(true) as SVGSVGElement;\n        for (let i in locator_svgelement.children) {\n            let child = locator_svgelement.children[i];\n            if (!(child instanceof SVGSVGElement)) continue;\n            copy_inner_svgelement.appendChild(child.cloneNode(true));\n        }\n        svgelement = copy_inner_svgelement;\n    }\n\n    // get svg string\n    let svg_string = new XMLSerializer().serializeToString(svgelement);\n    let blob = new Blob([svg_string], {type: \"image/svg+xml\"});\n    let url = URL.createObjectURL(blob);\n    let a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"diagramatics.svg\";\n    a.click();\n}\n\n/**\n * Download the svg as png file\n * @param outer_svgelement the outer svg element to download\n */\nexport function download_svg_as_png(outer_svgelement : SVGSVGElement) {\n    let inner_svgelement = outer_svgelement.querySelector(\"svg[meta=diagram_svg]\") as SVGSVGElement | null;\n    if (inner_svgelement == null) { console.warn(\"Cannot find svg element\"); return; }\n    let svgelem = outer_svgelement;\n\n    let svg_string = new XMLSerializer().serializeToString(svgelem);\n    let svg_blob = new Blob([svg_string], {type: \"image/svg+xml\"});\n\n    const DOMURL = window.URL || window.webkitURL || window;\n    const url = DOMURL.createObjectURL(svg_blob);\n\n    const image = new Image();\n    image.width = svgelem.width.baseVal.value;\n    image.height = svgelem.height.baseVal.value;\n    image.src = url;\n    image.onload = function() {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const ctx = canvas.getContext(\"2d\");\n        ctx?.drawImage(image, 0, 0);\n        DOMURL.revokeObjectURL(url);\n\n        const imgURI = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        const a = document.createElement(\"a\");\n        a.href = imgURI;\n        a.download = \"diagramatics.png\";\n        a.click();\n    }\n}\n","import { Diagram, polygon, line, curve, text, diagram_combine } from './diagram.js';\nimport { Vector2, V2 } from './vector.js';\nimport { to_radian } from './utils.js';\nimport { TAG } from './tag_names.js';\n\n// function helpers to create common shapes\n\n/**\n * Create rectange centered at origin\n * @param width width of the rectangle\n * @param height height of the rectangle\n * @returns a Diagram object\n */\nexport function rectangle(width : number, height : number) : Diagram {\n    let points = [\n        V2(-width/2,-height/2), V2( width/2,-height/2), \n        V2( width/2, height/2), V2(-width/2, height/2)\n    ];\n    return polygon(points);\n}\n\n/**\n * Create rectange with a given bottom left corner and top right corner\n * @param bottomleft bottom left corner of the rectangle\n * @param topright top right corner of the rectangle\n * @returns a Diagram object\n */\nexport function rectangle_corner(bottomleft : Vector2, topright : Vector2) : Diagram {\n    let points = [\n        bottomleft, V2(topright.x, bottomleft.y),\n        topright, V2(bottomleft.x, topright.y),\n    ];\n    return polygon(points);\n}\n\n/**\n * Create square centered at origin\n * @param side side length of the square\n * @returns a Diagram object\n */\nexport function square(side : number = 1) : Diagram {\n    return rectangle(side, side);\n}\n\n/**\n * Create regular polygon centered at origin with a given radius\n * @param n number of sides\n * @param radius radius of the polygon\n * @returns a Diagram object\n * \\* if you want to create a regular polygon with a given side length, use regular_polygon_side\n */\nexport function regular_polygon(n : number, radius : number = 1) : Diagram {\n    let points : Vector2[] = [];\n    for (let i = 0; i < n; i++) {\n        points.push(V2(0,radius).rotate(i*2*Math.PI/n));\n    }\n    return polygon(points);\n}\n\n/**\n * Create regular polygon centered at origin with a given side length\n * @param n number of sides\n * @param sidelength side length of the polygon\n * @returns a Diagram object\n * \\* if you want to create a regular polygon with a given radius, use regular_polygon\n */\nexport function regular_polygon_side(n : number, sidelength : number = 1) : Diagram {\n    let radius = sidelength/(2*Math.sin(Math.PI/n));\n    return regular_polygon(n, radius);\n}\n\n/**\n * Create circle centered at origin\n * *currently implemented as a regular polygon with 50 sides*\n * @param radius radius of the circle\n * @returns a Diagram object\n */\nexport function circle(radius : number = 1) : Diagram {\n    return regular_polygon(50, radius).append_tags(TAG.CIRCLE);\n}\n\n/**\n * Create an arc centered at origin\n * @param radius radius of the arc\n * @param angle angle of the arc\n * @returns a Diagram object\n */\nexport function arc(radius : number = 1, angle : number = to_radian(360)) : Diagram {\n    let n = 100;\n    let points : Vector2[] = [];\n    for (let i = 0; i < n; i++) {\n        points.push(V2(radius,0).rotate(i*angle/(n-1)));\n    }\n    return curve(points);\n}\n\n/**\n * Create an arrow from origin to a given point\n * @param v the end point of the arrow\n * @param headsize size of the arrow head\n * @returns a Diagram object\n */\nexport function arrow(v : Vector2, headsize : number = 1) : Diagram {\n    let line_diagram = line(V2(0,0), v).append_tags(TAG.ARROW_LINE);\n    let raw_triangle = polygon([V2(0,0), V2(-headsize, headsize/2), V2(-headsize, -headsize/2)]);\n    let head_triangle = raw_triangle.rotate(v.angle()).position(v).append_tags(TAG.ARROW_HEAD);\n    return diagram_combine(line_diagram, head_triangle);\n}\n\n/**\n * Create an arrow from a given point to another given point\n * @param start the start point of the arrow\n * @param end the end point of the arrow\n * @param headsize size of the arrow head\n * @returns a Diagram object\n */\nexport function arrow1(start : Vector2, end : Vector2, headsize : number = 1) : Diagram {\n    return arrow(end.sub(start), headsize).position(start);\n}\n\n/**\n * Create a two-sided arrow from a given point to another given point\n * @param start the start point of the arrow\n * @param end the end point of the arrow\n * @param headsize size of the arrow head\n * @returns a Diagram object\n */\nexport function arrow2(start : Vector2, end : Vector2, headsize : number = 1) : Diagram {\n    let line_diagram = line(start, end).append_tags(TAG.ARROW_LINE);\n    let direction    = end.sub(start);\n    let raw_triangle = polygon([V2(0,0), V2(-headsize, headsize/2), V2(-headsize, -headsize/2)]);\n    let head_triangle  = raw_triangle.rotate(direction.angle()).position(end).append_tags(TAG.ARROW_HEAD);\n    let head_triangle2 = raw_triangle.rotate(direction.angle()+Math.PI).position(start).append_tags(TAG.ARROW_HEAD);\n    return diagram_combine(line_diagram, head_triangle, head_triangle2);\n}\n\n/**\n * Create a text object with mathematical italic font\n * @param str text to be displayed\n * @returns a Diagram object\n */\nexport function textvar(str : string) : Diagram {\n    return text(str).append_tags(TAG.TEXTVAR);\n}\n","import { Diagram, polygon, line, diagram_combine, curve } from '../diagram.js';\nimport { Vector2, V2 } from '../vector.js';\nimport { linspace } from '../utils.js';\nimport { arrow1 } from '../shapes.js';\nimport { TAG } from '../tag_names.js';\n\n// ============================= utilities\n/**\n * Get the radius of a circle\n * @param circle a circle Diagram\n * @returns radius of the circle\n */\nexport function circle_radius(circle : Diagram) : number {\n    let tags = circle.tags;\n    if (!tags.includes(TAG.CIRCLE)) return -1;\n\n    let center = circle.get_anchor('center-center');\n    if (circle.path == undefined) return -1;\n    let p0 = circle.path.points[0];\n    return center.sub(p0).length();\n}\n\n/**\n * Get the tangent points of a circle from a point\n * @param point a point\n * @param circle a circle Diagram\n */\nexport function circle_tangent_point_from_point(point : Vector2, circle : Diagram) : [Vector2, Vector2] {\n    let radius = circle_radius(circle);\n    if (radius == -1) return [V2(0,0), V2(0,0)];\n    let center = circle.get_anchor('center-center');\n\n    // https://en.wikipedia.org/wiki/Tangent_lines_to_circles\n    \n    let r = radius;\n    let d0_2 = center.sub(point).length_sq();\n    let r_2 = r*r;\n\n    let v0 = point.sub(center);\n    let sLeft  = r_2 / d0_2;\n    let vLeft  = v0.scale(sLeft);\n    let sRight = r * Math.sqrt(d0_2 - r_2) / d0_2;\n    let vRight = V2(-v0.y, v0.x).scale(sRight);\n    let P1 = vLeft.add(vRight).add(center);\n    let P2 = vLeft.sub(vRight).add(center);\n    return [P1, P2];\n}\n\n/**\n * Get the points of a line\n * @param l a line Diagram\n * @returns the two points of the line\n */\nexport function line_points(l : Diagram) : [Vector2, Vector2] {\n    let tags = l.tags;\n    if (!tags.includes(TAG.LINE)) return [V2(0,0), V2(0,0)];\n    if (l.path == undefined) return [V2(0,0), V2(0,0)];\n\n    let p0 = l.path.points[0];\n    let p1 = l.path.points[1];\n    return [p0, p1];\n}\n\n/**\n * Get the intersection of a line with a horizontal line at y = yi\n * @param l a line Diagram\n * @param yi y value of the horizontal line\n * @returns the intersection point\n */\nexport function line_intersection_y(l : Diagram, yi : number) : Vector2 {\n    let [a, b] = line_points(l);\n    let xi = a.x + (b.x - a.x) * (yi - a.y) / (b.y - a.y);\n    return V2(xi, yi);\n}\n\n/**\n * Get the intersection of a line with a vertical line at x = xi\n * @param l a line Diagram\n * @param xi x value of the vertical line\n * @returns the intersection point\n */\nexport function line_intersection_x(l : Diagram, xi : number) : Vector2 {\n    let [a, b] = line_points(l);\n    let yi = a.y + (b.y - a.y) * (xi - a.x) / (b.x - a.x);\n    return V2(xi, yi);\n}\n\n/**\n * Get the intersection of two lines\n * @param l1 a line Diagram\n * @param l2 a line Diagram\n * @returns the intersection point\n * if the lines are parallel, return V2(Infinity, Infinity)\n */\nexport function line_intersection(l1 : Diagram, l2 : Diagram) : Vector2 {\n    if (!l1.tags.includes(TAG.LINE) || !l2.tags.includes(TAG.LINE)) return V2(Infinity, Infinity);\n    let [a1, b1] = line_points(l1);\n    let [a2, b2] = line_points(l2);\n\n    let x1 = a1.x; let y1 = a1.y; let x2 = b1.x; let y2 = b1.y;\n    let x3 = a2.x; let y3 = a2.y; let x4 = b2.x; let y4 = b2.y;\n\n    let d = (x1-x2)*(y3-y4) - (y1-y2)*(x3-x4);\n    if (d == 0) return V2(Infinity, Infinity);\n    let x = ((x1*y2 - y1*x2)*(x3-x4) - (x1-x2)*(x3*y4 - y3*x4))/d;\n    let y = ((x1*y2 - y1*x2)*(y3-y4) - (y1-y2)*(x3*y4 - y3*x4))/d;\n    return V2(x, y);\n}\n\n\n\n// ============================= shapes\n\n/**\n * Extend a line by a length on both ends\n * @param l a line Diagram\n * @param len1 length to extend on the first end\n * @param len2 length to extend on the second end\n * @returns a new line Diagram\n */\nexport function line_extend(l : Diagram, len1 : number, len2 : number) : Diagram {\n    let tags = l.tags;\n    if (!tags.includes(TAG.LINE)) return l;\n    if (l.path == undefined) return l;\n\n    let p0 = l.path.points[0];\n    let p1 = l.path.points[1];\n    let v = p1.sub(p0).normalize();\n    let p0_new = p0.sub(v.scale(len1));\n    let p1_new = p1.add(v.scale(len2));\n\n    let newl = l.copy();\n    if (newl.path == undefined) return l; // to surpress typescript error\n    newl.path.points = [p0_new, p1_new];\n    return newl;\n}\n\n/**\n * Get the size of a diagram\n * @param diagram a diagram\n * @returns the width and height of the diagram\n */\nexport function size(diagram : Diagram) : [number, number] {\n    let bb = diagram.bounding_box();\n    return [bb[1].x - bb[0].x, bb[1].y - bb[0].y];\n}\n","import { Diagram, diagram_combine, empty } from './diagram.js';\nimport { V2 } from './vector.js';\nimport { size } from './shapes/shapes_geometry.js';\n\nexport type VerticalAlignment   = 'top'  | 'center' | 'bottom';\nexport type HorizontalAlignment = 'left' | 'center' | 'right';\n\n/**\n * Align diagrams vertically\n * @param diagrams diagrams to be aligned\n * @param alignment vertical alignment of the diagrams\n * alignment can be 'top', 'center', or 'bottom'\n * @returns array of aligned diagrams\n */\nexport function align_vertical(diagrams : Diagram[], alignment : VerticalAlignment = 'center') : Diagram {\n    // align all the diagrams following the first diagram\n    if (diagrams.length == 0) { return empty(); }\n    let newdiagrams = [...diagrams]\n\n    if (alignment == 'top'){\n        let top_y = newdiagrams[0].get_anchor(\"top-left\").y;\n        // return diagrams.map(d => d.translate(V2(0, top_y - d.get_anchor(\"top-left\").y)));\n        for (let i = 0; i < newdiagrams.length; i++) {\n            newdiagrams[i] = newdiagrams[i].translate(V2(0, top_y - newdiagrams[i].get_anchor(\"top-left\").y));\n        }\n        return diagram_combine(...newdiagrams);\n    }\n    else if (alignment == 'center'){\n        let center_y = newdiagrams[0].get_anchor(\"center-left\").y;\n        // return diagrams.map(d => d.translate(V2(0, center_y - d.get_anchor(\"center-left\").y)));\n        for (let i = 0; i < newdiagrams.length; i++) {\n            newdiagrams[i] = newdiagrams[i].translate(V2(0, center_y - newdiagrams[i].get_anchor(\"center-left\").y));\n        }\n        return diagram_combine(...newdiagrams);\n    }\n    else if (alignment == 'bottom'){\n        let bottom_y = newdiagrams[0].get_anchor(\"bottom-left\").y;\n        // return diagrams.map(d => d.translate(V2(0, bottom_y - d.get_anchor(\"bottom-left\").y)));\n        for (let i = 0; i < newdiagrams.length; i++) {\n            newdiagrams[i] = newdiagrams[i].translate(V2(0, bottom_y - newdiagrams[i].get_anchor(\"bottom-left\").y));\n        }\n        return diagram_combine(...newdiagrams);\n    }\n    else {\n        throw new Error(\"Unknown vertical alignment : \" + alignment);\n    }\n}\n\n/**\n * Align diagrams horizontally\n * @param diagrams diagrams to be aligned\n * @param alignment horizontal alignment of the diagrams\n * alignment can be 'left', 'center', or 'right'\n * @returns array of aligned diagrams\n */\nexport function align_horizontal(diagrams : Diagram[], alignment : HorizontalAlignment = 'center') : Diagram {\n\n    // align all the diagrams following the first diagram\n    if (diagrams.length == 0) { return empty(); }\n    let newdiagrams = [...diagrams]\n\n    if (alignment == 'left'){\n        let left_x = newdiagrams[0].get_anchor(\"top-left\").x;\n        // return newdiagrams.map(d => d.translate(V2(left_x - d.get_anchor(\"top-left\").x, 0)));\n        for (let i = 0; i < newdiagrams.length; i++) {\n            newdiagrams[i] = newdiagrams[i].translate(V2(left_x - newdiagrams[i].get_anchor(\"top-left\").x, 0));\n        }\n        return diagram_combine(...newdiagrams);\n    }\n    else if (alignment == 'center'){\n        let center_x = newdiagrams[0].get_anchor(\"top-center\").x;\n        // return newdiagrams.map(d => d.translate(V2(center_x - d.get_anchor(\"top-center\").x, 0)));\n        for (let i = 0; i < newdiagrams.length; i++) {\n            newdiagrams[i] = newdiagrams[i].translate(V2(center_x - newdiagrams[i].get_anchor(\"top-center\").x, 0));\n        }\n        return diagram_combine(...newdiagrams);\n    }\n    else if (alignment == 'right'){\n        let right_x = newdiagrams[0].get_anchor(\"top-right\").x;\n        // return newdiagrams.map(d => d.translate(V2(right_x - d.get_anchor(\"top-right\").x, 0)));\n        for (let i = 0; i < newdiagrams.length; i++) {\n            newdiagrams[i] = newdiagrams[i].translate(V2(right_x - newdiagrams[i].get_anchor(\"top-right\").x, 0));\n        }\n        return diagram_combine(...newdiagrams);\n    }\n    else {\n        throw new Error(\"Unknown horizontal alignment : \" + alignment);\n    }\n}\n\n/**\n * Distribute diagrams horizontally\n * @param diagrams diagrams to be distributed\n * @param space space between the diagrams (default = 0)\n * @returns array of distributed diagrams\n */\nexport function distribute_horizontal(diagrams : Diagram[], space : number = 0) : Diagram {\n    if (diagrams.length == 0) { return empty(); }\n    let newdiagrams = [...diagrams]\n\n    let distributed_diagrams : Diagram[] = [newdiagrams[0]];\n    for (let i = 1; i < newdiagrams.length; i++) {\n        let prev_diagram = distributed_diagrams[i-1];\n        let this_diagram = newdiagrams[i];\n        let prev_right = prev_diagram.get_anchor(\"top-right\").x;\n        let this_left  = this_diagram.get_anchor(\"top-left\").x;\n        let dx = prev_right - this_left + space;\n        distributed_diagrams.push(this_diagram.translate(V2(dx, 0)));\n    }\n    return diagram_combine(...distributed_diagrams);\n}\n\n/**\n * Distribute diagrams vertically\n * @param diagrams diagrams to be distributed\n * @param space space between the diagrams (default = 0)\n * @returns array of distributed diagrams\n */\nexport function distribute_vertical(diagrams : Diagram[], space : number = 0) : Diagram {\n    if (diagrams.length == 0) { return empty(); }\n    let newdiagrams = [...diagrams]\n\n    let distributed_diagrams : Diagram[] = [newdiagrams[0]];\n    for (let i = 1; i < newdiagrams.length; i++) {\n        let prev_diagram = distributed_diagrams[i-1];\n        let this_diagram = newdiagrams[i];\n        let prev_bottom = prev_diagram.get_anchor(\"bottom-left\").y;\n        let this_top    = this_diagram.get_anchor(\"top-left\").y;\n        let dy = prev_bottom - this_top - space;\n        distributed_diagrams.push(this_diagram.translate(V2(0, dy)));\n    }\n    return diagram_combine(...distributed_diagrams);\n}\n\n/**\n * Distribute diagrams horizontally and align\n * @param diagrams diagrams to be distributed\n * @param horizontal_space space between the diagrams (default = 0)\n * @param alignment vertical alignment of the diagrams\n * alignment can be 'top', 'center', or 'bottom'\n * @returns array of distributed and aligned diagrams\n */\nexport function distribute_horizontal_and_align(diagrams : Diagram[], horizontal_space : number = 0,\n    alignment : VerticalAlignment = 'center') : Diagram {\n    return distribute_horizontal(align_vertical(diagrams, alignment).children, horizontal_space);\n}\n\n/**\n * Distribute diagrams vertically and align\n * @param diagrams diagrams to be distributed\n * @param vertical_space space between the diagrams (default = 0)\n * @param alignment horizontal alignment of the diagrams\n * alignment can be 'left', 'center', or 'right'\n * @returns array of distributed and aligned diagrams\n */\nexport function distribute_vertical_and_align(diagrams : Diagram[], vertical_space : number = 0,\n    alignment : HorizontalAlignment = 'center') : Diagram {\n    return distribute_vertical(align_horizontal(diagrams, alignment).children, vertical_space);\n}\n\n/**\n * Distribute diagrams in a grid\n * @param diagrams diagrams to be distributed\n * @param column_count number of columns\n * @param vectical_space space between the diagrams vertically (default = 0)\n * @param horizontal_space space between the diagrams horizontally (default = 0)\n * NODE: the behaviour is updated in v1.3.0 \n * (now the returned diagram's children is the distributed diagrams instead of list of list of diagrams)\n */\nexport function distribute_grid_row(diagrams : Diagram[], column_count : number, \n    vectical_space : number = 0, horizontal_space : number = 0,\n) : Diagram {\n    if (diagrams.length == 0) { return empty(); }\n    let newdiagrams = [...diagrams]\n\n    let row_count = Math.ceil(newdiagrams.length / column_count);\n    let rows : Diagram[][] = [];\n    for (let i = 0; i < row_count; i++) {\n        rows.push(newdiagrams.slice(i * column_count, (i+1) * column_count));\n    }\n    let distributed_rows = rows.map(row => distribute_horizontal(row, horizontal_space));\n    let distributed_diagrams = distribute_vertical(distributed_rows, vectical_space);\n\n    let grid_diagrams = []\n    for (let i = 0; i < distributed_diagrams.children.length; i++) {\n        for (let j = 0; j < distributed_diagrams.children[i].children.length; j++) {\n            grid_diagrams.push(distributed_diagrams.children[i].children[j]);\n        }\n    }\n    return diagram_combine(...grid_diagrams);\n}\n\n/**\n * Distribute diagrams in a variable width row\n * if there is a diagram that is wider than the container width, it will be placed in a separate row\n * @param diagrams diagrams to be distributed\n * @param container_width width of the container\n * @param vertical_space space between the diagrams vertically (default = 0)\n * @param horizontal_space space between the diagrams horizontally (default = 0)\n * @param vertical_alignment vertical alignment of the diagrams (default = 'center')\n * alignment can be 'top', 'center', or 'bottom'\n * @param horizontal_alignment horizontal alignment of the diagrams (default = 'left')\n * alignment can be 'left', 'center', or 'right'\n */\nexport function distribute_variable_row(diagrams: Diagram[], container_width : number, \n    vertical_space : number = 0, horizontal_space : number = 0, \n    vertical_alignment : VerticalAlignment = 'center', \n    horizontal_alignment : HorizontalAlignment = 'left'\n) : Diagram {\n    if (diagrams.length == 0) { return empty(); }\n\n    let rows : Diagram[] = [];\n    let current_row : Diagram[] = [];\n    let current_row_w = 0;\n\n    function add_diagrams_to_rows(arr : Diagram[]) {\n        let distributed_row_dg = distribute_horizontal_and_align(arr, horizontal_space, vertical_alignment);\n        rows.push(distributed_row_dg);\n        current_row = [];\n        current_row_w = 0;\n    }\n\n    for (let i = 0; i < diagrams.length; i++) {\n        let d = diagrams[i];\n        let w = size(d)[0];\n        if (w > container_width) {\n            if (current_row.length > 0) add_diagrams_to_rows(current_row);\n            current_row.push(d); add_diagrams_to_rows(current_row);\n            continue;\n        }\n\n        if (current_row_w + horizontal_space + w > container_width) add_diagrams_to_rows(current_row);\n\n        current_row.push(d);\n        current_row_w += w + horizontal_space;\n    }\n\n    if (current_row.length > 0) add_diagrams_to_rows(current_row);\n\n    // distribute vertically\n    let distributed_diagrams = distribute_vertical_and_align(rows, vertical_space, horizontal_alignment);\n\n    let row_diagrams = []\n    for (let i = 0; i < distributed_diagrams.children.length; i++) {\n        for (let j = 0; j < distributed_diagrams.children[i].children.length; j++) {\n            row_diagrams.push(distributed_diagrams.children[i].children[j]);\n        }\n    }\n    return diagram_combine(...row_diagrams);\n}\n","import { Diagram, DiagramType, diagram_combine, empty } from './diagram.js';\nimport { str_to_mathematical_italic } from './unicode_utils.js'\nimport { Vector2, V2 } from './vector.js';\nimport { get_color, tab_color } from './color_palette.js';\nimport { f_draw_to_svg, calculate_text_scale } from './draw_svg.js';\nimport { rectangle, rectangle_corner } from './shapes.js';\nimport { size } from './shapes/shapes_geometry.js';\nimport { HorizontalAlignment, VerticalAlignment, distribute_horizontal_and_align, distribute_variable_row, distribute_vertical_and_align } from './alignment.js';\nimport { range } from './utils.js';\n\nfunction format_number(val : number, prec : number) {\n    let fixed = val.toFixed(prec);\n    // remove trailing zeros\n    // and if the last character is a dot, remove it\n    return fixed.replace(/\\.?0+$/, \"\");\n}\nexport type formatFunction = (name : string, value : any, prec? : number) => string;\nconst defaultFormat_f : formatFunction = (name : string, val : any, prec? : number) => {\n    let val_str = (typeof val == 'number' && prec != undefined) ? format_number(val,prec) : val.toString();\n    return `${str_to_mathematical_italic(name)} = ${val_str}`;\n}\n\ntype setter_function_t = (_ : any) => void;\ntype inpVariables_t = {[key : string] : any};\ntype inpSetter_t    = {[key : string] : setter_function_t };\n\nenum control_svg_name {\n    locator   = \"control_svg\",\n    dnd       = \"dnd_svg\",\n    custom    = \"custom_int_svg\",\n    button    = \"button_svg\"\n}\n\n/**\n * Object that controls the interactivity of the diagram\n */\nexport class Interactive {\n    public inp_variables : inpVariables_t = {};\n    public inp_setter    : inpSetter_t = {};\n    public display_mode  : \"svg\" | \"canvas\" = \"svg\";\n\n    public diagram_svg : SVGSVGElement | undefined = undefined;\n    public locator_svg : SVGSVGElement | undefined = undefined;\n    public dnd_svg : SVGSVGElement | undefined = undefined;\n    public custom_svg : SVGSVGElement | undefined = undefined;\n    public button_svg : SVGSVGElement | undefined = undefined;\n\n    private locatorHandler? : LocatorHandler = undefined;\n    private dragAndDropHandler? : DragAndDropHandler = undefined;\n    private buttonHandler? : ButtonHandler = undefined;\n    // no support for canvas yet\n\n    public draw_function : (inp_object : inpVariables_t, setter_object? : inpSetter_t) => any \n        = (_) => {};\n    public display_precision : undefined | number = 5;\n    intervals : {[key : string] : any} = {};         \n    \n    public registeredEventListenerRemoveFunctions : (() => void)[] = [];\n\n    /**\n     * @param control_container_div the div that contains the control elements\n     * @param diagram_outer_svg the svg element that contains the diagram\n     * \\* _only needed if you want to use the locator_\n     * @param inp_object_ the object that contains the variables\n     * \\* _only needed if you want to use custom input object_\n     */\n    constructor(\n        public control_container_div : HTMLElement, \n        public diagram_outer_svg? : SVGSVGElement,\n        inp_object_? : {[key : string] : any}\n    ){\n        if (inp_object_ != undefined){ this.inp_variables = inp_object_; }\n    }\n\n    public draw() : void {\n        this.draw_function(this.inp_variables, this.inp_setter);\n        this.locatorHandler?.setViewBox();\n        this.dragAndDropHandler?.setViewBox();\n        set_viewbox(this.custom_svg, this.diagram_svg);\n        set_viewbox(this.button_svg, this.diagram_svg);\n        // TODO: also do this for the other control_svg\n    }\n\n    public set(variable_name : string, val : any) : void {\n        this.inp_setter[variable_name](val);\n    }\n    public get(variable_name : string) : any {\n        return this.inp_variables[variable_name];\n    }\n\n    public label(variable_name : string, value : any, display_format_func : formatFunction = defaultFormat_f){\n\n        let labeldiv = document.createElement('div');\n        labeldiv.classList.add(\"diagramatics-label\");\n        labeldiv.innerHTML = display_format_func(variable_name, value, this.display_precision);\n\n        this.inp_variables[variable_name] = value;\n\n        // setter ==========================\n        const setter = (val : any) => {\n            this.inp_variables[variable_name] = val;\n            labeldiv.innerHTML = display_format_func(variable_name, val, this.display_precision);\n        }\n        this.inp_setter[variable_name] = setter;\n\n        // ==============================\n        // add components to div\n        //\n        // <div class=\"diagramatics-label-container\">\n        //     <div class=\"diagramatics-label\"></div>\n        // </div>\n        \n        let container = document.createElement('div');\n        container.classList.add(\"diagramatics-label-container\");\n        container.appendChild(labeldiv);\n\n        this.control_container_div.appendChild(container);\n    }\n\n\n    /**\n     * WARNING: deprecated\n     * use `locator_initial_draw` instead\n     */\n    public locator_draw(){\n        this.locatorHandler?.setViewBox();\n    }\n    public locator_initial_draw(){\n        // TODO: generate the svg here\n        this.locatorHandler?.setViewBox();\n    }\n\n    /** \n     * alias for `dnd_initial_draw`\n     */\n    public drag_and_drop_initial_draw(){\n        this.dnd_initial_draw();\n    }\n    public dnd_initial_draw() {\n        this.dragAndDropHandler?.setViewBox();\n        this.dragAndDropHandler?.drawSvg();\n    }\n    \n    private registerEventListener(\n        element: EventTarget, \n        type: keyof GlobalEventHandlersEventMap, \n        callback: EventListenerOrEventListenerObject | null,\n        options? : boolean | AddEventListenerOptions,\n    ) {\n        element.addEventListener(type, callback, options);\n        const removeFunction = () => element.removeEventListener(type, callback);\n        this.registeredEventListenerRemoveFunctions.push(removeFunction);\n    }\n    \n    public removeRegisteredEventListener() {\n        this.registeredEventListenerRemoveFunctions.forEach(f => f());\n        this.registeredEventListenerRemoveFunctions = [];\n    }\n    \n\n    get_svg_element(metaname : string) : SVGSVGElement {\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\n        let diagram_svg : SVGSVGElement | undefined = undefined;\n        // check if this.diagram_outer_svg has a child with meta=control_svg\n        // if not, create one\n        let svg_element : SVGSVGElement | undefined = undefined;\n\n        for (let i in this.diagram_outer_svg.children) {\n            let child = this.diagram_outer_svg.children[i];\n            if (child instanceof SVGSVGElement && child.getAttribute(\"meta\") == metaname) {\n                svg_element = child;\n            }\n        }\n\n        if (svg_element == undefined) {\n            svg_element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            svg_element.setAttribute(\"meta\", metaname);\n            svg_element.setAttribute(\"width\", \"100%\");\n            svg_element.setAttribute(\"height\", \"100%\");\n            if (metaname == control_svg_name.dnd) svg_element.style.overflow = \"visible\";\n            this.diagram_outer_svg.appendChild(svg_element);\n        }\n\n        return svg_element;\n    }\n\n    get_diagram_svg() : SVGSVGElement {\n        let diagram_svg = this.get_svg_element(\"diagram_svg\");\n        this.diagram_svg = diagram_svg;\n        return diagram_svg;\n    }\n\n    /**\n     * Create a locator\n     * Locator is a draggable object that contain 2D coordinate information\n     * @param variable_name name of the variable\n     * @param value initial value\n     * @param radius radius of the locator draggable object\n     * @param color color of the locator\n     * @param track_diagram if provided, the locator will snap to the closest point on the diagram\n     */\n    public locator(variable_name : string, value : Vector2, radius : number, color : string = 'blue', track_diagram? : Diagram, blink : boolean = true){\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\n        this.inp_variables[variable_name] = value;\n\n        let diagram_svg  = this.get_diagram_svg();\n        let control_svg  = this.get_svg_element(control_svg_name.locator);\n        this.locator_svg = control_svg;\n        // if this is the fist time this function is called, create a locatorHandler\n        if (this.locatorHandler == undefined) {\n            let locatorHandler = new LocatorHandler(control_svg, diagram_svg);\n            this.locatorHandler = locatorHandler;\n            this.registerEventListener(this.diagram_outer_svg, 'mousemove',  (evt:any) => { locatorHandler.drag(evt)});\n            this.registerEventListener(this.diagram_outer_svg, 'mouseup',    (evt:any) => { locatorHandler.endDrag(evt)});\n            this.registerEventListener(this.diagram_outer_svg, 'touchmove',  (evt:any) => { locatorHandler.drag(evt)});\n            this.registerEventListener(this.diagram_outer_svg, 'touchend',   (evt:any) => { locatorHandler.endDrag(evt)});\n            this.registerEventListener(this.diagram_outer_svg, 'touchcancel',(evt:any) => { locatorHandler.endDrag(evt)});\n        }\n\n\n        // ============== callback\n        const callback = (pos : Vector2, redraw : boolean = true) => {\n            this.inp_variables[variable_name] = pos;\n            if (redraw) this.draw();\n        }\n        this.locatorHandler.registerCallback(variable_name, callback);\n\n        // ============== Circle element\n\n        let locator_svg = LocatorHandler.create_locator_circle_pointer_svg(radius, value, color, blink);\n        if(blink){\n            // store the circle_outer into the LocatorHandler so that we can turn it off later\n            let blinking_outers = locator_svg.getElementsByClassName(\"diagramatics-locator-blink\");\n            for (let i = 0; i < blinking_outers.length; i++)\n                (this.locatorHandler as LocatorHandler).addBlinkingCircleOuter(blinking_outers[i])\n        }\n        this.registerEventListener(locator_svg, 'mousedown', (evt:any) => {\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\n        });\n        this.registerEventListener(locator_svg, 'touchstart', (evt:any) => {\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\n        });\n        control_svg.appendChild(locator_svg);\n\n        // =============== setter\n        let setter;\n        if (track_diagram) {\n            if (track_diagram.type != DiagramType.Polygon && track_diagram.type != DiagramType.Curve)\n                throw Error('Track diagram must be a polygon or curve');\n            if (track_diagram.path == undefined) throw Error(`diagram {diagtam.type} must have a path`);\n            let track = track_diagram.path.points;\n            setter = (pos : Vector2) => {\n                let coord = closest_point_from_points(pos, track);\n                locator_svg.setAttributeNS(null, \"x\", coord.x.toString());\n                locator_svg.setAttributeNS(null, \"y\", (-coord.y).toString());\n                return coord;\n            }\n        }\n        else{\n            setter = (pos : Vector2) => {\n                locator_svg.setAttributeNS(null, \"x\", pos.x.toString());\n                locator_svg.setAttributeNS(null, \"y\", (-pos.y).toString());\n                return pos;\n            }\n        }\n        this.locatorHandler.registerSetter(variable_name, setter);\n\n        // set initial position\n        let init_pos = setter(value);\n        callback(init_pos, false);\n    }\n\n\n    // TODO: in the next breaking changes update,\n    // merge this function with locator\n    /**\n     * Create a locator with custom diagram object\n     * @param variable_name name of the variable\n     * @param value initial value\n     * @param diagram diagram of the locator\n     * @param track_diagram if provided, the locator will snap to the closest point on the diagram\n     * @param blink if true, the locator will blink\n     */\n    public locator_custom(variable_name : string, value : Vector2, diagram : Diagram, track_diagram? : Diagram, blink : boolean = true){\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\n        this.inp_variables[variable_name] = value;\n\n        let diagram_svg  = this.get_diagram_svg();\n        let control_svg  = this.get_svg_element(control_svg_name.locator);\n        this.locator_svg = control_svg;\n        // if this is the fist time this function is called, create a locatorHandler\n        if (this.locatorHandler == undefined) {\n            let locatorHandler = new LocatorHandler(control_svg, diagram_svg);\n            this.locatorHandler = locatorHandler;\n            this.registerEventListener(this.diagram_outer_svg, 'mousemove',  (evt:any) => { locatorHandler.drag(evt); })\n            this.registerEventListener(this.diagram_outer_svg, 'mouseup',    (evt:any) => { locatorHandler.endDrag(evt); })\n            this.registerEventListener(this.diagram_outer_svg, 'touchmove',  (evt:any) => { locatorHandler.drag(evt); })\n            this.registerEventListener(this.diagram_outer_svg, 'touchend',   (evt:any) => { locatorHandler.endDrag(evt); })\n            this.registerEventListener(this.diagram_outer_svg, 'touchcancel',(evt:any) => { locatorHandler.endDrag(evt); })\n        }\n\n\n        // ============== callback\n        const callback = (pos : Vector2, redraw : boolean = true) => {\n            this.inp_variables[variable_name] = pos;\n            if (redraw) this.draw();\n        }\n        this.locatorHandler.registerCallback(variable_name, callback);\n\n        // ============== Circle element\n\n        let locator_svg = this.locatorHandler!.create_locator_diagram_svg(diagram, blink);\n        this.registerEventListener(locator_svg, 'mousedown', (evt:any) => {\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\n        });\n        this.registerEventListener(locator_svg, 'touchstart', (evt:any) => {\n            this.locatorHandler!.startDrag(evt, variable_name, locator_svg);\n        });\n        control_svg.appendChild(locator_svg);\n\n        // =============== setter\n        let setter;\n        if (track_diagram) {\n            if (track_diagram.type != DiagramType.Polygon && track_diagram.type != DiagramType.Curve)\n                throw Error('Track diagram must be a polygon or curve');\n            if (track_diagram.path == undefined) throw Error(`diagram {diagtam.type} must have a path`);\n            let track = track_diagram.path.points;\n            setter = (pos : Vector2) => {\n                let coord = closest_point_from_points(pos, track);\n                locator_svg.setAttributeNS(null, \"x\", coord.x.toString());\n                locator_svg.setAttributeNS(null, \"y\", (-coord.y).toString());\n                return coord;\n            }\n        }\n        else{\n            setter = (pos : Vector2) => {\n                locator_svg.setAttributeNS(null, \"x\", pos.x.toString());\n                locator_svg.setAttributeNS(null, \"y\", (-pos.y).toString());\n                return pos;\n            }\n        }\n        this.locatorHandler.registerSetter(variable_name, setter);\n\n        // set initial position\n        let init_pos = setter(value);\n        callback(init_pos, false);\n    }\n\n    /**\n     * Create a slider\n     * @param variable_name name of the variable\n     * @param min minimum value\n     * @param max maximum value\n     * @param value initial value\n     * @param step step size\n     * @param time time of the animation in milliseconds\n     * @param display_format_func function to format the display of the value\n    */\n    public slider(variable_name : string, min : number = 0, max : number = 100, value : number = 50, step : number = -1, \n        time : number = 1.5, display_format_func : formatFunction = defaultFormat_f){\n        // if the step is -1, then it is automatically calculated\n        if (step == -1){ step = (max - min) / 100; }\n\n        // initialize the variable\n        this.inp_variables[variable_name] = value;\n\n        // =========== label =============\n        let labeldiv = document.createElement('div');\n        labeldiv.classList.add(\"diagramatics-label\");\n        labeldiv.innerHTML = display_format_func(variable_name, value, this.display_precision);\n\n        // =========== slider ===========\n\n        // create the callback function\n        const callback = (val : number, redraw : boolean = true) => {\n            this.inp_variables[variable_name] = val;\n            labeldiv.innerHTML = display_format_func(variable_name, val, this.display_precision);\n            if (redraw) this.draw();\n        }\n        let slider = create_slider(callback, min, max, value, step);\n\n        // ================ setter\n        const setter = (val : number) => {\n            slider.value = val.toString();\n            callback(val, false);\n        }\n\n        this.inp_setter[variable_name] = setter;\n\n        // =========== playbutton ========\n        let nstep = (max - min) / step;\n        const interval_time = 1000 * time / nstep;\n\n        let playbutton = document.createElement('button');\n        let symboldiv  = document.createElement('div');\n        symboldiv.classList.add(\"diagramatics-slider-playbutton-symbol\");\n        playbutton.appendChild(symboldiv);\n        playbutton.classList.add(\"diagramatics-slider-playbutton\");\n        playbutton.onclick = () => {\n            if (this.intervals[variable_name] == undefined){\n                // if is not playing\n                playbutton.classList.add(\"paused\");\n                this.intervals[variable_name] = setInterval(() => {\n                    let val = parseFloat(slider.value);\n                    val += step;\n                    // wrap around\n                    val = ((val - min) % (max - min)) + min;\n                    \n                    slider.value = val.toString();\n                    callback(val);\n                }, interval_time);\n            } else {\n                // if is playing\n                playbutton.classList.remove(\"paused\");\n                clearInterval(this.intervals[variable_name]);\n                this.intervals[variable_name] = undefined;\n            }\n        }\n\n        // ==============================\n        // add components to div\n        //\n        // <div class=\"diagramatics-slider-leftcontainer\">\n        //     <br>\n        //     <button class=\"diagramatics-slider-playbutton\"></button>\n        // </div>\n        // <div class=\"diagramatics-slider-rightcontainer\">\n        //     <div class=\"diagramatics-label\"></div>\n        //     <input type=\"range\"class=\"diagramatics-slider\">\n        // </div>\n        //\n        let leftcontainer = document.createElement('div');\n        leftcontainer.classList.add(\"diagramatics-slider-leftcontainer\");\n        leftcontainer.appendChild(document.createElement('br'));\n        leftcontainer.appendChild(playbutton);\n\n        let rightcontainer = document.createElement('div');\n        rightcontainer.classList.add(\"diagramatics-slider-rightcontainer\");\n        rightcontainer.appendChild(labeldiv);\n        rightcontainer.appendChild(slider);\n\n        let container = document.createElement('div');\n        container.classList.add(\"diagramatics-slider-container\");\n        container.appendChild(leftcontainer);\n        container.appendChild(rightcontainer);\n\n        this.control_container_div.appendChild(container);\n    }\n\n    private init_drag_and_drop() {\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\n        let diagram_svg = this.get_diagram_svg();\n        let dnd_svg     = this.get_svg_element(control_svg_name.dnd);\n        this.dnd_svg    = dnd_svg;\n\n        // if this is the fist time this function is called, create a dragAndDropHandler\n        if (this.dragAndDropHandler == undefined) {\n            let dragAndDropHandler = new DragAndDropHandler(dnd_svg, diagram_svg);\n            this.dragAndDropHandler = dragAndDropHandler;\n            // this.registerEventListener(this.diagram_outer_svg, 'mousemove',  (evt:any) => {dragAndDropHandler.drag(evt);});\n            this.registerEventListener(document, 'mousemove',  (evt:any) => {dragAndDropHandler.drag(evt);});\n            this.registerEventListener(document, 'mouseup',    (evt:any) => {dragAndDropHandler.endDrag(evt);});\n            this.registerEventListener(document, 'touchmove',  (evt:any) => {dragAndDropHandler.drag(evt);});\n            this.registerEventListener(document, 'touchend',   (evt:any) => {dragAndDropHandler.endDrag(evt);});\n            this.registerEventListener(document, 'touchcancel',(evt:any) => {dragAndDropHandler.endDrag(evt);});\n        }\n    }\n\n    /**\n     * Create a drag and drop container\n     * @param name name of the container\n     * @param diagram diagram of the container\n     * @param capacity capacity of the container (default is 1)\n     * @param config configuration of the container positioning\n     * the configuration is an object with the following format:\n     * `{type:\"horizontal-uniform\"}`, `{type:\"vertical-uniform\"}`, `{type:\"grid\", value:[number, number]}`\n     * `{type:\"horizontal\", padding:number}`, `{type:\"vertical\", padding:number}`\n     * `{type:\"flex-row\", padding:number, vertical_alignment:VerticalAlignment, horizontal_alignment:HorizontalAlignment}`\n    */\n    public dnd_container(name : string, diagram : Diagram, capacity? : number, config? : dnd_container_positioning) {\n        this.init_drag_and_drop();\n        this.dragAndDropHandler?.add_container(name, diagram, capacity, config);\n    }\n\n    // TODO: in the next breaking changes update,\n    // merge this function with dnd_draggable_to_container\n    /**\n     * Create a drag and drop draggable that is positioned into an existing container\n     * @param name name of the draggable\n     * @param diagram diagram of the draggable\n     * @param container_name name of the container\n     * @param callback callback function when the draggable is moved\n     */\n    public dnd_draggable_to_container(name : string, diagram : Diagram, container_name : string, callback? : (name:string, container:string) => any) {\n        this.init_drag_and_drop();\n        if (this.dragAndDropHandler == undefined) throw Error(\"dragAndDropHandler in Interactive class is undefined\");\n\n        this.inp_variables[name] = diagram.origin;\n        this.dragAndDropHandler.add_draggable_to_container(name, diagram, container_name);\n\n        const dnd_callback = (pos : Vector2, redraw : boolean = true) => {\n            this.inp_variables[name] = pos;\n            if (callback) callback(name, container_name);\n            if (redraw) this.draw();\n        }\n        this.dragAndDropHandler.registerCallback(name, dnd_callback);\n    }\n    \n    /**\n     * Create a drag and drop draggable\n     * @param name name of the draggable\n     * @param diagram diagram of the draggable\n     * @param container_diagram diagram of the container, if not provided, a container will be created automatically\n     * @param callback callback function when the draggable is moved\n    */\n    public dnd_draggable(name : string, diagram : Diagram, container_diagram? : Diagram, callback? : (name:string, pos:Vector2) => any) {\n        this.init_drag_and_drop();\n        if (this.dragAndDropHandler == undefined) throw Error(\"dragAndDropHandler in Interactive class is undefined\");\n\n        this.inp_variables[name] = diagram.origin;\n        this.dragAndDropHandler.add_draggable_with_container(name, diagram, container_diagram);\n\n        const dnd_callback = (pos : Vector2, redraw : boolean = true) => {\n            this.inp_variables[name] = pos;\n            if (callback) callback(name, pos);\n            if (redraw) this.draw();\n        }\n        this.dragAndDropHandler.registerCallback(name, dnd_callback);\n    }\n\n    /**\n     * Register a callback function when a draggable is dropped outside of a container\n     * @param callback callback function\n     */\n    public dnd_register_drop_outside_callback(callback : (name : string) => any) {\n        this.dragAndDropHandler?.register_dropped_outside_callback(callback);\n    }\n\n    /**\n     * Move a draggable to a container\n     * @param name name of the draggable\n     * @param container_name name of the container\n     */\n    public dnd_move_to_container(name : string, container_name : string) {\n        this.dragAndDropHandler?.try_move_draggable_to_container(name, container_name);\n    }\n\n    /**\n     * Get the data of the drag and drop objects with the format:\n     * `{container:string, content:string[]}[]`\n    */\n    public get_dnd_data() : DragAndDropData {\n        return this.dragAndDropHandler?.getData() ?? [];\n    }\n\n    /**\n     * Set the data of the drag and drop objects with the format:\n     * `{container:string, content:string[]}[]`\n     */\n    public set_dnd_data(data : DragAndDropData) : void {\n        this.dragAndDropHandler?.setData(data);\n    }\n    \n    /**\n    * Get the content size of a container\n    */\n    public  get_dnd_container_content_size(container_name : string) : [number,number] {\n       if (!this.dragAndDropHandler) return [NaN,NaN];\n       return this.dragAndDropHandler.get_container_content_size(container_name);\n    }\n    \n    /**\n     * Set whether the content of the container should be sorted or not\n     */\n    public set_dnd_content_sort(sort_content : boolean) : void {\n        if (!this.dragAndDropHandler) return;\n        this.dragAndDropHandler.sort_content = sort_content;\n    }\n    \n    public remove_dnd_draggable(name : string) {\n        this.dragAndDropHandler?.remove_draggable(name);\n    }\n\n    /**\n     * Create a custom interactive object\n     * @param id id of the object\n     * @param classlist list of classes of the object\n     * @param diagram diagram of the object\n     * @returns the svg element of the object\n     */\n    public custom_object(id : string, classlist: string[], diagram : Diagram) : SVGSVGElement {\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\n        let diagram_svg = this.get_diagram_svg();\n        let control_svg = this.get_svg_element(control_svg_name.custom);\n\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg, diagram, true, false, calculate_text_scale(diagram_svg));\n        svg.setAttribute(\"overflow\", \"visible\");\n        svg.setAttribute(\"class\", classlist.join(\" \"));\n        svg.setAttribute(\"id\",id);\n\n        control_svg.appendChild(svg);\n        this.custom_svg = control_svg;\n        return svg;\n    }\n\n    private init_button() {\n        if (this.diagram_outer_svg == undefined) throw Error(\"diagram_outer_svg in Interactive class is undefined\");\n        let diagram_svg = this.get_diagram_svg();\n        let button_svg  = this.get_svg_element(control_svg_name.button);\n        this.button_svg = button_svg;\n\n        // if this is the fist time this function is called, create a dragAndDropHandler\n        if (this.buttonHandler == undefined) {\n            let buttonHandler = new ButtonHandler(button_svg, diagram_svg);\n            this.buttonHandler = buttonHandler;\n        }\n    }\n\n    /**\n     * Create a toggle button\n     * @param name name of the button\n     * @param diagram_on diagram of the button when it is on\n     * @param diagram_off diagram of the button when it is off\n     * @param state initial state of the button\n     * @param callback callback function when the button state is changed\n    */\n    public button_toggle(name : string, diagram_on : Diagram, diagram_off : Diagram, state : boolean = false,\n        callback? : (name : string, state : boolean) => any\n    ){\n        this.init_button();\n        if (this.buttonHandler == undefined) throw Error(\"buttonHandler in Interactive class is undefined\");\n\n        this.inp_variables[name] = state;\n\n        let main_callback;\n        if (callback){\n            main_callback = (state : boolean, redraw : boolean = true) => { \n                this.inp_variables[name] = state \n                callback(name, state);\n                if (redraw) this.draw();\n            }\n        } else {\n            main_callback = (state : boolean, redraw : boolean = true) => { \n                this.inp_variables[name] = state \n                if (redraw) this.draw();\n            }\n\n        }\n\n        let setter = this.buttonHandler.try_add_toggle(name, diagram_on, diagram_off, state, main_callback);\n        this.inp_setter[name] = setter;\n    }\n\n    /**\n     * Create a click button\n     * @param name name of the button\n     * @param diagram diagram of the button\n     * @param diagram_pressed diagram of the button when it is pressed\n     * @param callback callback function when the button is clicked\n    */\n    public button_click(name : string, diagram : Diagram, diagram_pressed : Diagram, callback : () => any){\n        this.init_button();\n        if (this.buttonHandler == undefined) throw Error(\"buttonHandler in Interactive class is undefined\");\n\n        let n_callback = () => { callback(); this.draw(); }\n        this.buttonHandler.try_add_click(name, diagram, diagram_pressed, n_callback);\n    }\n}\n\n// ========== functions\n//\n\nfunction set_viewbox(taget : SVGSVGElement | undefined, source : SVGSVGElement | undefined) {\n    if (taget == undefined) return;\n    if (source == undefined) return;\n    taget.setAttribute(\"viewBox\", source.getAttribute(\"viewBox\") as string);\n    taget.setAttribute(\"preserveAspectRatio\", source.getAttribute(\"preserveAspectRatio\") as string);\n}\n\n\nfunction create_slider(callback : (val : number) => any, min : number = 0, max : number = 100, value : number = 50, step : number) : HTMLInputElement {\n    // create a slider\n    let slider = document.createElement(\"input\");\n    slider.type = \"range\";\n    slider.min = min.toString();\n    slider.max = max.toString();\n    slider.value = value.toString();\n    slider.step = step.toString();\n    slider.oninput = () => {\n        let val = slider.value;\n        callback(parseFloat(val));\n    }\n    // add class to slider\n    slider.classList.add(\"diagramatics-slider\");\n    return slider;\n}\n\n// function create_locator() : SVGCircleElement {\n// }\n//\nfunction closest_point_from_points(p : Vector2, points : Vector2[]) : Vector2 {\n    if (points.length == 0) return p;\n    let closest_d2 = Infinity;\n    let closest_p = points[0];\n    for (let i = 0; i < points.length; i++) {\n        let d2 = points[i].sub(p).length_sq();\n        if (d2 < closest_d2) {\n            closest_d2 = d2;\n            closest_p = points[i];\n        }\n    }\n    return closest_p;\n}\n\n// helper to calculate CTM in firefox\n// there's a well known bug in firefox about `getScreenCTM()`\nfunction firefox_calcCTM(svgelem : SVGSVGElement) : DOMMatrix {\n    let ctm = svgelem.getScreenCTM() as DOMMatrix;\n    // get screen width and height of the element\n    let screenWidth  = svgelem.width.baseVal.value;\n    let screenHeight = svgelem.height.baseVal.value;\n    let viewBox      = svgelem.viewBox.baseVal;\n    let scalex       = screenWidth/viewBox.width;\n    let scaley       = screenHeight/viewBox.height;\n    let scale        = Math.min(scalex, scaley);\n\n    // let translateX = (screenWidth/2  + ctm.e) - (viewBox.width/2  + viewBox.x) * scale;\n    // let translateY = (screenHeight/2 + ctm.f) - (viewBox.height/2 + viewBox.y) * scale;\n    let translateX = (screenWidth/2 ) - (viewBox.width/2  + viewBox.x) * scale;\n    let translateY = (screenHeight/2) - (viewBox.height/2 + viewBox.y) * scale;\n    return DOMMatrix.fromMatrix(ctm).translate(translateX, translateY).scale(scale);\n}\n\ntype LocatorEvent = TouchEvent | Touch | MouseEvent\ntype DnDEvent = TouchEvent | Touch | MouseEvent\n\n/**\n * Convert client position to SVG position\n * @param clientPos the client position\n * @param svgelem the svg element\n */\nexport function clientPos_to_svgPos(clientPos : {x : number, y : number}, svgelem : SVGSVGElement) : \n{x : number, y : number} {\n    // var CTM = this.control_svg.getScreenCTM() as DOMMatrix;\n    // NOTE: there's a well known bug in firefox about `getScreenCTM()`\n    // check if the browser is firefox\n    let CTM : DOMMatrix;\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n        CTM = firefox_calcCTM(svgelem);\n    } else {\n        CTM = svgelem.getScreenCTM() as DOMMatrix;\n    }\n    // console.log(CTM);\n    \n    return {\n        x : (clientPos.x - CTM.e) / CTM.a,\n        y : - (clientPos.y - CTM.f) / CTM.d\n    }\n}\n\nfunction getMousePosition(evt : LocatorEvent, svgelem : SVGSVGElement) : {x : number, y : number} {\n    // firefox doesn't support `TouchEvent`, we need to check for it\n    if (window.TouchEvent && evt instanceof TouchEvent) { evt = evt.touches[0]; }\n    let clientPos = {\n        x : (evt as Touch | MouseEvent).clientX,\n        y : (evt as Touch | MouseEvent).clientY\n    }\n    return clientPos_to_svgPos(clientPos, svgelem);\n}\n\n/**\n * Get the SVG coordinate from the event (MouseEvent or TouchEvent)\n * @param evt the event\n * @param svgelem the svg element\n * @returns the SVG coordinate\n */\nexport function get_SVGPos_from_event(evt : LocatorEvent, svgelem : SVGSVGElement) : {x : number, y : number} {\n    return getMousePosition(evt, svgelem);\n}\n\nclass LocatorHandler {\n\n    selectedElement  : SVGElement | null = null;\n    selectedVariable : string | null = null;\n    callbacks : {[key : string] : (pos : Vector2) => any} = {};\n    setter    : {[key : string] : (pos : Vector2) => any} = {};\n    // store blinking circle_outer so that we can turn it off\n    blinking_circle_outers : Element[] = [];\n    first_touch_callback : Function | null = null;\n\n    constructor(public control_svg : SVGSVGElement, public diagram_svg : SVGSVGElement){\n    }\n\n    startDrag(_ : LocatorEvent, variable_name : string, selectedElement : SVGElement) {\n        this.selectedElement  = selectedElement;\n        this.selectedVariable = variable_name;\n        this.handleBlinking();\n    }\n    drag(evt : LocatorEvent) {\n        if (this.selectedElement == undefined) return;\n        if (this.selectedVariable == undefined) return;\n\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\n\n        let coord = getMousePosition(evt, this.control_svg);\n\n        let pos = V2(coord.x, coord.y);\n        // check if setter for this.selectedVariable exists\n        // if it does, call it\n        if (this.setter[this.selectedVariable] != undefined) {\n            pos = this.setter[this.selectedVariable](pos);\n        }\n\n        // check if callback for this.selectedVariable exists\n        // if it does, call it\n        if (this.selectedVariable == null) return;\n        if (this.callbacks[this.selectedVariable] != undefined) {\n            this.callbacks[this.selectedVariable](pos);\n        }\n        this.setViewBox();\n\n    }\n    setViewBox() {\n        // set viewBox and preserveAspectRatio of control_svg to be the same as diagram_svg\n        this.control_svg.setAttribute(\"viewBox\", this.diagram_svg.getAttribute(\"viewBox\") as string);\n        this.control_svg.setAttribute(\"preserveAspectRatio\", this.diagram_svg.getAttribute(\"preserveAspectRatio\") as string);\n    }\n    endDrag(_ : LocatorEvent) {\n        this.selectedElement = null;\n        this.selectedVariable = null;\n    }\n\n    registerCallback(name : string, callback : (pos : Vector2) => any){\n        this.callbacks[name] = callback;\n    }\n    registerSetter(name : string, setter : (pos : Vector2) => any){\n        this.setter[name] = setter;\n    }\n    addBlinkingCircleOuter(circle_outer : Element){\n        this.blinking_circle_outers.push(circle_outer);\n    }\n    handleBlinking(){\n        // turn off all blinking_circle_outers after the first touch\n        if (this.blinking_circle_outers.length == 0) return;\n        for (let i = 0; i < this.blinking_circle_outers.length; i++) {\n            this.blinking_circle_outers[i].classList.remove(\"diagramatics-locator-blink\");\n        }\n        this.blinking_circle_outers = [];\n        if (this.first_touch_callback != null) this.first_touch_callback();\n    }\n\n    create_locator_diagram_svg(diagram : Diagram, blink : boolean) : SVGSVGElement {\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg, diagram.position(V2(0,0)), true, false, calculate_text_scale(this.diagram_svg));\n        svg.style.cursor = \"pointer\";\n        svg.setAttribute(\"overflow\", \"visible\");\n        if (blink) {\n            svg.classList.add(\"diagramatics-locator-blink\");\n            this.addBlinkingCircleOuter(svg);\n        }\n        return svg;\n    }\n\n    static create_locator_circle_pointer_svg(radius : number, value : Vector2, color : string, blink : boolean) : SVGSVGElement {\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        // set svg overflow to visible\n        svg.setAttribute(\"overflow\", \"visible\");\n        // set cursor to be pointer when hovering\n        svg.style.cursor = \"pointer\";\n\n        let circle_outer = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        let circle_inner = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n\n        let inner_radius    = radius * 0.4;\n\n        circle_outer.setAttribute(\"r\", radius.toString());\n        circle_outer.setAttribute(\"fill\", get_color(color, tab_color));\n        circle_outer.setAttribute(\"fill-opacity\", \"0.3137\");\n        circle_outer.setAttribute(\"stroke\", \"none\");\n        circle_outer.classList.add(\"diagramatics-locator-outer\");\n        if (blink) circle_outer.classList.add(\"diagramatics-locator-blink\");\n\n        circle_inner.setAttribute(\"r\", inner_radius.toString());\n        circle_inner.setAttribute(\"fill\", get_color(color, tab_color));\n        circle_inner.setAttribute(\"stroke\", \"none\");\n        circle_inner.classList.add(\"diagramatics-locator-inner\");\n\n        svg.appendChild(circle_outer);\n        svg.appendChild(circle_inner);\n        svg.setAttribute(\"x\", value.x.toString());\n        svg.setAttribute(\"y\", (-value.y).toString());\n        return svg;\n    }\n\n}\n\ntype DragAndDropContainerData = {\n    name : string,\n    position : Vector2,\n    svgelement? : SVGElement,\n    diagram : Diagram,\n    content : string[],\n    capacity : number,\n    config : dnd_container_positioning,\n}\ntype DragAndDropDraggableData = {\n    name : string,\n    position : Vector2,\n    svgelement? : SVGElement,\n    diagram : Diagram,\n    diagram_size : [number, number],\n    container : string,\n}\ntype DragAndDropData = {container:string, content:string[]}[]\n\nenum dnd_type {\n    container = \"diagramatics-dnd-container\",\n    draggable = \"diagramatics-dnd-draggable\",\n    ghost     = \"diagramatics-dnd-draggable-ghost\"\n}\n\n//TODO: add more\ntype dnd_container_positioning =\n    {type:\"horizontal-uniform\"} |\n    {type:\"vertical-uniform\"} |\n    {type:\"horizontal\", padding:number} |\n    {type:\"vertical\", padding:number} |\n    {type:\"flex-row\", padding:number, vertical_alignment?:VerticalAlignment, horizontal_alignment?:HorizontalAlignment} |\n    {type:\"grid\", value:[number, number]}\n\nclass DragAndDropHandler {\n    containers : {[key : string] : DragAndDropContainerData} = {};\n    draggables : {[key : string] : DragAndDropDraggableData} = {};\n    callbacks : {[key : string] : (pos : Vector2) => any} = {};\n    hoveredContainerName : string | null = null;\n    draggedElementName : string | null = null;\n    draggedElementGhost : SVGElement | null = null;\n    dropped_outside_callback : ((name : string) => any) | null = null;\n    sort_content : boolean = false;\n    dom_to_id_map : WeakMap<HTMLElement|SVGElement, string>;\n\n    constructor(public dnd_svg : SVGSVGElement, public diagram_svg : SVGSVGElement){\n        this.dom_to_id_map = new WeakMap();\n    }\n\n    public add_container(name : string, diagram : Diagram\n        , capacity? : number , position_config? : dnd_container_positioning\n    ) {\n        if (this.containers[name] != undefined) {\n            this.replace_container_svg(name, diagram, capacity, position_config);\n            return;\n        }\n\n        this.containers[name] = {\n            name, diagram, \n            position : diagram.origin, \n            content : [], \n            config : position_config ?? {type:\"horizontal-uniform\"},\n            capacity : capacity ?? 1\n        };\n    }\n\n    generate_position_map(diagram : Diagram, config : dnd_container_positioning, capacity : number, content : string[]) \n    : Vector2[] {\n        let bbox = diagram.bounding_box();\n        let p_center = diagram.origin;\n        switch (config.type){\n            case \"horizontal-uniform\": {\n                let width = bbox[1].x - bbox[0].x;\n                let dx = width / capacity;\n                let x0 = bbox[0].x + dx / 2;\n                let y  = p_center.y;\n                return range(0, capacity).map(i => V2(x0 + dx*i, y));\n            }\n            case \"vertical-uniform\": {\n                //NOTE: top to bottom\n                let height = bbox[1].y - bbox[0].y;\n                let dy = height / capacity;\n                let x  = p_center.x;\n                let y0 = bbox[1].y - dy / 2;\n                return range(0, capacity).map(i => V2(x, y0 - dy*i));\n            }\n            case \"grid\" : {\n                let [nx,ny] = config.value;\n                let height = bbox[1].y - bbox[0].y;\n                let width  = bbox[1].x - bbox[0].x;\n                let dx = width / nx;\n                let dy = height / ny;\n                let x0 = bbox[0].x + dx / 2;\n                let y0 = bbox[1].y - dy / 2;\n                return range(0, capacity).map(i => {\n                    let x = x0 + dx * (i % nx);\n                    let y = y0 - dy * Math.floor(i / nx);\n                    return V2(x, y);\n                });\n            }\n            case \"vertical\" : {\n                const sizelist = content.map((name) => this.draggables[name]?.diagram_size ?? [0,0]);\n                const size_rects = sizelist.map(([w,h]) => rectangle(w,h).mut());\n                const distributed = distribute_vertical_and_align(size_rects, config.padding).mut()\n                    .move_origin('top-center').position(diagram.get_anchor('top-center'))\n                    .translate(V2(0,-config.padding));\n                return distributed.children.map(d => d.origin);\n            }\n            case \"horizontal\" : {\n                const sizelist = content.map((name) => this.draggables[name]?.diagram_size ?? [0,0]);\n                const size_rects = sizelist.map(([w,h]) => rectangle(w,h).mut());\n                const distributed = distribute_horizontal_and_align(size_rects, config.padding).mut()\n                    .move_origin('center-left').position(diagram.get_anchor('center-left'))\n                    .translate(V2(config.padding,0));\n                return distributed.children.map(d => d.origin);\n            }\n            case \"flex-row\" : {\n                const pad = config.padding ?? 0;\n                const container_width = bbox[1].x - bbox[0].x - 2*pad;\n                const sizelist = content.map((name) => this.draggables[name]?.diagram_size ?? [0,0]);\n                const size_rects = sizelist.map(([w,h]) => rectangle(w,h).mut());\n                let distributed = distribute_variable_row(\n                    size_rects, container_width, pad, pad,\n                    config.vertical_alignment, config.horizontal_alignment\n                ).mut()\n                switch (config.horizontal_alignment){\n                    case 'center' :{\n                        distributed = distributed\n                            .move_origin('top-center').position(V2(p_center.x, bbox[1].y-pad));\n                    } break;\n                    case 'right' : {\n                        distributed = distributed\n                            .move_origin('top-right').position(V2(bbox[1].x-pad, bbox[1].y-pad));\n                    } break;\n                    case 'center':\n                    default: {\n                        distributed = distributed\n                            .move_origin('top-left').position(V2(bbox[0].x+pad, bbox[1].y-pad));\n                    }\n                }\n                return distributed.children.map(d => d.origin);\n            }\n            default : {\n                return [];\n            }\n        }\n    }\n    \n    get_container_content_size(container_name : string) : [number,number] {\n        const container = this.containers[container_name];\n        if (container == undefined) return [NaN, NaN];\n        const pad = (container.config as any).padding ?? 0;\n        const content_diagrams = container.content.map(name => this.draggables[name]?.diagram ?? empty());\n        const [width, height] = size(diagram_combine(...content_diagrams));\n        return [width + 2*pad, height + 2*pad];\n    }\n    \n    private replace_draggable_svg(name : string, diagram : Diagram) {\n        let draggable = this.draggables[name];\n        if (draggable == undefined) return;\n        draggable.svgelement?.remove();\n        draggable.diagram = diagram;\n        draggable.diagram_size = size(diagram);\n        this.add_draggable_svg(name, diagram);\n        this.reposition_container_content(draggable.container)\n    }\n    private replace_container_svg(name : string, diagram : Diagram, capacity? : number, config? : dnd_container_positioning) {\n        let container = this.containers[name];\n        if (container == undefined) return;\n        container.svgelement?.remove();\n        container.diagram = diagram;\n        if (capacity) container.capacity = capacity;\n        if (config) container.config = config;\n        this.add_container_svg(name, diagram);\n        this.reposition_container_content(name);\n    }\n\n    public add_draggable_to_container(name : string, diagram : Diagram, container_name : string) {\n        if (this.draggables[name] != undefined) {\n            this.replace_draggable_svg(name, diagram);\n            this.move_draggable_to_container(name, container_name);\n            return;\n        }\n\n        const diagram_size = size(diagram);\n        this.draggables[name] = {name, diagram : diagram.mut() , diagram_size, position : diagram.origin, container : container_name};\n        this.containers[container_name].content.push(name);\n    }\n\n    public add_draggable_with_container(name : string, diagram : Diagram, container_diagram? : Diagram) {\n        if (this.draggables[name] != undefined) {\n            this.replace_draggable_svg(name, diagram);\n            return;\n        }\n        // add a container as initial container for the draggable\n        let initial_container_name = `_container0_${name}`;\n\n        if (container_diagram == undefined)\n            container_diagram = this.diagram_container_from_draggable(diagram);\n        this.add_container(initial_container_name, container_diagram);\n\n        const diagram_size = size(diagram);\n        this.containers[initial_container_name].content.push(name);\n        this.draggables[name] = {name, diagram : diagram.mut() , diagram_size, position : diagram.origin, container : initial_container_name};\n    }\n    \n    public remove_draggable(name : string) : void {\n        for (let container_name in this.containers) {\n            const container = this.containers[container_name];\n            container.content = container.content.filter(e => e != name);\n        }\n        this.draggables[name].svgelement?.remove();\n        delete this.draggables[name];\n    }\n\n    registerCallback(name : string, callback : (pos : Vector2) => any){\n        this.callbacks[name] = callback;\n    }\n\n    register_dropped_outside_callback(callback : (name : string) => any){\n        this.dropped_outside_callback = callback;\n    }\n\n    setViewBox() {\n        // set viewBox and preserveAspectRatio of control_svg to be the same as diagram_svg\n        this.dnd_svg.setAttribute(\"viewBox\", this.diagram_svg.getAttribute(\"viewBox\") as string);\n        this.dnd_svg.setAttribute(\"preserveAspectRatio\", this.diagram_svg.getAttribute(\"preserveAspectRatio\") as string);\n    }\n    drawSvg(){\n        for (let name in this.containers){\n            if (this.containers[name].svgelement) continue;\n            this.add_container_svg(name, this.containers[name].diagram);\n        }\n        for (let name in this.draggables){\n            if (this.draggables[name].svgelement) continue;\n            this.add_draggable_svg(name, this.draggables[name].diagram);\n        }\n        for (let name in this.containers)\n            this.reposition_container_content(name);\n    }\n\n    getData() : DragAndDropData {\n        let data : DragAndDropData = []\n        for (let name in this.containers){\n            data.push({container : name, content : this.containers[name].content});\n        }\n        return data;\n    }\n\n    setData(data : DragAndDropData) {\n        try {\n            for (let containerdata of data) {\n                for (let content of containerdata.content) {\n                    this.try_move_draggable_to_container(content, containerdata.container);\n                }\n            }\n        } catch (_e) {\n            console.error(\"the data is not valid\");\n        }\n    }\n\n    diagram_container_from_draggable(diagram : Diagram) : Diagram {\n        let rect = rectangle_corner(...diagram.bounding_box()).move_origin(diagram.origin);\n        return rect.strokedasharray([5]);\n    }\n\n    add_container_svg(name : string, diagram: Diagram) {\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg, diagram.position(V2(0,0)), \n            false, false, calculate_text_scale(this.diagram_svg), dnd_type.container);\n        let position = diagram.origin;\n        svg.setAttribute(\"overflow\", \"visible\");\n        svg.setAttribute(\"x\", position.x.toString());\n        svg.setAttribute(\"y\", (-position.y).toString());\n        svg.setAttribute(\"class\", dnd_type.container);\n        this.dnd_svg.prepend(svg);\n\n        this.containers[name].svgelement = svg;\n        this.dom_to_id_map.set(svg, name);\n    }\n\n    add_draggable_svg(name : string, diagram : Diagram) {\n        let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg, diagram.position(V2(0,0)), true, false, calculate_text_scale(this.diagram_svg), dnd_type.draggable);\n        let position = diagram.origin;\n        svg.setAttribute(\"overflow\", \"visible\");\n        svg.setAttribute(\"x\", position.x.toString());\n        svg.setAttribute(\"y\", (-position.y).toString());\n        svg.setAttribute(\"class\", dnd_type.draggable);\n        svg.setAttribute(\"draggable\", \"true\");\n\n        svg.onmousedown = (evt) => {\n            this.draggedElementName = name;\n            this.startDrag(evt);\n        }\n        svg.ontouchstart = (evt) => {\n            this.draggedElementName = name;\n            this.startDrag(evt);\n        }\n\n        this.dnd_svg.append(svg);\n        this.draggables[name].svgelement = svg;\n        this.dom_to_id_map.set(svg, name);\n    }\n\n    reposition_container_content(container_name : string){\n        let container = this.containers[container_name];\n        if (container == undefined) return;\n        \n        if (this.sort_content) container.content.sort()\n        const position_map = this.generate_position_map(container.diagram, container.config, container.capacity, container.content);\n\n        for (let i = 0; i < container.content.length; i++) {\n            let draggable = this.draggables[container.content[i]];\n            let pos = position_map[i] ?? container.diagram.origin;\n            draggable.diagram = draggable.diagram.position(pos);\n            draggable.position = pos;\n            draggable.svgelement?.setAttribute(\"x\", pos.x.toString());\n            draggable.svgelement?.setAttribute(\"y\", (-pos.y).toString());\n        }\n    }\n    remove_draggable_from_container(draggable_name : string, container_name : string) {\n        this.containers[container_name].content = \n            this.containers[container_name].content.filter((name) => name != draggable_name);\n    }\n    move_draggable_to_container(draggable_name : string, container_name : string) {\n        let draggable = this.draggables[draggable_name];\n\n        // ignore if the draggable is already in the container\n        if (draggable.container == container_name) return;\n\n        let container = this.containers[container_name];\n        let original_container_name = draggable.container;\n\n        this.remove_draggable_from_container(draggable_name, original_container_name);\n        draggable.container = container_name;\n        container.content.push(draggable_name);\n\n        this.reposition_container_content(container_name);\n        this.reposition_container_content(original_container_name);\n\n        let draggedElement = this.draggables[draggable_name];\n        this.callbacks[draggedElement.name](draggedElement.position);\n    }\n\n    try_move_draggable_to_container(draggable_name : string, container_name : string) {\n        let draggable = this.draggables[draggable_name];\n        let container = this.containers[container_name];\n        if (container.content.length + 1 <= container.capacity) {\n            this.move_draggable_to_container(draggable_name, container_name);\n        } else if (container.capacity == 1){\n            // only swap if the container has only 1 capacity\n            // swap\n            let original_container_name = draggable.container;\n            let other_draggable_name = container.content[0];\n            this.move_draggable_to_container(other_draggable_name, original_container_name);\n            this.move_draggable_to_container(draggable_name, container_name);\n        }\n    }\n\n    startDrag(evt : DnDEvent) {\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\n        this.hoveredContainerName = null;\n\n        // reset container hovered class\n        this.reset_hovered_class();\n        // delete orphaned ghost\n        let ghosts = this.dnd_svg.getElementsByClassName(dnd_type.ghost);\n        for (let i = 0; i < ghosts.length; i++) ghosts[i].remove();\n        \n        // create a clone of the dragged element\n        if (this.draggedElementName == null) return;\n        let draggable = this.draggables[this.draggedElementName];\n        if (draggable.svgelement == undefined) return;\n        draggable.svgelement.classList.add(\"picked\");\n        this.draggedElementGhost = draggable.svgelement.cloneNode(true) as SVGElement;\n        // set pointer-events : none\n        this.draggedElementGhost.style.pointerEvents = \"none\";\n        this.draggedElementGhost.setAttribute(\"opacity\", \"0.5\");\n        this.draggedElementGhost.setAttribute(\"class\", dnd_type.ghost);\n        this.dnd_svg.append(this.draggedElementGhost);\n    }\n\n    get_dnd_element_data_from_evt(evt : DnDEvent) : {name : string, type : string} | null {\n        let element : HTMLElement | null = null;\n        if (window.TouchEvent && evt instanceof TouchEvent) { \n            let evt_touch = evt.touches[0];\n            element = document.elementFromPoint(evt_touch.clientX, evt_touch.clientY) as HTMLElement;\n        } else {\n            const evt_ = evt as MouseEvent\n            element = document.elementFromPoint(evt_.clientX, evt_.clientY) as HTMLElement;\n        }\n        if (element == null) return null;\n\n        if (element.localName == \"tspan\") element = element.parentElement;\n        if (element == null) return null;\n        \n        let dg_tag = element.getAttribute(\"_dg_tag\"); if (dg_tag == null) return null;\n\n        if (dg_tag == dnd_type.container) {\n            let parent = element.parentElement; if (parent == null) return null;\n            let name = this.dom_to_id_map.get(parent); if (name == null) return null;\n            return {name, type : dnd_type.container};\n        }\n        if (dg_tag == dnd_type.draggable) {\n            let parent = element.parentElement; if (parent == null) return null;\n            let name = this.dom_to_id_map.get(parent);  if (name == null) return null;\n            return {name, type : dnd_type.draggable};\n        }\n        return null;\n    }\n\n    drag(evt : DnDEvent) {\n        if (this.draggedElementName == null) return;\n        if (this.draggedElementGhost == null) return;\n        if (evt instanceof MouseEvent) { evt.preventDefault(); }\n        if (window.TouchEvent && evt instanceof TouchEvent) { evt.preventDefault(); }\n\n        this.reset_hovered_class();\n        let element_data = this.get_dnd_element_data_from_evt(evt);\n        if (element_data == null) {\n            this.hoveredContainerName = null;\n        } else if (element_data.type == dnd_type.container) {\n            this.hoveredContainerName = element_data.name;\n            this.containers[element_data.name].svgelement?.classList.add(\"hovered\");\n        } else if (element_data.type == dnd_type.draggable) {\n            this.hoveredContainerName = this.draggables[element_data.name]?.container;\n            this.draggables[element_data.name].svgelement?.classList.add(\"hovered\");\n            // this.containers[this.hoveredContainerName]?.svgelement?.classList.add(\"hovered\");\n        }\n\n        let coord = getMousePosition(evt, this.dnd_svg);\n        this.draggedElementGhost.setAttribute(\"x\", coord.x.toString());\n        this.draggedElementGhost.setAttribute(\"y\", (-coord.y).toString());\n    }\n\n    endDrag(_evt : DnDEvent) {\n        if (this.hoveredContainerName != null && this.draggedElementName != null){\n            this.try_move_draggable_to_container(this.draggedElementName, this.hoveredContainerName);\n        }\n\n        // if dropped outside of any container\n        if (this.hoveredContainerName == null && this.draggedElementName != null \n            && this.dropped_outside_callback != null){\n            this.dropped_outside_callback(this.draggedElementName);\n        }\n\n        this.draggedElementName = null;\n        this.hoveredContainerName = null;\n        this.reset_hovered_class();\n        this.reset_picked_class();\n\n        if (this.draggedElementGhost != null){\n            this.draggedElementGhost.remove();\n            this.draggedElementGhost = null;\n        }\n    }\n\n    reset_hovered_class(){\n        for (let name in this.containers) {\n            this.containers[name].svgelement?.classList.remove(\"hovered\");\n        }\n        for (let name in this.draggables) {\n            this.draggables[name].svgelement?.classList.remove(\"hovered\");\n        }\n    }\n\n    reset_picked_class(){\n        for (let name in this.draggables) {\n            this.draggables[name].svgelement?.classList.remove(\"picked\");\n        }\n    }\n}\n\nclass ButtonHandler {\n    // callbacks : {[key : string] : (state : boolean) => any} = {};\n    states : {[key : string] : boolean} = {};\n    svg_element : {[key : string] : [SVGSVGElement,SVGSVGElement]} = {};\n    touchdownName : string | null = null;\n\n    constructor(public button_svg : SVGSVGElement, public diagram_svg : SVGSVGElement){\n    }\n\n    /** add a new toggle button if it doesn't exist, otherwise, update diagrams and callback */\n    try_add_toggle(name : string, diagram_on : Diagram, diagram_off : Diagram, state : boolean, callback : (state : boolean, redraw? : boolean) => any) : setter_function_t {\n        if (this.svg_element[name] != undefined) {\n            // delete the old button\n            let [old_svg_on, old_svg_off] = this.svg_element[name];\n            old_svg_on.remove();\n            old_svg_off.remove();\n        }\n        return this.add_toggle(name, diagram_on, diagram_off, state, callback);\n    }\n\n    add_toggle(name : string, diagram_on : Diagram, diagram_off : Diagram, state : boolean, callback : (state : boolean, redraw? : boolean) => any) : setter_function_t {\n        let svg_off = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg_off, diagram_off, true, false, calculate_text_scale(this.diagram_svg));\n        svg_off.setAttribute(\"overflow\", \"visible\");\n        svg_off.style.cursor = \"pointer\";\n\n        let svg_on = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg_on, diagram_on, true, false, calculate_text_scale(this.diagram_svg));\n        svg_on.setAttribute(\"overflow\", \"visible\");\n        svg_on.style.cursor = \"pointer\";\n\n        this.button_svg.appendChild(svg_off);\n        this.button_svg.appendChild(svg_on);\n        this.svg_element[name] = [svg_on, svg_off];\n\n        this.states[name] = state;\n\n        const set_display = (state : boolean) => {\n            svg_on.setAttribute(\"display\", state ? \"block\" : \"none\");\n            svg_off.setAttribute(\"display\", state ? \"none\" : \"block\");\n        }\n        set_display(this.states[name]);\n\n        const update_state = (state : boolean, redraw : boolean = true) => {\n            this.states[name] = state;\n            callback(this.states[name], redraw);\n            set_display(this.states[name]);\n        }\n\n        svg_on.onclick = (e) => { \n            e.preventDefault();\n            update_state(false); \n        };\n        svg_off.onclick = (e) => { \n            e.preventDefault();\n            update_state(true); \n        };\n        svg_on.ontouchstart = (e) => { \n            e.preventDefault();\n            this.touchdownName = name; \n        };\n        svg_off.ontouchstart = (e) => { \n            e.preventDefault();\n            this.touchdownName = name; \n        };\n\n        svg_on.ontouchend = () => { \n            if (this.touchdownName == name) update_state(false); \n            this.touchdownName = null;\n        };\n        svg_off.ontouchend = () => { \n            if (this.touchdownName == name) update_state(true); \n            this.touchdownName = null;\n        };\n\n        const setter = (state : boolean) => { update_state(state, false); }\n        return setter;\n    }\n\n    /** add a new click button if it doesn't exist, otherwise, update diagrams and callback */\n    try_add_click(name : string, diagram : Diagram, diagram_pressed : Diagram, callback : () => any){\n        if (this.svg_element[name] != undefined) {\n            // delete the old button\n            let [old_svg_normal, old_svg_pressed] = this.svg_element[name];\n            old_svg_normal.remove();\n            old_svg_pressed.remove();\n        }\n        this.add_click(name, diagram, diagram_pressed, callback);\n    }\n\n    // TODO: handle touch input moving out of the button\n    add_click(name : string, diagram : Diagram, diagram_pressed : Diagram, callback : () => any){\n        let svg_normal = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg_normal, diagram, true, false, calculate_text_scale(this.diagram_svg));\n        svg_normal.setAttribute(\"overflow\", \"visible\");\n        svg_normal.style.cursor = \"pointer\";\n\n        let svg_pressed = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        f_draw_to_svg(svg_pressed, diagram_pressed, true, false, calculate_text_scale(this.diagram_svg));\n        svg_pressed.setAttribute(\"overflow\", \"visible\");\n        svg_pressed.style.cursor = \"pointer\";\n\n        this.button_svg.appendChild(svg_normal);\n        this.button_svg.appendChild(svg_pressed);\n        this.svg_element[name] = [svg_normal, svg_pressed];\n\n        const set_display = (pressed : boolean) => {\n            svg_pressed.setAttribute(\"display\", pressed ? \"block\" : \"none\");\n            svg_normal.setAttribute(\"display\", pressed ? \"none\" : \"block\");\n        }\n        set_display(false);\n\n        svg_normal.onmousedown = (e) => {\n            e.preventDefault();\n            this.touchdownName = name;\n            set_display(true);\n        }\n        svg_normal.onmouseup = (e) => {\n            e.preventDefault();\n            this.touchdownName = null;\n        }\n        svg_pressed.onmouseleave = (_e) => { set_display(false); }\n        svg_pressed.onmousedown = (e) => {\n            e.preventDefault();\n            this.touchdownName = name;\n        }\n        svg_pressed.onmouseup = (_e) => {\n            if (this.touchdownName == name) callback();\n            this.touchdownName = null;\n            set_display(false);\n        }\n\n        svg_normal.ontouchstart = (e) => { \n            e.preventDefault();\n            this.touchdownName = name; \n            set_display(true);\n        };\n        svg_normal.ontouchend = (_e) => {\n            if (this.touchdownName == name) callback();\n            this.touchdownName = null;\n            set_display(false);\n        }\n        svg_pressed.ontouchstart = (e) => { \n            e.preventDefault();\n            this.touchdownName = name; \n            set_display(true);\n        };\n        svg_pressed.ontouchend = (_e) => {\n            if (this.touchdownName == name) callback();\n            this.touchdownName = null;\n            set_display(false);\n        }\n            \n            \n    }\n        \n}\n","import { Path, Diagram, DiagramType, diagram_combine, } from './diagram.js';\nimport { Vector2, V2, Vdir} from './vector.js';\nimport { linspace, linspace_exc, range } from './utils.js';\nimport { array_repeat } from './utils.js'\nimport { arrow1 } from './shapes.js';\nimport { TAG } from './tag_names.js';\n\ntype modifierFunction = (d : Diagram) => Diagram\n\n/**\n * convert a function that modifies a path of a diagram to a function that modifies a diagram\n * if the diagram is a polygon or curve, the function is applied directly to the diagram\n * if the diagram is a diagram, the function is recursively applied to all children\n * if the diagram is empty or text, the function is not applied\n * @param func function that modifies a path of a diagram\n*/\nfunction function_handle_path_type(func : modifierFunction) : modifierFunction {\n    function modified_func(d : Diagram) : Diagram {\n        if (d.type == DiagramType.Polygon || d.type == DiagramType.Curve ) {\n            // apply directly\n            return func(d);\n        } else if (d.type == DiagramType.Diagram) {\n            // recursively apply to all children\n            d.children = d.children.map(c => modified_func(c));\n            return d;\n        } else if (d.type == DiagramType.Text || d.type == DiagramType.MultilineText) {\n            // do nothing\n            return d;\n        } else {\n            throw new Error(\"Unreachable, unknown diagram type : \" + d.type);\n        }\n    }\n    return modified_func;\n}\n\n\n/**\n * Resample a diagram so that it has `n` points\n * @param n number of points\n * @returns function that modifies a diagram\n */\nexport function resample(n : number) : modifierFunction{\n    // TODO : this function uses Diagram.parametric_point,\n    // which might be slow for large n\n    // for performance reason, we might want to implement it directly by calculating\n    // the points of the path here\n    function func(d : Diagram) : Diagram {\n        if (d.path == undefined) return d;\n        let ts = (d.type == DiagramType.Curve) ? linspace(0, 1, n) : linspace_exc(0, 1, n);\n        let new_points = ts.map(t => d.parametric_point(t));\n        d.path = new Path(new_points);\n        return d;\n    }\n    return function_handle_path_type(func);\n}\n\n/**\n * Subdivide each segment of a diagram into n segments\n * @param n number of segments to subdivide each segment into\n * @returns function that modifies a diagram\n */\nexport function subdivide(n : number = 100) : modifierFunction {\n    function func(d : Diagram) : Diagram {\n        if (d.path == undefined) return d;\n\n        let new_points : Vector2[] = [];\n        for (let i = 0; i < d.path.points.length; i++){\n            let curr_i = i;\n            let next_i = (curr_i + 1) % d.path.points.length;\n            let curr_p = d.path.points[i];\n            let next_p = d.path.points[next_i];\n\n            let xs = linspace(curr_p.x, next_p.x, n+1);\n            let ys = linspace(curr_p.y, next_p.y, n+1);\n            let subdivide_points = xs.map((x,i) => V2(x, ys[i]));\n            // ignore the last point\n            subdivide_points.pop();\n            new_points = new_points.concat(subdivide_points);\n        }\n\n        d.path = new Path(new_points);\n        return d;\n    }\n    return function_handle_path_type(func);\n}\n\n/**\n * Get a slice of a diagram from `t_start` to `t_end`\n * @param t_start starting point of the slice\n * @param t_end ending point of the slice\n * @param n number of points in the slice\n * @returns function that modifies a diagram\n */\nexport function slicepath(t_start : number, t_end : number, n : number = 100) : modifierFunction {\n    if (t_start > t_end) [t_start, t_end] = [t_end, t_start];\n    if (t_start < 0) t_start = 0;\n    if (t_end > 1) t_end = 1;\n\n    let n_total = Math.floor(n / (t_end - t_start));\n    function func(d : Diagram) : Diagram {\n        if (d.path == undefined) return d;\n        let dnew = d.apply(resample(n_total));\n        if (dnew.path == undefined) return d;\n        // take slice of the path\n        let new_points = dnew.path.points.slice(\n            Math.floor(t_start * n_total),\n            Math.floor(t_end * n_total) + 1\n        );\n        dnew.path = new Path(new_points);\n        return dnew;\n    }\n    return function_handle_path_type(func);\n}\n\n\nfunction get_round_corner_arc_points(radius : number, points : [Vector2,Vector2,Vector2], count : number) : Vector2[] {\n    let [p1, p2, p3] = points;\n\n    let v1 = p1.sub(p2).normalize();\n    let v3 = p3.sub(p2).normalize();\n    let corner_angle = Math.abs((v1.angle() - v3.angle()) % Math.PI);\n    let s_dist  = radius/Math.tan(corner_angle/2);\n\n    // s_dist can only be as long as half the distance to the closest point\n    let d1 = p1.sub(p2).length();\n    let d3 = p3.sub(p2).length();\n    // recalculate\n    s_dist = Math.min(s_dist, d1/2, d3/2);\n    radius = s_dist * Math.tan(corner_angle/2);\n\n    let pa = p2.add(v1.scale(s_dist));\n    let pb = p2.add(v3.scale(s_dist));\n    let distc = Math.sqrt(radius*radius + s_dist*s_dist);\n    let pc = p2.add(\n        v1.add(v3).normalize().scale(distc)\n    );\n\n    let angle_a = pa.sub(pc).angle();\n    let angle_b = pb.sub(pc).angle();\n    // if we just use angle_a and angle_b as is, the arc might be drawn in the wrong direction\n    // find out which direction is the correct one\n    // check whether angle_a is closer to angle_b, angle_b + 2π, or angle_b - 2π\n    let angle_b_plus  = angle_b + 2*Math.PI;\n    let angle_b_minus = angle_b - 2*Math.PI;\n    let angle_a_b       = Math.abs(angle_a - angle_b);\n    let angle_a_b_plus  = Math.abs(angle_a - angle_b_plus);\n    let angle_a_b_minus = Math.abs(angle_a - angle_b_minus);\n    if (angle_a_b_plus < angle_a_b)  angle_b = angle_b_plus;\n    if (angle_a_b_minus < angle_a_b) angle_b = angle_b_minus;\n\n    let arc_points = linspace(angle_a, angle_b, count).map(a => pc.add(Vdir(a).scale(radius)));\n    return arc_points;\n}\n\n/**\n * Create a function that modifies a diagram by rounding the corners of a polygon or curve\n * @param radius radius of the corner\n * @param point_indices indices of the points to be rounded\n * @returns function that modifies a diagram\n *\n * @example\n * ```javascript\n * let s = square(5).apply(mod.round_corner(2, [0,2]))\n * ```\n */\nexport function round_corner(radius : number | number[] =  1, point_indices? : number[], count : number = 40) : modifierFunction {\n    // if radius is a number, create an array of length one\n    if (typeof radius == \"number\") radius = [radius];\n\n    // create a function that modify the path of a diagram, (only works for polygon and curve)\n    // later we will convert it to a function that modifies any diagram using function_handle_path_type\n    function func(d : Diagram) : Diagram {\n        if (d.path == undefined) return d;\n        let diagram_point_indices = range(0, d.path.points.length);\n        if (point_indices == undefined) point_indices = diagram_point_indices;\n\n        // filter only the points that are in diagram_point_indices\n        point_indices = point_indices.filter(i => diagram_point_indices.includes(i));\n        // repeat the radius array to match the number of points\n        radius = array_repeat(radius as number[], point_indices.length);\n\n        let new_points : Vector2[] = [];\n        for (let i = 0; i < d.path.points.length; i++){\n            let curr_i = i;\n            if (!point_indices.includes(curr_i)) {\n                new_points.push(d.path.points[i]);\n                continue;\n            }\n            let prev_i = (curr_i - 1 + d.path.points.length) % d.path.points.length;\n            let next_i = (curr_i + 1) % d.path.points.length;\n            let prev_p = d.path.points[prev_i];\n            let curr_p = d.path.points[i];\n            let next_p = d.path.points[next_i];\n            let arc_points = get_round_corner_arc_points(\n                radius[point_indices.indexOf(curr_i)], [prev_p, curr_p, next_p], count);\n            new_points = new_points.concat(arc_points);\n        }\n\n        d.path = new Path(new_points);\n        return d;\n    }\n    return function_handle_path_type(func);\n}\n\n\n/**\n * Add an arrow to the end of a curve\n * Make sure the diagram this modifier is applied to is a curve\n * @param headsize size of the arrow head\n * @param flip flip the arrow position\n */\nexport function add_arrow(headsize : number, flip = false) : modifierFunction {\n    function func(c : Diagram) : Diagram {\n        if (c.path == undefined) return c;\n        let p1 = flip ? c.path.points[0] : c.path.points[c.path.points.length - 1];\n        let p0 = flip ? c.path.points[1] : c.path.points[c.path.points.length - 2];\n        let arrow = arrow1(p0, p1, headsize);\n        return diagram_combine(c, arrow).clone_style_from(c);\n    }\n    return function_handle_path_type(func);\n}\n\nfunction arrowhead_angle(d : Diagram) : number {\n    if (!d.contain_tag(TAG.ARROW_HEAD)) return NaN;\n    let points = d.path?.points\n    if (points == undefined) return NaN;\n    if (points.length != 3) return NaN;\n    let v_tip   = points[0];\n    let v_base1 = points[1];\n    let v_base2 = points[2];\n    let v_base  = v_base1.add(v_base2).scale(0.5)\n    let v_dir   = v_tip.sub(v_base);\n    return v_dir.angle();\n}\n\n/**\n* Replace arrowhead inside a diagram with another diagram\n* @param new_arrowhead diagram to replace the arrowhead with\n* The arrow will be rotated automatically,\n* The default direction is to the right (+x) with the tip at the origin\n*/\nexport function arrowhead_replace(new_arrowhead : Diagram) : modifierFunction {\n    return function func(d : Diagram) : Diagram {\n        return d.apply_to_tagged_recursive(TAG.ARROW_HEAD, (arrowhead : Diagram) => {\n            let angle = arrowhead_angle(arrowhead);\n            return new_arrowhead.copy().rotate(angle).position(arrowhead.origin);\n        })\n    }\n}\n","import { Diagram, line, curve, diagram_combine } from '../diagram.js';\nimport { Vector2, V2 } from '../vector.js';\nimport { linspace, range_inc } from '../utils.js';\nimport { arrow1, arrow2, textvar } from '../shapes.js'\nimport { TAG } from '../tag_names.js';\n\n/**\n * Options for axes\n * Since axes, plot, etc. are separate objects.\n * Axes options is used so that it's easier to have consistent\n * setting for multiple objects.\n */\nexport type axes_options = {\n    xrange    : [number, number],\n    yrange    : [number, number],\n    bbox?     : [Vector2, Vector2],\n    xticks?   : number[],\n    yticks?   : number[],\n    n_sample? : number,\n    ticksize  : number,\n    headsize  : number,\n    tick_label_offset? : number,\n}\n\nexport let default_axes_options : axes_options = {\n    // bbox   : [V2(-100,-100), V2(100,100)],\n    bbox     : undefined,\n    xrange   : [-2, 2],\n    yrange   : [-2, 2],\n    xticks   : undefined,\n    yticks   : undefined,\n    n_sample : 100,\n    ticksize : 0.1,\n    headsize : 0.05,\n    tick_label_offset : 0,\n}\n\nexport function axes_transform(axes_options? : Partial<axes_options>) : (v : Vector2) => Vector2 {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.bbox == undefined) {\n        // get values from xrange and yrange\n        let [xmin, xmax] = opt.xrange;\n        let [ymin, ymax] = opt.yrange;\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\n    }\n\n    let [lowerleft, upperright] = opt.bbox;\n    let [xmin, xmax] = opt.xrange;\n    let [ymin, ymax] = opt.yrange;\n\n    return function(v : Vector2) : Vector2 {\n        let x = lowerleft.x + (v.x-xmin)/(xmax-xmin)*(upperright.x-lowerleft.x);\n        let y = lowerleft.y + (v.y-ymin)/(ymax-ymin)*(upperright.y-lowerleft.y);\n        return V2(x,y);\n    }\n}\nexport let ax = axes_transform\n\n\n/**\n * Draw xy axes without ticks\n * @param axes_options options for the axes\n * example: opt = {\n *    bbox   : [V2(-100,-100), V2(100,100)],\n * }\n * @returns a Diagram object\n */\nexport function axes_empty(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.bbox == undefined) {\n        // get values from xrange and yrange\n        let [xmin, xmax] = opt.xrange;\n        let [ymin, ymax] = opt.yrange;\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\n    }\n\n    let [lowerleft, upperright] = opt.bbox;\n    // get the intersection point\n    let xorigin = lowerleft.x + (upperright.x-lowerleft.x)/(opt.xrange[1]-opt.xrange[0])*(0-opt.xrange[0]);\n    let yorigin = lowerleft.y + (upperright.y-lowerleft.y)/(opt.yrange[1]-opt.yrange[0])*(0-opt.yrange[0]);\n\n    let xaxis = arrow2(V2(lowerleft.x,yorigin), V2(upperright.x,yorigin), opt.headsize).append_tags(TAG.GRAPH_AXIS);\n    let yaxis = arrow2(V2(xorigin,lowerleft.y), V2(xorigin,upperright.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\n    return diagram_combine(xaxis, yaxis).stroke('gray').fill('gray');\n    // return xaxis;\n}\n\n/**\n * Draw xy corner axes without ticks\n * @param axes_options options for the axes\n * example: opt = {\n *    bbox   : [V2(-100,-100), V2(100,100)],\n * }\n * @returns a Diagram object\n */\nexport function axes_corner_empty(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.bbox == undefined) {\n        // get values from xrange and yrange\n        let [xmin, xmax] = opt.xrange;\n        let [ymin, ymax] = opt.yrange;\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\n    }\n\n    let [lowerleft, upperright] = opt.bbox;\n    // get the intersection point\n\n    let xaxis = arrow1(lowerleft, V2(upperright.x,lowerleft.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\n    let yaxis = arrow1(lowerleft, V2(lowerleft.x,upperright.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\n    return diagram_combine(xaxis, yaxis).stroke('gray').fill('gray');\n    // return xaxis;\n}\n\n/**\n * Draw xy corner axes without ticks and with break mark in x axis\n * @param axes_options options for the axes\n */\nexport function axes_corner_empty_xbreak(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.bbox == undefined) {\n        // get values from xrange and yrange\n        let [xmin, xmax] = opt.xrange;\n        let [ymin, ymax] = opt.yrange;\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\n    }\n\n    let [lowerleft, upperright] = opt.bbox;\n    // get the intersection point\n\n    let xbreak_ysize_ = opt.ticksize * 2;\n\n    if (opt.xticks == undefined) {\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], false);\n        opt.xticks = opt.xticks.filter(x => x > opt.xrange[0] && x < opt.xrange[1]);\n    }\n    let xbreak_xsize = (opt.xticks![1] - opt.xticks![0])/2;\n    let xbreak_xpos  = opt.xticks![0] - xbreak_xsize;\n    let trans_f = axes_transform(opt);\n\n    // suffix _ means in the transformed coordinate\n    let xbreak_pleft_  = trans_f(V2(xbreak_xpos - xbreak_xsize/2,0));\n    let xbreak_pright_ = trans_f(V2(xbreak_xpos + xbreak_xsize/2,0));\n    let xbreak_xsize_  = xbreak_pright_.x - xbreak_pleft_.x;\n    let xbreak_pbottom_= xbreak_pleft_.add(V2(xbreak_xsize_*1/3, -xbreak_ysize_/2));\n    let xbreak_ptop_   = xbreak_pleft_.add(V2(xbreak_xsize_*2/3, xbreak_ysize_/2));\n    let xbreak_curve   = curve([xbreak_pleft_, xbreak_pbottom_, xbreak_ptop_, xbreak_pright_]);\n\n    let xaxis_left = line(lowerleft, xbreak_pleft_);\n    let xaxis_right = arrow1(xbreak_pright_, V2(upperright.x,lowerleft.y), opt.headsize);\n    let xaxis = diagram_combine(xaxis_left, xbreak_curve, xaxis_right).append_tags(TAG.GRAPH_AXIS);\n    let yaxis = arrow1(lowerleft, V2(lowerleft.x,upperright.y), opt.headsize).append_tags(TAG.GRAPH_AXIS);\n    return diagram_combine(xaxis, yaxis).stroke('gray').fill('gray');\n}\n\n/**\n * Create a single tick mark in the x axis\n * @param x x coordinate of the tick mark\n * @param y y coordinate of the tick mark\n * @param height height of the tick mark\n */\nexport function xtickmark_empty(x : number, y : number, axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    let height = opt.ticksize;\n    let pos = axes_transform(opt)(V2(x,y));\n    return line(V2(pos.x,pos.y+height/2), V2(pos.x,pos.y-height/2))\n        .stroke('gray').append_tags(TAG.GRAPH_TICK);\n}\n\nexport function xtickmark(x : number, y : number, str : string, axes_options? : Partial<axes_options>) : Diagram {\n    let tick = xtickmark_empty(x, y, axes_options);\n    let label = textvar(str).move_origin_text(\"top-center\").translate(tick.get_anchor(\"bottom-center\"))\n                .translate(V2(0, -(axes_options?.tick_label_offset || 0)))\n                .textfill('gray').append_tags(TAG.GRAPH_TICK_LABEL);\n    return diagram_combine(tick, label);\n}\n\n/**\n * Create a single tick mark in the y axis\n * @param y y coordinate of the tick mark\n * @param x x coordinate of the tick mark\n * @param height height of the tick mark\n */\nexport function ytickmark_empty(y : number, x : number, axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    let height = opt.ticksize;\n    let pos = axes_transform(opt)(V2(x,y));\n    return line(V2(pos.x+height/2,pos.y), V2(pos.x-height/2,pos.y))\n        .stroke('gray').append_tags(TAG.GRAPH_TICK);\n}\nexport function ytickmark(y : number, x : number, str : string, axes_options? : Partial<axes_options>) : Diagram {\n    let tick = ytickmark_empty(y, x, axes_options);\n    let label = textvar(str).move_origin_text(\"center-right\").translate(tick.get_anchor(\"center-left\"))\n                .translate(V2(-(axes_options?.tick_label_offset || 0), 0))\n                .textfill('gray').append_tags(TAG.GRAPH_TICK_LABEL);\n    return diagram_combine(tick, label);\n}\n\n// ======= BEGIN utility to calculate ticks\n\nfunction get_tick_interval(min : number, max : number) : number {\n    let range = max-min;\n    let range_order = Math.floor(Math.log10(range));\n    let interval_to_try = [0.1, 0.15, 0.2, 0.5, 1.0].map(x => x*Math.pow(10,range_order));\n    let tick_counts = interval_to_try.map(x => Math.floor(range/x));\n    // choose the interval so that the number of ticks is between the biggest one but less than 10\n    for (let i = 0; i < tick_counts.length; i++) {\n        if (tick_counts[i] <= 10) {\n            return interval_to_try[i];\n        }\n    }\n    return interval_to_try.slice(-1)[0];\n}\n\nfunction get_tick_numbers_range(min : number, max : number) : number[] {\n    let interval = get_tick_interval(min, max);\n    // round min and max to the nearest interval\n    let new_min = Math.round(min/interval)*interval;\n    let new_max = Math.round(max/interval)*interval;\n    let new_count = Math.round((new_max-new_min)/interval);\n    let l = range_inc(0, new_count).map(x => new_min + x*interval);\n    // round l to the nearest interval\n    let interval_prec = -Math.floor(Math.log10(interval)-1);\n    if (interval_prec >= 0) l = l.map(x => parseFloat(x.toFixed(interval_prec)));\n    return l;\n}\nfunction get_tick_numbers_aroundzero(neg : number, pos : number, nozero : boolean = true) : number[] {\n    if (neg > 0) throw new Error('neg must be negative');\n    if (pos < 0) throw new Error('pos must be positive');\n    let magnitude = Math.max(-neg, pos);\n    let interval = get_tick_interval(-magnitude, magnitude);\n\n    // round min and max to the nearest interval\n    let new_min = Math.ceil(neg/interval)*interval;\n    let new_max = Math.floor(pos/interval)*interval;\n    let new_count = Math.floor((new_max-new_min)/interval);\n\n    let l = linspace(new_min, new_max, new_count+1);\n    // round l to the nearest interval\n    let interval_prec = -Math.floor(Math.log10(interval));\n    if (interval_prec >= 0) l = l.map(x => parseFloat(x.toFixed(interval_prec)));\n\n    if (nozero){\n        return l.filter(x => x != 0);\n    }else{\n        return l;\n    }\n}\nexport function get_tick_numbers(min : number, max : number, exclude_zero : boolean = true) : number[] {\n    if (exclude_zero && min < 0 && max > 0) {\n        return get_tick_numbers_aroundzero(min, max);\n    } else {\n        return get_tick_numbers_range(min, max);\n    }\n}\n\n// ======= END utility to calculate ticks\n\nexport function xticks(axes_options : Partial<axes_options>, y : number = 0, empty = false) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.xticks == undefined) {\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], y == 0);\n    }\n\n    // remove ticks outside of the range\n    // opt.xticks = opt.xticks.filter(x => x >= opt.xrange[0] && x <= opt.xrange[1]);\n    opt.xticks = opt.xticks.filter(x => x > opt.xrange[0] && x < opt.xrange[1]);\n\n    let xticks_diagrams = empty ? \n        opt.xticks.map(x => xtickmark_empty(x, y, opt)) :\n        opt.xticks.map(x => xtickmark(x, y, x.toString(), opt));\n    return diagram_combine(...xticks_diagrams);\n}\nexport function yticks(axes_options : Partial<axes_options>, x : number = 0, empty = false) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.yticks == undefined) {\n        opt.yticks = get_tick_numbers(opt.yrange[0], opt.yrange[1], x == 0);\n    }\n\n    // remove ticks outside of the range\n    // opt.yticks = opt.yticks.filter(y => y >= opt.yrange[0] && y <= opt.yrange[1]);\n    opt.yticks = opt.yticks.filter(y => y > opt.yrange[0] && y < opt.yrange[1]);\n\n    let yticks_diagrams = empty ? \n        opt.yticks.map(y => ytickmark_empty(y, x, opt)) :\n        opt.yticks.map(y => ytickmark(y, x, y.toString(), opt));\n    return diagram_combine(...yticks_diagrams);\n}\n\n\n/**\n * Draw xy corner axes with ticks\n * @param axes_options options for the axes\n */\nexport function xycorneraxes(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    let xmin = opt.xrange[0];\n    let ymin = opt.yrange[0];\n    return diagram_combine(axes_corner_empty(opt), xticks(opt, ymin), yticks(opt, xmin));\n}\n\n/**\n * Draw xy corner axes with ticks and break mark in x axis\n * @param axes_options options for the axes\n */\nexport function xycorneraxes_xbreak(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    let xmin = opt.xrange[0];\n    let ymin = opt.yrange[0];\n    return diagram_combine(axes_corner_empty_xbreak(opt), xticks(opt, ymin), yticks(opt, xmin));\n}\n\n\n/**\n * Draw xy axes with ticks\n * @param axes_options options for the axes\n */\nexport function xyaxes(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    return diagram_combine(axes_empty(opt), xticks(opt), yticks(opt));\n}\n\n/**\n * Draw x axis with ticks\n * @param axes_options options for the axis\n */\nexport function xaxis(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.bbox == undefined) {\n        // get values from xrange and yrange\n        let [xmin, xmax] = opt.xrange;\n        let [ymin, ymax] = opt.yrange;\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\n    }\n\n    let ax_origin = axes_transform(opt)(V2(0,0));\n    let xaxis = arrow2(V2(opt.bbox[0].x, ax_origin.y), V2(opt.bbox[1].x, ax_origin.y), opt.headsize)\n        .append_tags(TAG.GRAPH_AXIS);\n    let xtickmarks = xticks(opt, 0);\n    return diagram_combine(xaxis, xtickmarks);\n}\n\n/**\n * Draw y axis with ticks\n * @param axes_options options for the axis\n */\nexport function yaxis(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.bbox == undefined) {\n        // get values from xrange and yrange\n        let [xmin, xmax] = opt.xrange;\n        let [ymin, ymax] = opt.yrange;\n        opt.bbox = [V2(xmin,ymin), V2(xmax,ymax)];\n    }\n\n    let ax_origin = axes_transform(opt)(V2(0,0));\n    let yaxis = arrow2(V2(ax_origin.x, opt.bbox[0].y), V2(ax_origin.x, opt.bbox[1].y), opt.headsize)\n        .append_tags(TAG.GRAPH_AXIS);\n    let ytickmarks = yticks(opt, 0);\n    return diagram_combine(yaxis, ytickmarks);\n}\n\nexport function ygrid(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.xticks == undefined) {\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], false);\n    }\n\n    let ygrid_diagrams = opt.xticks.map(x => \n        line(V2(x,opt.yrange[0]), V2(x,opt.yrange[1])).transform(axes_transform(opt)).stroke('gray')\n    );\n    return diagram_combine(...ygrid_diagrams).append_tags(TAG.GRAPH_GRID);\n}\n\nexport function xgrid(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.yticks == undefined) {\n        opt.yticks = get_tick_numbers(opt.yrange[0], opt.yrange[1], false);\n    }\n\n    let xgrid_diagrams = opt.yticks.map(y =>\n        line(V2(opt.xrange[0],y), V2(opt.xrange[1],y)).transform(axes_transform(opt)).stroke('gray')\n    );\n    return diagram_combine(...xgrid_diagrams).append_tags(TAG.GRAPH_GRID);\n}\n\n//  TODO: add xticks and ytiks as argument\nexport function xygrid(axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    if (opt.xticks == undefined) {\n        opt.xticks = get_tick_numbers(opt.xrange[0], opt.xrange[1], false);\n    }\n    if (opt.yticks == undefined) {\n        opt.yticks = get_tick_numbers(opt.yrange[0], opt.yrange[1], false);\n    }\n\n    let xgrid_diagrams = opt.xticks.map(x => \n        line(V2(x,opt.yrange[0]), V2(x,opt.yrange[1])).transform(axes_transform(opt)).stroke('gray')\n    );\n    let ygrid_diagrams = opt.yticks.map(y =>\n        line(V2(opt.xrange[0],y), V2(opt.xrange[1],y)).transform(axes_transform(opt)).stroke('gray')\n    );\n    return diagram_combine(...xgrid_diagrams, ...ygrid_diagrams);\n\n}\n\n\n\n\n// TODO : \n// export function axes(axes_options? : Partial<axes_options>) : Diagram {\n//     let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n// }\n\n/**\n * Plot a curve given a list of points\n * @param data list of points\n * @param axes_options options for the axes\n * example: opt = {\n *  bbox   : [V2(-100,-100), V2(100,100)],\n *  xrange : [-2, 2],\n *  yrange : [-2, 2],\n * }\n */\nexport function plotv(data : Vector2[], axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    let [xmin, xmax] = opt.xrange;\n    let [ymin, ymax] = opt.yrange;\n\n    // split data into segments that are within the range\n    let segments : Vector2[][] = [];\n    let current_segment : Vector2[] = [];\n    for (let i=0; i < data.length; i++) {\n        let p = data[i];\n        let is_inside = (p.x >= xmin && p.x <= xmax && p.y >= ymin && p.y <= ymax);\n        if (!is_inside) {\n            if (current_segment.length > 1) segments.push(current_segment);\n            current_segment = [];\n        } else {\n            current_segment.push(p);\n        }\n    }\n    if (current_segment.length > 1) segments.push(current_segment);\n\n    let d : Diagram;\n    // create separate paths for each segment\n    let path_diagrams = segments.map(segment => curve(segment));\n    if (path_diagrams.length == 1){\n        d = path_diagrams[0];\n    } else {\n        d = diagram_combine(...path_diagrams).stroke('black').fill('none');\n    }\n\n    return d.transform(axes_transform(opt));\n}\n\n/**\n * Plot a curve given xdata and ydata\n * @param xdata x coordinates of the data\n * @param ydata y coordinates of the data\n * @param axes_options options for the axes\n * example: opt = {\n *   bbox   : [V2(-100,-100), V2(100,100)],\n *   xrange : [-2, 2],\n *   yrange : [-2, 2],\n * }\n */\nexport function plot(xdata : number[], ydata : number[], axes_options? : Partial<axes_options>) : Diagram {\n    if (xdata.length != ydata.length) throw new Error('xdata and ydata must have the same length');\n    let vdata = xdata.map((x,i) => V2(x,ydata[i]));\n    return plotv(vdata, axes_options);\n}\n\n/**\n * Plot a function\n * @param f function to plot\n * @param n number of points to plot\n * @param axes_options options for the axes\n */\nexport function plotf(f : (x:number)=>number, axes_options? : Partial<axes_options>) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n    let xdata = linspace(...opt.xrange, opt.n_sample);\n    let vdata = xdata.map(x => V2(x,f(x)));\n    return plotv(vdata, axes_options);\n}\n\nexport function under_curvef(f : (x:number)=>number, x_start : number, x_end : number,  axes_options? : Partial<axes_options> ) : Diagram {\n    let opt = {...default_axes_options, ...axes_options}; // use default if not defined\n\n    let new_opt = {...opt}; // copy opt\n    new_opt.xrange = [x_start, x_end];\n    new_opt.bbox = undefined;\n\n    // draw plot from x_start to x_end\n    let fplot = plotf(f, new_opt);\n    let area_under = fplot.add_points([V2(x_end,0), V2(x_start,0)]).to_polygon();\n    return area_under.transform(axes_transform(opt));\n}\n","import { Diagram, line, diagram_combine, curve } from '../diagram.js';\nimport { arrow, textvar, arc } from '../shapes.js';\nimport { Vector2, V2 } from '../vector.js';\n\n/**\n * Create an annotation vector\n * @param v vector to be annotated\n * @param str string to be annotated (will be converted to mathematical italic)\n * if you don't want to convert to mathematical italic, use annotation.vector_text\n * @param arrow_head_size size of the arrow head\n * @param text_offset position offset of the text\n */\nexport function vector(v : Vector2, str? : string, text_offset? : Vector2, arrow_head_size? : number) : Diagram {\n    if (text_offset == undefined){ text_offset = V2(0,0); } // default value\n    let vec = arrow(v, arrow_head_size);\n    if (str == \"\" || str == undefined){ return vec; } // if str is empty, return only the vector\n\n    let txt = textvar(str).position(v.add(text_offset));\n    return diagram_combine(vec, txt);\n}\n\n/**\n * Create an annotation for angle\n * @param p three points to define the angle\n * @param str string to be annotated (will be converted to mathematical italic)\n * @param radius radius of the arc\n * @param text_offset position offset of the text\n * if given as a number, the text will be placed at the angle bisector with the given distance from the vertex\n * if given as a vector, the text will be placed at the given position offset\n */\nexport function angle(p : [Vector2, Vector2, Vector2], \n    str? : string, radius : number = 1 , text_offset? : Vector2 | number,\n) : Diagram {\n\n    let [p1, p2, p3] = p;\n    let va = p1.sub(p2);\n    let vb = p3.sub(p2);\n\n    if (text_offset == undefined){ text_offset = V2(0,0); } // default value\n    if (typeof text_offset == \"number\"){ \n        let vd = va.normalize().add(vb.normalize()).normalize().scale(text_offset);\n        text_offset = vd;\n    } \n\n    let angle_a = va.angle();\n    let angle_b = vb.angle();\n    // angle_b must be larger than angle_a\n    if (angle_b < angle_a){ angle_b += 2*Math.PI; }\n\n    let angle_arc = arc(radius, angle_b-angle_a).rotate(angle_a)\n        .add_points([V2(0,0)]).to_polygon();\n    if (str == \"\" || str == undefined){ return angle_arc.position(p2); } // if str is empty, return only the arc\n\n    let angle_text = textvar(str)\n        .translate(text_offset);\n\n    return diagram_combine(angle_arc, angle_text).position(p2);\n}\n\n/**\n * Create an annotation for angle (always be the smaller angle)\n * @param p three points to define the angle\n * @param str string to be annotated (will be converted to mathematical italic)\n * @param radius radius of the arc\n * @param text_offset position offset of the text\n * if given as a number, the text will be placed at the angle bisector with the given distance from the vertex\n * if given as a vector, the text will be placed at the given position offset\n */\nexport function angle_smaller(p : [Vector2, Vector2, Vector2],\n    str? : string, radius : number = 1 , text_offset? : Vector2 | number,\n) : Diagram {\n\n    let [p1, p2, p3] = p;\n    let va = p1.sub(p2);\n    let vb = p3.sub(p2);\n\n    let angle_a = va.angle();\n    let angle_b = vb.angle();\n    // angle_b must be larger than angle_a\n    if (angle_b < angle_a){ angle_b += 2*Math.PI; }\n    let dangle = angle_b - angle_a;\n\n\n    // if dangle is larger than 180 degree, swap the two vectors\n    let ps : typeof p = dangle > Math.PI ? [p3, p2, p1] : [p1, p2, p3];\n    return angle(ps, str, radius, text_offset);\n}\n\n/**\n * Create an annotation for right angle\n * make sure the angle is 90 degree\n * @param p three points to define the angle\n * @param size size of the square\n */\nexport function right_angle(p : [Vector2, Vector2, Vector2], size : number = 1) : Diagram {\n    let [p1, p2, p3] = p;\n    let p1_ = p1.sub(p2).normalize().scale(size).add(p2);\n    let p3_ = p3.sub(p2).normalize().scale(size).add(p2);\n    let p2_ = V2(p1_.x, p3_.y);\n    return curve([p1_, p2_, p3_]);\n}\n\nexport function length(p1 : Vector2, p2 : Vector2, str : string, offset : number, \n    tablength? : number, textoffset? : number, tabsymmetric : boolean = true\n) : Diagram {\n\n    // setup defaults\n    tablength = tablength ?? p2.sub(p1).length()/20;\n    textoffset = textoffset ?? offset * 2;\n\n    let v = p1.equals(p2) ? V2(0,0) : p2.sub(p1).normalize();\n    let n = V2(v.y, -v.x);\n    let pA = p1.add(n.scale(offset));\n    let pB = p2.add(n.scale(offset));\n\n    let tabA = tabsymmetric ?\n        line(pA.sub(n.scale(tablength/2)), pA.add(n.scale(tablength/2))) :\n        line(pA, pA.sub(n.scale(tablength)));\n    let tabB = tabsymmetric ?\n        line(pB.sub(n.scale(tablength/2)), pB.add(n.scale(tablength/2))) :\n        line(pB, pB.sub(n.scale(tablength)));\n    let lineAB = line(pA, pB);\n    let lines = diagram_combine(lineAB, tabA, tabB);\n\n    let pmid = p1.add(p2).scale(0.5);\n    let label = textvar(str).position(pmid.add(n.scale(textoffset)));\n\n    return diagram_combine(lines, label);\n}\n\n/**\n * Create a congruence mark\n * @param p1 start point of the line\n * @param p2 end point of the line\n * @param count number of marks\n * @param size size of the mark\n * @param gap gap between the marks\n */\nexport function congruence_mark(p1 : Vector2, p2 : Vector2, count : number, size : number = 1, gap? : number) : Diagram {\n    let v = p2.sub(p1)\n    let n_angle = Math.atan2(v.x, -v.y);\n    let p_mid = p1.add(p2).scale(0.5);\n    gap = gap ?? size/2;\n\n    let marks = [];\n    for (let i = 0; i < count; i++){\n        let l = line(V2(-size/2, i*gap), V2(size/2, i*gap));\n        marks.push(l)\n    }\n    let dg_marks = diagram_combine(...marks);\n    return dg_marks.rotate(n_angle).move_origin('center-center').position(p_mid);\n}\n\n/**\n * Create a parallel mark\n * @param p1 start point of the line\n * @param p2 end point of the line\n * @param count number of marks\n * @param size size of the mark\n * @param gap gap between the marks\n * @param arrow_angle angle of the arrow\n */\nexport function parallel_mark(p1 : Vector2, p2 : Vector2, count : number, size : number = 1, gap? : number, arrow_angle : number = 0.5) : Diagram {\n    let v = p2.sub(p1)\n    let n_angle = Math.atan2(v.x, -v.y);\n    let p_mid = p1.add(p2).scale(0.5);\n    gap = gap ?? size/2;\n\n    let marks = [];\n    let dy = size/2 * Math.cos(arrow_angle);\n    for (let i = 0; i < count; i++){\n        let p0 = V2(0, i*gap - dy);\n        let l1 = line(V2(-size/2, i*gap), p0)\n        let l2 = line(V2(size/2, i*gap), p0)\n        marks.push(l1.combine(l2));\n    }\n    let dg_marks = diagram_combine(...marks);\n    return dg_marks.rotate(n_angle).move_origin('center-center').position(p_mid);\n}\n","import { Diagram, polygon, curve } from '../diagram.js';\nimport { Vector2, V2 } from '../vector.js';\nimport { linspace } from '../utils.js';\n\n/**\n * Create an inclined plane.\n * @param length The length of the inclined plane.\n * @param angle The angle of the inclined plane.\n * @returns A diagram of the inclined plane.\n */\nexport function inclined_plane(length : number, angle : number) : Diagram {\n    return polygon([V2(0,0), V2(length, length*Math.tan(angle)), V2(length,0)]);\n}\n\n/**\n * Create a spring between two points.\n * @param p1 The first point.\n * @param p2 The second point.\n * @param radius The radius of the spring.\n * @param coil_number The number of coils in the spring.\n * @param separation_coefficient The coefficient of separation between coils.\n * \\* at 0, no coils are overlapping. (there is no max value)\n * @param sample_number The number of points to sample in the spring.\n * @returns A diagram of the spring.\n */\nexport function spring(p1 : Vector2, p2 : Vector2, radius : number = 1, coil_number : number = 10,\n    separation_coefficient : number = 0.5, sample_number : number = 100) : Diagram {\n\n    // I got this equation from https://www.reddit.com/r/desmos/comments/i3m3yd/interactive_spring_graphic/\n\n    let angle  = p2.sub(p1).angle();\n    let length = p2.sub(p1).length();\n\n    // abbrev\n    let R = separation_coefficient;\n    let n = coil_number;\n\n    let k = radius/R; // k*R = radius\n\n    let a = (2 * n + 1) * Math.PI;\n    let b = (length - 2*R) / a;\n\n    let parametric_function = (t : number) => V2(b*t + R - R*Math.cos(t), k*R*Math.sin(t));\n    let points = linspace(0, a, sample_number).map(parametric_function);\n    return curve(points).rotate(angle).translate(p1);\n}\n","import { Diagram, line, text, diagram_combine } from '../diagram.js';\nimport { Vector2, V2 } from '../vector.js';\nimport { rectangle, } from '../shapes.js'\nimport { axes_options, yticks, axes_transform } from './shapes_graph.js'\n\nexport type bar_options = {\n    gap : number,\n    yrange? : [number, number],\n    yticks? : number[],\n    bbox? : [Vector2, Vector2],\n    ticksize : number,\n}\n\nexport let default_bar_options : bar_options = {\n    gap: 0.1,\n    ticksize: 0.2,\n    bbox: [V2(0,0), V2(10,10)],\n}\n\n\nfunction to_ax_options(datavalues : number[], baropt : Partial<bar_options>) : axes_options {\n    let opt = {...default_bar_options, ...baropt}; // use default if not defined\n    let n = datavalues.length;\n\n    let ymax = Math.max(...datavalues);\n    let yrange = opt.yrange ?? [0, ymax];\n    let bbox = opt.bbox ?? [V2(0,0), V2(10,ymax)];\n\n    let ax_opt : axes_options = {\n        xrange   : [-1, n],\n        yrange   : yrange,\n        headsize : 0,\n        ticksize : opt.ticksize,\n        bbox     : bbox,\n    }\n    return ax_opt;\n}\n\n/**\n * Plot a bar chart\n * @param datavalues the data values to plot\n * @param bar_options options for the bar chart\n * @returns a diagram of the bar chart\n */\nexport function plot(datavalues : number[], bar_options : Partial<bar_options> = {}) : Diagram {\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n\n    let ax_opt = to_ax_options(datavalues, opt);\n    let ax_f = axes_transform(ax_opt);\n\n    let bar_arr = datavalues.map((y,i) => \n        rectangle(1.0-opt.gap, y).move_origin('bottom-center')\n            .position(V2(Number(i), 0)).transform(ax_f)\n    );\n    return diagram_combine(...bar_arr);\n}\n\n/**\n * x-axes with label for bar chart\n * @param datanames the data names\n * @param bar_options options for the bar chart\n * @returns a diagram of the x-axes\n */\nexport function xaxes(datanames : string[], bar_options : Partial<bar_options> = {}) : Diagram {\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n    let n = datanames.length;\n\n    let ax_opt = to_ax_options(datanames.map(() => 1), opt);\n    let ax_f = axes_transform(ax_opt);\n\n    let l = line(V2(-1,0), V2(n,0)).transform(ax_f).stroke('gray');\n    let label_arr = datanames.map((name,i) => \n        text(name).move_origin_text('top-center').position(V2(Number(i), 0)).transform(ax_f)\n            .translate(V2(0,-opt.ticksize/2)).textfill('gray')\n    );\n    return diagram_combine(l, ...label_arr);\n}\n\n/**\n * y-axes with label for bar chart\n * @param datavalues the data values\n * @param bar_options options for the bar chart\n */\nexport function yaxes(datavalues : number[], bar_options : Partial<bar_options> = {}) : Diagram {\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n\n    let ax_opt = to_ax_options(datavalues, opt);\n\n    let ymax   = ax_opt.yrange[1];\n    let yrange = opt.yrange ?? [0, ymax];\n\n    let ax_f = axes_transform(ax_opt);\n\n    let l = line(V2(-1,0), V2(-1,yrange[1])).transform(ax_f).stroke('gray');\n    return yticks(ax_opt, -1).combine(l);\n}\n\nexport function axes_tansform(datavalues : number[], bar_options : Partial<bar_options> = {}) : (v : Vector2) => Vector2 {\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n    let ax_opt = to_ax_options(datavalues, opt);\n    return axes_transform(ax_opt);\n}\n","import { Diagram, line, text, diagram_combine } from '../diagram.js';\nimport { V2 } from '../vector.js';\nimport { arrow2 } from '../shapes.js'\nimport { TAG } from '../tag_names.js';\n\n/**\n * Draw an empty axis from xmin to xmax with arrowsize\n * @param xmin minimum value of the numberline\n * @param xmax maximum value of the numberline\n * @param arrowsize the size of the arrowhead\n * returns a Diagram\n */\nexport function axis(xmin : number, xmax : number, arrowsize : number = 1) : Diagram {\n    return arrow2(V2(xmin, 0), V2(xmax,0), arrowsize).fill('black').append_tags(TAG.GRAPH_AXIS);\n}\n\n/**\n * Draw a numbered ticks for a numberline\n * @param xs the values of the ticks\n * @param ticksize the size of the ticks\n * @param number_offset the offset of the number from the ticks\n * returns a Diagram\n */\nexport function numbered_ticks(xs : number[], ticksize : number, number_offset : number) : Diagram {\n    let d_ticks : Diagram[] = [];\n    for (let i of xs) {\n        let tick = line(V2(i, -ticksize/2), V2(i, ticksize/2)).stroke('black').append_tags(TAG.GRAPH_TICK);\n        let num  = text(i.toString()).move_origin('top-center').position(V2(i, -ticksize/2 - number_offset))\n            .append_tags(TAG.GRAPH_TICK_LABEL);\n        d_ticks.push(diagram_combine(tick, num));\n    }\n    return diagram_combine(...d_ticks);\n}\n\n/**\n * Draw ticks for a numberline\n * @param xs the values of the ticks\n * @param ticksize the size of the ticks\n * returns a Diagram\n */\nexport function ticks(xs : number[], ticksize : number) : Diagram {\n    let d_ticks : Diagram[] = [];\n    for (let i of xs) {\n        let tick = line(V2(i, -ticksize/2), V2(i, ticksize/2)).stroke('black').append_tags(TAG.GRAPH_TICK);\n        d_ticks.push(tick);\n    }\n    return diagram_combine(...d_ticks);\n}\n\n/**\n * Draw a single tick for a numberline\n * @param x the value of the tick\n * @param txt the text of the tick\n * @param ticksize the size of the tick\n * @param text_offset the offset of the text from the tick\n * returns a Diagram\n */\nexport function single_tick(x : number, txt : string, ticksize : number, text_offset : number) : Diagram {\n    let tick = line(V2(x, -ticksize/2), V2(x, ticksize/2)).stroke('black').append_tags(TAG.GRAPH_TICK);\n    if (txt == '') return tick;\n\n    let num  = text(txt).move_origin('top-center').position(V2(x, -ticksize/2 - text_offset))\n        .append_tags(TAG.GRAPH_TICK_LABEL);\n    return diagram_combine(tick, num);\n}\n","import { Diagram, diagram_combine } from '../diagram.js';\nimport { rectangle_corner } from '../shapes.js';\nimport { V2, Vector2 } from '../vector.js';\nimport { transpose, expand_directional_value } from '../utils.js';\nimport { TAG } from '../tag_names.js';\n\nenum TableOrientation {\n    ROWS    = 'rows',\n    COLUMNS = 'columns',\n}\n\nexport type cell_style = { index : [number,number], fill? : string, stroke? : string, strokewidth? : number };\n\n/**\n * Create a table with diagrams inside\n * @param diagrams 2D array of diagrams\n * @param orientation orientation of the table (default: 'rows')\n * can be 'rows' or 'columns'\n * @param min_rowsize minimum size of each row\n * @param min_colsize minimum size of each column\n * @returns a diagram of the table with the diagrams inside\n */\nexport function table(diagrams : Diagram[][], padding : number | number[] = 0, orientation : TableOrientation = TableOrientation.ROWS, \n    min_rowsize : number = 0, min_colsize : number = 0) : Diagram {\n    // if the orientation is columns, then we just transpose the rows and columns\n    let diagram_rows = orientation == TableOrientation.ROWS ? diagrams : transpose(diagrams);\n\n    const pad = expand_directional_value(padding);\n    function f_size(d? : Diagram) : [number, number] {\n        if (d == undefined) return [min_colsize, min_rowsize];\n        let [bottomleft, topright] = d.bounding_box();\n        let width  = topright.x - bottomleft.x + pad[1] + pad[3];\n        let height = topright.y - bottomleft.y + pad[0] + pad[2];\n        return [width, height];\n    }\n\n    let row_count = diagram_rows.length;\n    let col_count = Math.max(...diagram_rows.map(row => row.length));\n    let rowsizes : number[] = Array(row_count).fill(min_rowsize);\n    let colsizes : number[] = Array(col_count).fill(min_colsize);\n    // find the maximum size of each row and column\n    for (let r = 0; r < row_count; r++) {\n        for (let c = 0; c < col_count; c++) {\n            let [w, h] = f_size(diagram_rows[r][c]);\n            rowsizes[r] = Math.max(rowsizes[r], h);\n            colsizes[c] = Math.max(colsizes[c], w);\n        }\n    }\n\n    return fixed_size(diagrams, rowsizes, colsizes, orientation);\n}\n\n/**\n * Style the cells of a table\n * @param table_diagram a diagram of a table\n * @param styles an array of cell styles\n * each style has an index of the cell and the style\n * e.g. { index : [0,0], fill : 'red', stroke : 'black', strokewidth : 2 }\n * not all styles are required\n * e.g. { index : [0,0], fill : 'red' }\n * @returns a new diagram with the cells styled\n */\nexport function style_cell(table_diagram : Diagram, styles : cell_style[]) : Diagram {\n    let newd = table_diagram.copy();\n    if (table_diagram.tags.includes(TAG.CONTAIN_TABLE)) {\n        let table_index = newd.children.findIndex(d => d.tags.includes(TAG.TABLE));\n        let new_table = style_cell(newd.children[table_index], styles);\n        newd.children[table_index] = new_table;\n        return newd;\n    }\n    else if (!table_diagram.tags.includes(TAG.TABLE)) { return table_diagram; }\n\n    for (let style of styles) {\n        let [r, c] = style.index;\n        let cell = newd.children[r].children[c];\n        if (style.fill) { cell = cell.fill(style.fill); }\n        if (style.stroke) { cell = cell.stroke(style.stroke); }\n        if (style.strokewidth) { cell = cell.strokewidth(style.strokewidth); }\n        newd.children[r].children[c] = cell;\n    }\n    return newd;\n}\n\n/**\n * Create a table with fixed size\n * @param diagrams 2D array of diagrams\n * @param rowsizes size of each row\n * if `rowsizes.length` is less than `diagrams.length`, the last value will be repeated\n * e.g. [1,2,3] -> [1,2,3,3,3]\n * @param colsizes size of each column\n * if `colsizes.length` is less than `diagrams[0].length`, the last value will be repeated\n * @param orientation orientation of the table (default: 'rows')\n * can be 'rows' or 'columns'\n * @returns a diagram of the table with the diagrams inside\n */\nexport function fixed_size(diagrams : Diagram[][], rowsizes : number[], colsizes : number[]\n    , orientation : TableOrientation = TableOrientation.ROWS ) : Diagram \n{\n    // if the orientation is columns, then we just transpose the rows and columns\n    let diagram_rows = orientation == TableOrientation.ROWS ? diagrams : transpose(diagrams);\n    let row_count = diagram_rows.length;\n    let col_count = Math.max(...diagram_rows.map(row => row.length));\n\n    let table = empty_fixed_size(row_count, col_count, rowsizes, colsizes);\n    let points = get_points(table);\n\n    let diagram_grid : Diagram[] = [];\n    for (let r = 0; r < row_count; r++) {\n        for (let c = 0; c < col_count; c++) {\n            let d = diagram_rows[r][c];\n            if (d == undefined) continue;\n            d = d.move_origin('center-center').position(points[r][c])\n                .append_tags(TAG.TABLE_CONTENT)\n                .append_tags(TAG.ROW_ + r)\n                .append_tags(TAG.COL_ + c);\n            diagram_grid.push(d);\n        }\n    }\n    let diagram_grid_combined = diagram_combine(...diagram_grid);\n    return diagram_combine(table, diagram_grid_combined).append_tags(TAG.CONTAIN_TABLE);\n}\n\n/**\n * Create an empty table with fixed size\n * @param row_count number of rows\n * @param col_count number of columns\n * @param rowsizes size of each row\n * if `rowsizes.length` is less than `row_count`, the last value will be repeated\n * e.g. [1,2,3] -> [1,2,3,3,3]\n * @param colsizes size of each column\n * if `colsizes.length` is less than `col_count`, the last value will be repeated\n */\nexport function empty_fixed_size(row_count : number, col_count : number, \n    rowsizes : number[], colsizes : number[]) : Diagram \n{\n    while (rowsizes.length < row_count) { rowsizes.push(rowsizes[rowsizes.length-1]); }\n    while (colsizes.length < col_count) { colsizes.push(colsizes[colsizes.length-1]); }\n\n    let rows : Diagram[] = [];\n    let y_top = 0;\n    for (let r = 0; r < row_count; r++) {\n        let y_bot   = y_top - rowsizes[r];\n        let x_left = 0;\n        let cols : Diagram[] = [];\n        for (let c = 0; c < col_count; c++) {\n            let x_right = x_left + colsizes[c];\n            let x_mid = (x_left + x_right) / 2;\n            let y_mid = (y_top + y_bot) / 2;\n\n            //TODO: draw line instead of recangles\n            let rect = rectangle_corner(V2(x_left, y_bot), V2(x_right, y_top)).move_origin(V2(x_mid, y_mid))\n                .append_tags(TAG.TABLE_CELL)\n                .append_tags(TAG.ROW_ + r)\n                .append_tags(TAG.COL_ + c);\n            cols.push(rect);\n            x_left = x_right;\n        }\n        rows.push(diagram_combine(...cols));\n        y_top = y_bot;\n    }\n\n    return diagram_combine(...rows).append_tags(TAG.TABLE);\n}\n\n/**\n * Get the midpoints of the cells from a table diagram\n * @param table_diagram a table diagram\n * @returns a 2D array of points\n * the first index is the row, the second index is the column\n */\nexport function get_points(table_diagram : Diagram) : Vector2[][] {\n    let table_diagram_ = table_diagram;\n    if (table_diagram.tags.includes(TAG.CONTAIN_TABLE)) {\n        for (let d of table_diagram.children){\n            if (d.tags.includes(TAG.TABLE)) {\n                table_diagram_ = d;\n                break;\n            }\n        }\n    }\n    if (!table_diagram_.tags.includes(TAG.TABLE)) return [];\n\n    let rows : Vector2[][] = [];\n    for (let row of table_diagram_.children){\n        let cols : Vector2[] = [];\n        for (let cell of row.children){\n            cols.push(cell.origin);\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n","import { Diagram, line, text, diagram_combine } from '../diagram.js';\nimport { Vector2, V2 } from '../vector.js';\nimport { rectangle, arrow2 } from '../shapes.js'\nimport { axes_options, xticks, yticks, axes_transform, xtickmark_empty, ytickmark_empty } from './shapes_graph.js'\n\nexport type boxplot_options = {\n    range? : [number, number],\n    ticks? : number[],\n    bbox? : [Vector2, Vector2],\n    ticksize : number,\n    headsize : number,\n    orientation : 'x' | 'y',\n    tick_label_offset? : number,\n}\n\nexport let default_bar_options : boxplot_options = {\n    ticksize: 0.2,\n    range : [0,1],\n    bbox: [V2(0,0), V2(10,10)],\n    orientation: 'x',\n    headsize : 0.05,\n    tick_label_offset : 0,\n}\n\nexport function to_ax_options(baropt : Partial<boxplot_options>) : axes_options {\n    let opt = {...default_bar_options, ...baropt}; // use default if not defined\n    opt.bbox = opt.bbox ?? [V2(0,0), V2(10,10)]; // just to make sure it is defined\n\n    if (opt.orientation == 'x') {\n        let ax_opt : axes_options = {\n            xrange   : opt.range as [number, number],\n            yrange   : [opt.bbox[0].y, opt.bbox[1].y],\n            xticks   : opt.ticks,\n            headsize : opt.headsize,\n            ticksize : opt.ticksize,\n            bbox     : opt.bbox,\n            tick_label_offset : opt.tick_label_offset,\n        }\n        return ax_opt;\n    } else {\n        let ax_opt : axes_options = {\n            xrange   : [opt.bbox[0].x, opt.bbox[1].x],\n            yrange   : opt.range as [number, number],\n            yticks   : opt.ticks,\n            headsize : opt.headsize,\n            ticksize : opt.ticksize,\n            bbox     : opt.bbox,\n            tick_label_offset : opt.tick_label_offset,\n        }\n        return ax_opt;\n    }\n}\n\n\n/**\n * axis for boxplot\n * @param bar_options options for the bar chart\n * @returns a diagram of the axes\n */\nexport function axes(bar_options : Partial<boxplot_options> = {}) : Diagram {\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n    let ax_opt = to_ax_options(opt);\n    // let ax_f = axes_transform(ax_opt);\n\n    let [lowerleft, upperright] = opt.bbox as [Vector2, Vector2];\n\n    if (opt.orientation == 'x') {\n        let xaxis = arrow2(V2(lowerleft.x,0), V2(upperright.x,0), opt.headsize);\n        let xtickmarks = xticks(ax_opt, 0);\n        return diagram_combine(xaxis, xtickmarks).stroke('gray').fill('gray');\n    } else {\n        let yaxis = arrow2(V2(0,lowerleft.y), V2(0,upperright.y), opt.headsize);\n        let ytickmarks = yticks(ax_opt, 0);\n        return diagram_combine(yaxis, ytickmarks).stroke('gray').fill('gray');\n    }\n}\n\n/**\n */\nexport function empty_tickmarks(xs: number[], bar_options : Partial<boxplot_options> = {}) : Diagram {\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n    let ax_opt = to_ax_options(opt);\n    // let ax_f = axes_transform(ax_opt);\n    if (opt.orientation == 'x') {\n        ax_opt.xticks = xs;\n        return xticks(ax_opt, 0, true);\n    } else {\n        ax_opt.yticks = xs;\n        return yticks(ax_opt, 0, true);\n    }\n}\n\n/**\n * Plot a boxplot from quartiles\n * @param quartiles [Q0, Q1, Q2, Q3, Q4]\n * @param pos position of the boxplot\n * @param size size of the boxplot\n * @param bar_options options for the bar chart\n * @returns a diagram of the boxplot\n */\nexport function plotQ(quartiles : number[], pos : number, size : number, bar_options : Partial<boxplot_options>){\n    let opt = {...default_bar_options, ...bar_options}; // use default if not defined\n    let ax_opt = to_ax_options(opt);\n    let ax_f = axes_transform(ax_opt);\n    let [Q0, Q1, Q2, Q3, Q4] = quartiles;\n\n    let whisker_size = 0.8 * size;\n    if (opt.orientation == 'x') {\n        let box = rectangle(Q3-Q1, size).move_origin('center-left').position(V2(Q1, pos)).transform(ax_f);\n        let min    = line(V2(Q0, pos - whisker_size/2), V2(Q0, pos + whisker_size/2)).transform(ax_f);\n        let max    = line(V2(Q4, pos - whisker_size/2), V2(Q4, pos + whisker_size/2)).transform(ax_f);\n        let median = line(V2(Q2, pos - size/2), V2(Q2, pos + size/2)).transform(ax_f);\n        let whisker_min = line(V2(Q0, pos), V2(Q1, pos)).transform(ax_f);\n        let whisker_max = line(V2(Q3, pos), V2(Q4, pos)).transform(ax_f);\n        return diagram_combine(box, min, max, median, whisker_min, whisker_max);\n    } else {\n        let box = rectangle(size, Q3-Q1).move_origin('bottom-center').position(V2(pos, Q1)).transform(ax_f);\n        let min    = line(V2(pos - whisker_size/2, Q0), V2(pos + whisker_size/2, Q0)).transform(ax_f);\n        let max    = line(V2(pos - whisker_size/2, Q4), V2(pos + whisker_size/2, Q4)).transform(ax_f);\n        let median = line(V2(pos - size/2, Q2), V2(pos + size/2, Q2)).transform(ax_f);\n        let whisker_min = line(V2(pos, Q0), V2(pos, Q1)).transform(ax_f);\n        let whisker_max = line(V2(pos, Q3), V2(pos, Q4)).transform(ax_f);\n        return diagram_combine(box, min, max, median, whisker_min, whisker_max);\n    }\n}\n\n// TODO: plot boxplot from data\n// TODO: plot multiple boxplots at once\n","import { Diagram, line as dgline, text, diagram_combine, empty  } from '../diagram.js';\nimport { circle, textvar } from '../shapes.js';\nimport { V2, Vector2, Vdir } from '../vector.js';\n\nenum GeoType {\n    LINE = 'LINE',\n}\nexport type GeoCtx = {[key : string] : (GeoObj | Vector2 | number)}\nexport interface GeoObj { type : GeoType; }\n\nexport interface GeoLine extends GeoObj {\n    type : GeoType.LINE;\n    p : Vector2\n    dir : Vector2 // not necessarily a unit vector\n}\n// TODO : CeoCircle\n\nexport function intersect(o1 : GeoObj, o2 : GeoObj) : Vector2[] {\n    if (o1.type === GeoType.LINE && o2.type === GeoType.LINE) {\n        let l1 = o1 as GeoLine;\n        let l2 = o2 as GeoLine;\n        let p = line_intersection(l1, l2);\n        return [p]\n    }\n    return [];\n}\n\n\n/**\n * Get a point that is `d` distance away from `p` in the direction of `dir`\n * *ideally, point `p` should be in line `l`*\n */\nexport function point_onLine_atDistance_from(l : GeoLine, d : number, p : Vector2) : Vector2 {\n    let dir = l.dir.normalize();\n    return p.add(dir.scale(d));\n}\n\n/**\n * Get a point\n * - that is collinear with `p1` and `p2`\n * - that is `len` away from `p2` in the direction away from `p1`\n */\nexport function point_collinear_extend_length(p1 : Vector2, p2 : Vector2, len : number) : Vector2 {\n    let dir = p2.sub(p1).normalize();\n    return p2.add(dir.scale(len));\n}\n\n/** Get a point that is `t` fraction of the way from `p1` to `p2` */\nexport function point_collinear_fraction(p1 : Vector2, p2 : Vector2, t : number) : Vector2 {\n    let dir = p2.sub(p1);\n    return p1.add(dir.scale(t));\n}\n\n/** Get a point on line `l` with x-coordinate `x` */\nexport function point_onLine_with_x(l : GeoLine, x : number) : Vector2 {\n    let m = l.dir.y / l.dir.x;\n    let c = l.p.y - m * l.p.x;\n    return V2(x, m * x + c);\n}\n\n/** Get a point on line `l` with y-coordinate `y` */\nexport function point_onLine_with_y(l : GeoLine, y : number) : Vector2 {\n    let m = l.dir.y / l.dir.x;\n    let c = l.p.y - m * l.p.x;\n    return V2((y - c) / m, y);\n}\n\n\n/** Get the intersection point of two lines */\nexport function line_intersection(l1 : GeoLine, l2 : GeoLine) : Vector2 {\n    let a1 = l1.p; let b1 = l1.p.add(l1.dir);\n    let a2 = l2.p; let b2 = l2.p.add(l2.dir);\n\n    let x1 = a1.x; let y1 = a1.y; let x2 = b1.x; let y2 = b1.y;\n    let x3 = a2.x; let y3 = a2.y; let x4 = b2.x; let y4 = b2.y;\n\n    let d = (x1-x2)*(y3-y4) - (y1-y2)*(x3-x4);\n    let x = ((x1*y2 - y1*x2)*(x3-x4) - (x1-x2)*(x3*y4 - y3*x4))/d;\n    let y = ((x1*y2 - y1*x2)*(y3-y4) - (y1-y2)*(x3*y4 - y3*x4))/d;\n    return V2(x, y);\n}\n\n\n// Constructing lines\nexport function line(p : Vector2, dir : Vector2) : GeoLine {\n    return {type:GeoType.LINE, p, dir};\n}\nexport function line_from_points(p1 : Vector2, p2 : Vector2) : GeoLine {\n    return line(p1, p2.sub(p1));\n}\nexport function line_from_slope(p : Vector2, slope : number) : GeoLine {\n    return line(p, V2(1, slope));\n}\nexport function line_from_angle(p : Vector2, angle : number) : GeoLine {\n    return line(p, Vdir(angle));\n}\n\n/** Define a line that is parallel to `l` and passes through `p` */\nexport function line_parallel_at_point(l : GeoLine, p : Vector2) : GeoLine {\n    return line(p, l.dir);\n}\n/** Define a line that is perpendicular to `l` and passes through `p` */\nexport function line_perpendicular_at_point(l : GeoLine, p : Vector2) : GeoLine {\n    return line(p, V2(-l.dir.y, l.dir.x));\n}\n/** Define a line that has the direction of `l` rotated by `angle` and passes through `p` */\nexport function line_rotated_at_point(l : GeoLine, angle : number, p : Vector2) : GeoLine {\n    return line(p, l.dir.rotate(angle));\n}\n\nfunction line_intersect_bbox(l : GeoLine, bbox : [Vector2, Vector2]) : Diagram | undefined {\n    let [bottom_left, top_right] = bbox;\n    let bl = bottom_left;\n    let tr = top_right;\n    let tl = V2(bl.x, tr.y);\n    let br = V2(tr.x, bl.y);\n    let intersections = [\n        line_intersection(l, line_from_points(tl, tr)),\n        line_intersection(l, line_from_points(tr, br)),\n        line_intersection(l, line_from_points(br, bl)),\n        line_intersection(l, line_from_points(bl, tl)),\n    ];\n    const tol = 1e-6; // tolerance\n    const is_inside_bbox = (p : Vector2) => { \n        return p.x >= bl.x - tol && p.x <= tr.x + tol && p.y >= bl.y - tol && p.y <= tr.y + tol;\n    }\n    let points = intersections.filter(p => is_inside_bbox(p));\n    if (points.length <= 1) return undefined;\n    return dgline(points[0], points[1]);\n}\n\n// drawing\nfunction normalize_padding(padding : number[] | number) : [number, number, number, number] {\n    let p = (typeof padding === 'number') ? [padding] : padding;\n    switch (p.length) {\n        case 0: return [0, 0, 0, 0];\n        case 1: return [p[0], p[0], p[0], p[0]];\n        case 2: return [p[0], p[1], p[0], p[1]];\n        case 3: return [p[0], p[1], p[2], p[1]];\n        default: return [p[0], p[1], p[2], p[3]];\n    }\n}\n\n/**\n * Get a preview diagram of the context\n * @param ctx the Geo context (a dictionary of GeoObj and Vector2)\n * @param pad padding around the diagram (determine how far away from the defined point the visible diagram is)\n */\nexport function get_preview_diagram(ctx : GeoCtx, pad? : number[] | number) : Diagram {\n    let points : {name : string, p : Vector2}[] = [];\n    let lines : {name : string, obj : GeoLine}[] = [];\n\n    let typelist : {[key in GeoType] : {name: string, obj : GeoObj}[]} = {\n        [GeoType.LINE] : lines\n    }\n\n    let object_names = Object.keys(ctx);\n    for (let name of object_names) {\n        let obj = ctx[name];\n        if (typeof(obj) === 'number'){\n            continue;\n        }\n        else if (obj instanceof Vector2) {\n            points.push({name, p:obj});\n        } else {\n            typelist[obj.type].push({name, obj});\n        }\n    }\n\n    let minx = Math.min(...points.map(p => p.p.x));\n    let maxx = Math.max(...points.map(p => p.p.x));\n    let miny = Math.min(...points.map(p => p.p.y));\n    let maxy = Math.max(...points.map(p => p.p.y));\n\n    if (pad == undefined) pad = Math.max(maxx - minx, maxy - miny) * 0.1;\n    pad = normalize_padding(pad);\n    let bbox = [V2(minx - pad[0], miny - pad[1]), V2(maxx + pad[2], maxy + pad[3])] as [Vector2, Vector2];\n\n    let dg_lines = lines.map(l => line_intersect_bbox(l.obj, bbox)).filter(d => d !== undefined) as Diagram[];\n    let r = Math.max(bbox[1].x - bbox[0].x, bbox[1].y - bbox[0].y) * 0.01 * 2/3;\n    let dg_points = points.map(p => {\n        let c = circle(r).translate(p.p).fill('black');\n        let name = textvar(p.name).translate(p.p.add(V2(r*2, r*2))).move_origin_text('bottom-left');\n        let namebg = name.copy().textfill('white').textstroke('white').textstrokewidth(10).opacity(0.7)\n        return c.combine(namebg, name)\n    });\n    return diagram_combine(...dg_lines, ...dg_points);\n}\n","import { Diagram } from '../diagram.js';\nimport { V2 } from '../vector.js';\nimport { size } from './shapes_geometry.js';\nimport type { TreeNode } from './shapes_tree.js';\n\n// C. Buchheim, M. J Unger, and S. Leipert. Improving Walker's algorithm to run in linear time. In Proc. Graph Drawing (GD), 2002. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.16.8757\n// article : https://llimllib.github.io/pymag-trees/\nexport class TreeDraw  {\n    diagram: Diagram;\n    size: [number,number];\n    tree: TreeNode;\n    children: TreeDraw[];\n    x : number; \n    y : number;\n    parent: TreeDraw | undefined;\n    thread: TreeDraw | undefined;\n    mod: number;\n    ancestor: TreeDraw;\n    change: number;\n    shift: number;\n    number: number;\n\n    constructor(tree: TreeNode, parent : TreeDraw | undefined, depth : number = 0, number : number = 0) {\n        this.diagram = tree.value;\n        this.size = size(this.diagram);\n        this.x = -1.0;\n        this.y = depth;\n        this.tree = tree;\n        let tree_children = tree.children ?? [];\n        this.children = tree_children.map((child, i) => new TreeDraw(child, this, depth + 1, i));\n        this.parent = parent;\n        this.thread = undefined;\n        this.mod = 0;\n        this.ancestor = this;\n        this.change = 0;\n        this.shift = 0;\n        this.number = number;\n    }\n\n    left() : TreeDraw | undefined {\n        if (this.thread) return this.thread;\n        if (this.children.length > 0) return this.children[0];\n        return undefined;\n    }\n    right() : TreeDraw | undefined{\n        if (this.thread) return this.thread;\n        if (this.children.length > 0) return this.children[this.children.length-1];\n        return undefined;\n    }\n    lsibling() : TreeDraw | undefined {\n        if (!this.parent) return undefined;\n        if (this.number > 0) return this.parent.children[this.number-1];\n        return undefined;\n    }\n}\n\nexport function calculate_tree_buchheim(tree : TreeNode, vertical_dist : number, horizontal_gap : number) : TreeDraw{\n    let treeDraw = new TreeDraw(tree, undefined);\n    let dt = first_walk(treeDraw, horizontal_gap);\n    let min = second_walk(dt, 0, 0, vertical_dist, 0);\n    if (min < 0) third_walk(dt, -min);\n    position_diagram(dt);\n    return dt;\n}\n\nfunction position_diagram(tree : TreeDraw) {\n    tree.diagram = tree.diagram.position(V2(tree.x, tree.y));\n    tree.children.forEach(position_diagram);\n}\n\nfunction third_walk(td : TreeDraw, n : number){\n    td.x += n;\n    td.children.forEach(child => third_walk(child, n));\n}\n\nfunction first_walk(td : TreeDraw, horizontal_gap : number){\n    let self_halfwidth = td.size[0] / 2;\n    if (td.children.length === 0){\n        let lbrother = td.lsibling();\n        if (lbrother) {\n            let lbrother_halfwidth = lbrother.size[0] / 2;\n            let dist = lbrother_halfwidth + self_halfwidth + horizontal_gap;\n            td.x = lbrother.x + dist;\n        } else {\n            td.x = 0\n        }\n    } else {\n        let default_ancestor = td.children[0];\n        td.children.forEach(w => {\n            first_walk(w, horizontal_gap);\n            default_ancestor = apportion(w, default_ancestor, horizontal_gap);\n        });\n        execute_shifts(td);\n        let midpoint = (td.children[0].x + td.children[td.children.length-1].x) / 2;\n        let lbrother = td.lsibling();\n        if (lbrother){\n            let lbrother_halfwidth = lbrother.size[0] / 2;\n            let dist = lbrother_halfwidth + self_halfwidth + horizontal_gap;\n            td.x = lbrother.x + dist;\n            td.mod = td.x - midpoint;\n        } else {\n            td.x = midpoint;\n        }\n    }\n    return td;\n}\n\ntype V = TreeDraw | undefined;\nfunction apportion(v : TreeDraw, default_ancestor : TreeDraw, horizontal_gap : number) {\n    let w = v.lsibling();\n    if (w !== undefined) {\n        let lmost_sibling = (!v.parent || v.number === 0) ? undefined : v.parent.children[0];\n        let vir : V = v;\n        let vor : V = v;\n        let vil : V = w;\n        let vol : V = lmost_sibling ;\n        let sir = v.mod;\n        let sor = v.mod;\n        let sil = vil.mod;\n        let sol = vol!.mod;\n\n        while (vil?.right() !== undefined && vir?.left() !== undefined) {\n            vil = vil.right();\n            vir = vir.left();\n            vol = vol?.left();\n            vor = vor?.right();\n            vor!.ancestor = v;\n            let lhalfwidth = vil!.size[0] / 2;\n            let rhalfwidth = vir!.size[0] / 2;\n            let dist = lhalfwidth + rhalfwidth + horizontal_gap;\n            let shift = (vil!.x + sil) - (vir!.x + sir) + dist;\n            if (shift > 0) {\n                let a = ancestor(vil!, v, default_ancestor);\n                move_subtree(a, v, shift);\n                sir += shift;\n                sor += shift;\n            }\n            sil += vil!.mod;\n            sir += vir!.mod;\n            sol += vol!.mod;\n            sor += vor!.mod;\n        }\n        if (vil!.right() !== undefined && vor!.right() === undefined) {\n            vor!.thread = vil!.right();\n            vor!.mod += sil - sor;\n        } else {\n            if (vir?.left() !== undefined && vol?.left() === undefined) {\n                vol!.thread = vir.left();\n                vol!.mod += sir - sol;\n            }\n            default_ancestor = v;\n        }\n    }\n    return default_ancestor;\n}\n\nfunction move_subtree(wl : TreeDraw, wr : TreeDraw, shift : number){\n    let subtrees = wr.number - wl.number;\n    wr.change -= shift / subtrees;\n    wr.shift += shift;\n    wl.change += shift / subtrees;\n    wr.x += shift;\n    wr.mod += shift;\n}\n\nfunction execute_shifts(td : TreeDraw){\n    let shift = 0;\n    let change = 0;\n    for (let i = td.children.length - 1; i >= 0; i--){\n        let w = td.children[i];\n        w.x += shift;\n        w.mod += shift;\n        change += w.change;\n        shift += w.shift + change;\n    }\n}\n\nfunction ancestor(vil : TreeDraw, v : TreeDraw, default_ancestor : TreeDraw){\n    if (v.parent?.children.includes(vil.ancestor)) return vil.ancestor;\n    return default_ancestor;\n}\n\nfunction second_walk(td : TreeDraw, m : number, depth : number, vertical_dist : number, min? : number){\n    td.x += m;\n    td.y = -depth * vertical_dist;\n\n    // if (min === undefined) min = v.x;\n    min = Math.min(min ?? td.x, td.x);\n\n    td.children.forEach(w => {\n        min = second_walk(w, m + td.mod, depth + 1, vertical_dist, min);\n    });\n    return min;\n}\n","import { Diagram, diagram_combine, line } from '../diagram.js';\nimport { calculate_tree_buchheim, TreeDraw } from './utils_tree.js';\n\n\nexport interface TreeNode {\n    value: Diagram;\n    children?: TreeNode[];\n}\n\n/**\n * Create a tree diagram from a tree node\n * @param node root node of the tree\n * @param vertical_dist vertical distance between nodes\n * @param horizontal_gap horizontal gap between nodes\n * @returns tree diagram\n */\nexport function tree(node : TreeNode, vertical_dist : number, horizontal_gap : number) : Diagram {\n    let treeDraw = calculate_tree_buchheim(node, vertical_dist, horizontal_gap);\n    return diagram_from_treeDraw(treeDraw);\n}\n\n/**\n * Mirror a tree node\n * @param node root node of the tree\n * @returns mirrored tree node\n */\nexport function mirror_treenode(node : TreeNode) : TreeNode {\n    return {value: node.value, children: (node.children ?? []).map(mirror_treenode).reverse()};\n}\n\n/**\n * Helper function to create a diagram from a treeDraw\n * @param node treeDraw node\n * @returns diagram\n */\nfunction diagram_from_treeDraw(node : TreeDraw) : Diagram {\n    let node_dg = node.diagram;\n    let children_dglist = node.children.map(diagram_from_treeDraw);\n    let line_diagrams = node.children.map(child_node => {\n        let start = node_dg.get_anchor('bottom-center');\n        let end = child_node.diagram.get_anchor('top-center');\n        return line(start, end);\n    });\n    return diagram_combine(node_dg, ...line_diagrams, ...children_dglist);\n}\n\n","import { Diagram, curve } from '../diagram.js';\nimport { V2, Vector2 } from '../vector.js';\n\n/**\n* Combine multiple curves into a single curve\n* @param curves an array of curves\n* \\* you can reverse the order of the point in a curve by using the reverse() method\n*/\nexport function curve_combine(...curves : Diagram[]) : Diagram {\n    const points = curves.map(c => c.path?.points ?? []).flat();\n    return curve(points);\n}\n\nexport function bezier_quadratic(p0 : Vector2, p1 : Vector2, p2 : Vector2, n_sample = 100 ) {\n    const dt = 1/(n_sample-1);\n    const points = Array<Vector2>(n_sample);\n    for (let i = 0; i < n_sample; i++) {\n        const t = i*dt;\n        // B(t) = (1-t)^2 * P0 + 2t(1-t)P1 + t^2P2\n        const a = p0.scale((1-t)*(1-t));\n        const b = p1.scale(2*t*(1-t));\n        const c = p2.scale(t*t);\n        points[i] = a.add(b).add(c);\n    }\n    return curve(points);\n}\n\nexport function bezier_cubic(p0 : Vector2, p1 : Vector2, p2 : Vector2, p3 : Vector2, n_sample = 100 ) {\n    const dt = 1/(n_sample-1);\n    const points = Array<Vector2>(n_sample);\n    for (let i = 0; i < n_sample; i++) {\n        const t = i*dt;\n        // B(t) = (1-t)^3 * P0 + 3t(1-t)^2P1 + 3t^2(1-t)P2 + t^3P3\n        const a = p0.scale((1-t)*(1-t)*(1-t));\n        const b = p1.scale(3*t*(1-t)*(1-t));\n        const c = p2.scale(3*t*t*(1-t));\n        const d = p3.scale(t*t*t);\n        points[i] = a.add(b).add(c).add(d);\n    }\n    return curve(points);\n}\n\n// interpolations\n\n/**\n* Create a curve from the cubic spline interpolation of the given points\n* @param points array of points to interpolate\n* @param n number of points to interpolate between each pair of points (default 10)\n*/\nexport function cubic_spline(points : Vector2[], n : number = 10) : Diagram {\n    const interpolated_points = interpolate_cubic_spline(points, n);\n    return curve(interpolated_points);\n}\n\n/**\n * Cubic spline interpolation\n * @param points array of points to interpolate\n * @param n number of points to interpolate between each pair of points (default 10)\n * @returns array of interpolated points\n */\nexport function interpolate_cubic_spline(points: Vector2[], n: number = 10): Vector2[] {\n    const n_points = points.length;\n    let a: number[] = points.map(p => p.y);\n    let b: number[] = new Array(n_points).fill(0);\n    let d: number[] = new Array(n_points).fill(0);\n    let h: number[] = new Array(n_points - 1);\n    for (let i = 0; i < n_points - 1; i++) {\n        h[i] = points[i + 1].x - points[i].x;\n    }\n\n    // Solve tridiagonal system for the c[i] coefficients (second derivatives)\n    let alpha : number[] = new Array(n_points - 1).fill(0);\n    let c     : number[] = new Array(n_points).fill(0);\n    let l     : number[] = new Array(n_points).fill(1);\n    let mu    : number[] = new Array(n_points).fill(0);\n    let z     : number[] = new Array(n_points).fill(0);\n\n    for (let i = 1; i < n_points - 1; i++) {\n        alpha[i] = (3 / h[i]) * (a[i + 1] - a[i]) - (3 / h[i - 1]) * (a[i] - a[i - 1]);\n    }\n\n    for (let i = 1; i < n_points - 1; i++) {\n        l[i] = 2 * (points[i + 1].x - points[i - 1].x) - h[i - 1] * mu[i - 1];\n        mu[i] = h[i] / l[i];\n        z[i] = (alpha[i] - h[i - 1] * z[i - 1]) / l[i];\n    }\n\n    // Back substitution\n    for (let j = n_points - 2; j >= 0; j--) {\n        c[j] = z[j] - mu[j] * c[j + 1];\n        b[j] = (a[j + 1] - a[j]) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;\n        d[j] = (c[j + 1] - c[j]) / (3 * h[j]);\n    }\n\n    // Now that we have coefficients, we can construct the spline between each pair of points\n    let spline_points: Vector2[] = [];\n    for (let i = 0; i < n_points - 1; i++) {\n        for (let j = 0; j <= n; j++) {\n            let x = points[i].x + j * (points[i + 1].x - points[i].x) / n;\n            let y = a[i] + b[i] * (x - points[i].x) + c[i] * Math.pow(x - points[i].x, 2) + d[i] * Math.pow(x - points[i].x, 3);\n            spline_points.push(V2(x, y));\n        }\n    }\n\n    return spline_points;\n}\n","// Simple encoding/decoding utilities using btoa, atob and encodeURIComponent, decodeURIComponent\n// can be used to store user code and pass it in the URL\n\nexport function encode(s: string): string {\n    return btoa(encodeURIComponent(s));\n}\n\nexport function decode(s: string): string {\n    return decodeURIComponent(atob(s));\n}\n"],"names":["line","line_intersection","plot","default_bar_options","to_ax_options","dgline"],"mappings":"AAAA;;AAEE;MACW,OAAO,CAAA;IAChB,WAAmB,CAAA,CAAS,EAAS,CAAS,EAAA;QAA3B,IAAC,CAAA,CAAA,GAAD,CAAC,CAAQ;QAAS,IAAC,CAAA,CAAA,GAAD,CAAC,CAAQ;KAAK;AACnD,IAAA,GAAG,CAAC,CAAU,EAAA;AACV,QAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAClD;AACD,IAAA,GAAG,CAAC,CAAU,EAAA;AACV,QAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAClD;AACD,IAAA,KAAK,CAAC,CAAS,EAAA;AACX,QAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9C;AACD,IAAA,GAAG,CAAC,CAAU,EAAA;AACV,QAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAClD;AACD,IAAA,MAAM,CAAC,KAAa,EAAA;QAChB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC5D,QAAA,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5B;AACD,IAAA,GAAG,CAAC,CAAU,EAAA;AACV,QAAA,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KACtC;AACD,IAAA,KAAK,CAAC,CAAU,EAAA;AACZ,QAAA,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KACtC;AACD,IAAA,MAAM,CAAC,CAAU,EAAA;AACb,QAAA,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzC;IACD,MAAM,GAAA;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KACvD;IACD,SAAS,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAC5C;IACD,KAAK,GAAA;AACD,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KACrC;IACD,SAAS,GAAA;AACL,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACxB,QAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;KAClD;IACD,IAAI,GAAA;QACA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;KACtC;AACD,IAAA,KAAK,CAAC,CAA4B,EAAA;AAC9B,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KACzB;AACJ,CAAA;AAED;;AAEG;AACa,SAAA,EAAE,CAAC,CAAU,EAAE,CAAU,EAAA;AACrC,IAAA,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7B,CAAC;AAED;;;;AAIG;AACG,SAAU,IAAI,CAAC,KAAc,EAAA;AAC/B,IAAA,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACzD,CAAC;MAKY,SAAS,CAAA;IAClB,OAAO,SAAS,CAAC,CAAW,EAAA;QACxB,OAAO,CAAC,CAAW,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KACpC;AACD,IAAA,OAAO,MAAM,CAAC,KAAc,EAAE,KAAe,EAAA;QACzC,OAAO,CAAC,CAAW,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACjE;AACD,IAAA,OAAO,KAAK,CAAC,KAAe,EAAE,MAAgB,EAAA;QAC1C,OAAO,CAAC,CAAW,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAChE;IACD,OAAO,kBAAkB,CAAC,CAAW,EAAA;QACjC,OAAO,CAAC,CAAW,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3D;AACD,IAAA,OAAO,iBAAiB,CAAC,EAAY,EAAE,EAAY,EAAA;QAC/C,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC1C,OAAO,CAAC,CAAW,KAAI;AACnB,YAAA,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzB,YAAA,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,SAAC,CAAA;KACJ;AACD,IAAA,OAAO,KAAK,CAAC,KAAc,EAAE,KAAc,EAAA;QACvC,OAAO,CAAC,CAAW,KAAI;YACnB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,SAAC,CAAA;KACJ;AACD,IAAA,OAAO,KAAK,CAAC,KAAc,EAAE,KAAc,EAAA;QACvC,OAAO,CAAC,CAAW,KAAI;YACnB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,SAAC,CAAA;KACJ;AACJ;;ACxGD;AACA;AAEA,IAAK,YAKJ,CAAA;AALD,CAAA,UAAK,YAAY,EAAA;AACb,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAkB,CAAA;AAClB,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAsB,CAAA;AACtB,IAAA,YAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,YAAA,CAAA,KAAA,CAAA,GAAA,KAAiB,CAAA;AACrB,CAAC,EALI,YAAY,KAAZ,YAAY,GAKhB,EAAA,CAAA,CAAA,CAAA;MAMY,QAAQ,CAAA;IACjB,OAAO,iBAAiB,CAAC,GAAY,EAAA;AACjC,QAAA,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;;YAEhB,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5B,OAAO;gBACH,IAAI,EAAE,YAAY,CAAC,SAAS;AAC5B,gBAAA,UAAU,EAAE,EAAC,SAAS,EAAG,IAAI,EAAC;aACjC,CAAA;SACJ;;QAGD,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,QAAQ,KAAK,CAAC,CAAC,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;;YAEpC,OAAO;gBACH,IAAI,EAAE,YAAY,CAAC,QAAQ;AAC3B,gBAAA,UAAU,EAAE,EAAC,SAAS,EAAG,GAAG,EAAC;aAChC,CAAA;SACJ;QACD,IAAI,QAAQ,KAAK,CAAC,CAAC,IAAI,QAAQ,GAAG,CAAC,EAAE;;YAEjC,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YACtC,IAAI,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACxC,YAAA,IAAI,UAAU,GAAS,EAAC,SAAS,EAAG,IAAI,EAAC,CAAA;AACzC,YAAA,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACzB,OAAO;gBACH,IAAI,EAAE,YAAY,CAAC,QAAQ;gBAC3B,UAAU;aACb,CAAA;SACJ;;AAED,QAAA,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;KACpC;IAED,OAAO,KAAK,CAAC,IAAa,EAAA;QACtB,IAAI,MAAM,GAAgB,EAAE,CAAC;QAE7B,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AACtB,QAAA,OAAO,GAAG,GAAG,GAAG,EAAE;;;YAGd,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACrC,YAAA,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;;gBAEhB,MAAM,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,YAAY,CAAC,IAAI;oBACvB,UAAU,EAAE,EAAC,KAAK,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAC;AAC5C,iBAAA,CAAC,CAAC;gBACH,MAAM;aACT;AACD,YAAA,IAAI,OAAO,GAAG,GAAG,EAAE;;gBAEf,MAAM,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,YAAY,CAAC,IAAI;AACvB,oBAAA,UAAU,EAAE,EAAC,KAAK,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,EAAC;AACrD,iBAAA,CAAC,CAAC;aACN;;YAGD,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC1C,YAAA,IAAI,WAAW,GAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;;AAElD,YAAA,IAAI,WAAW,GAAG,CAAC,IAAI,WAAW,GAAG,QAAQ;AAAE,gBAAA,OAAO,IAAI,CAAC;;YAE3D,IAAI,QAAQ,KAAK,CAAC,CAAC;AAAE,gBAAA,OAAO,IAAI,CAAC;AAEjC,YAAA,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;YACxD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;AAErD,YAAA,GAAG,GAAG,QAAQ,GAAG,CAAC,CAAC;SACtB;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;AACJ,CAAA;MAEY,YAAY,CAAA;AACrB,IAAA,OAAO,WAAW,CAAC,IAAa,EAAE,YAAqB,KAAK,EAAA;QACxD,IAAI,MAAM,GAAoC,EAAE,CAAA;QAChD,IAAI,SAAS,GAAiC,EAAE,CAAC;QACjD,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClC,QAAA,IAAI,MAAM,KAAK,IAAI,EAAE;AACjB,YAAA,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAChC,OAAO;SACV;AACD,QAAA,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;AACtB,YAAA,QAAQ,KAAK,CAAC,IAAI;gBACd,KAAK,YAAY,CAAC,QAAQ;oBAAE;;wBAExB,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;AACxC,4BAAA,MAAM,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,EAAE,EAAE,SAAS,EAAC,EAAC,CAAC,CAAC;4BAClD,MAAM;yBACT;AACD,wBAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;qBACpC;oBAAC,MAAM;gBACR,KAAK,YAAY,CAAC,SAAS;oBAAE;AACzB,wBAAA,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,4BAAA,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;4BAChC,OAAO;yBACV;wBACD,IAAI,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9C,wBAAA,IAAI,OAAO,CAAC,WAAW,CAAC,KAAK,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;AACxD,4BAAA,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;4BAChC,OAAO;yBACV;wBACD,SAAS,CAAC,GAAG,EAAE,CAAC;qBACnB;oBAAC,MAAM;gBACR,KAAK,YAAY,CAAC,IAAI;oBAAE;wBACpB,IAAI,KAAK,GAAG,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAChD,wBAAA,MAAM,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;qBACzD;oBAAC,MAAM;aACX;SACJ;AAED,QAAA,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,WAAW,CAAC,SAAuC,EAAA;QACtD,IAAI,KAAK,GAAS,EAAE,CAAC;AACrB,QAAA,KAAK,IAAI,GAAG,IAAI,SAAS,EAAE;AACvB,YAAA,QAAQ,GAAG,CAAC,WAAW,CAAC;AACpB,gBAAA,KAAK,GAAG;AAAO,oBAAA,KAAK,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC;oBAAC,MAAM;AACpD,gBAAA,KAAK,GAAG;AAAO,oBAAA,KAAK,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;oBAAC,MAAM;AACrD,gBAAA,KAAK,OAAO;oBAAG,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;oBAAC,MAAM;AACnD,gBAAA,KAAK,MAAM;oBAAI,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAAC,MAAM;AACvD,gBAAA,KAAK,IAAI;oBAAM,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;AAC9C,gBAAA,KAAK,IAAI;oBAAM,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;AAC9C,gBAAA,KAAK,MAAM;oBAAI,KAAK,CAAC,aAAa,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAAC,MAAM;AACzD,gBAAA,KAAK,KAAK;AAAK,oBAAA,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;oBAAC,MAAM;AAC9C,gBAAA,KAAK,KAAK;oBAAK,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;oBAAC,MAAM;aACnD;SACJ;AACD,QAAA,OAAO,KAAK,CAAC;KAChB;AACJ;;ACtJD;;AAEE;IAEU,IAwBX;AAxBD,CAAA,UAAY,GAAG,EAAA;AACX,IAAA,GAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,GAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,GAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAGnB,IAAA,GAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,GAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;;AAGb,IAAA,GAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,GAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;;AAGzB,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,GAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AAC/B,IAAA,GAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,GAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;;AAG/B,IAAA,GAAA,CAAA,YAAA,CAAA,GAAA,iBAA8B,CAAA;AAC9B,IAAA,GAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,GAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACrC,IAAA,GAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AAC7B,CAAC,EAxBW,GAAG,KAAH,GAAG,GAwBd,EAAA,CAAA,CAAA;;ACxBD,SAAS,MAAM,CAAC,SAAmB,EAAE,OAAgB,EAAA;IACjD,IAAI,CAAC,SAAS,EAAE;AACZ,QAAA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAsB,CAAC,CAAC;KAClD;AACL,CAAC;AAED,IAAY,WAOX,CAAA;AAPD,CAAA,UAAY,WAAW,EAAA;AACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAgB,CAAA;AAChB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAiB,CAAA;AACjB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;AACnC,CAAC,EAPW,WAAW,KAAX,WAAW,GAOtB,EAAA,CAAA,CAAA,CAAA;AAEM,MAAM,gBAAgB,GAAG,IAAI,CAAC;AA2DrC,SAAS,kBAAkB,CAAC,MAAe,EAAA;;;;IAIvC,QAAQ,MAAM;AACV,QAAA,KAAK,UAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,OAAO,EAAG,IAAI,EAAG,QAAQ,EAAC,CAAC;AAC1E,QAAA,KAAK,YAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,QAAQ,EAAE,IAAI,EAAG,QAAQ,EAAC,CAAC;AAC1E,QAAA,KAAK,WAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,KAAK,EAAK,IAAI,EAAG,QAAQ,EAAC,CAAC;AAC1E,QAAA,KAAK,aAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,OAAO,EAAG,IAAI,EAAG,QAAQ,EAAC,CAAC;AAC1E,QAAA,KAAK,eAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,QAAQ,EAAE,IAAI,EAAG,QAAQ,EAAC,CAAC;AAC1E,QAAA,KAAK,cAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,KAAK,EAAK,IAAI,EAAG,QAAQ,EAAC,CAAC;AAC1E,QAAA,KAAK,aAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,OAAO,EAAG,IAAI,EAAG,SAAS,EAAC,CAAC;AAC3E,QAAA,KAAK,eAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,QAAQ,EAAE,IAAI,EAAG,SAAS,EAAC,CAAC;AAC3E,QAAA,KAAK,cAAgB,EAAE,OAAO,EAAC,aAAa,EAAG,KAAK,EAAK,IAAI,EAAG,SAAS,EAAC,CAAC;QAC3E,SAAS,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,MAAM,CAAC,CAAC;KACxD;AACL,CAAC;AAGD;;;;;;;;AAQE;MACW,OAAO,CAAA;IAYhB,WAAY,CAAA,KAAmB,EAC3B,IAAA,GAOI,EAAE,EAAA;QAlBV,IAAQ,CAAA,QAAA,GAAe,EAAE,CAAC;AAC1B,QAAA,IAAA,CAAA,IAAI,GAAsB,SAAS,CAAC;QACpC,IAAM,CAAA,MAAA,GAAa,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC,IAAK,CAAA,KAAA,GAAwC,EAAE,CAAC;QAChD,IAAQ,CAAA,QAAA,GAAqC,EAAE,CAAC;QAChD,IAAa,CAAA,aAAA,GAAgC,EAAE,CAAC;QAChD,IAAO,CAAA,OAAA,GAAsC,EAAE,CAAC;QAChD,IAAO,CAAA,OAAA,GAAqB,KAAK,CAAC;QAClC,IAAI,CAAA,IAAA,GAAc,EAAE,CAAC;AAYjB,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACtB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AAAE,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAAE;AACrD,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;AAAE,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAAE;AACrD,QAAA,IAAI,IAAI,CAAC,OAAO,EAAG;AAAE,YAAA,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,OAAO,CAAC;SAAE;AACpD,QAAA,IAAI,IAAI,CAAC,IAAI,EAAM;AAAE,YAAA,IAAI,CAAC,IAAI,GAAO,IAAI,CAAC,IAAI,CAAC;SAAE;AACjD,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AAAE,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;SAAE;KACvE;AAED;;AAEG;IACI,GAAG,GAAA;AACN,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;AAEpB,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;AAErD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;YAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACtE,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,eAAe,GAAA;AAClB,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;AAEpB,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACrD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;AAEG;IACI,KAAK,GAAA;AACR,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,IAAI,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;AAErB,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;AAEtD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;YAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACxE,QAAA,OAAO,IAAI,CAAC;KACf;IAEO,OAAO,mBAAmB,CAAC,GAAS,EAAA;QACxC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,IAAI,GAAa,GAAG,CAAC;;AAEzB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;;AAEpE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;YACzC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;AAGlD,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;YACxB,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SAChC;KACJ;AAED;;;AAGG;IACI,IAAI,GAAA;;AAEP,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEtD,QAAA,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAClC,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,mBAAmB,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;KAC5C;AAED;;AAEG;AACI,IAAA,WAAW,CAAC,IAAwB,EAAA;AACvC,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACtC,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;AAAE,YAAA,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,QAAA,KAAK,IAAI,GAAG,IAAI,IAAI,EAAC;YACjB,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAAE,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpD;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AACD;;AAEG;AACI,IAAA,WAAW,CAAC,IAAwB,EAAA;AACvC,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,QAAA,OAAO,IAAI,CAAC;KACf;AACD;;AAEG;IACI,UAAU,GAAA;AACb,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACtC,QAAA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACf,QAAA,OAAO,IAAI,CAAC;KACf;AACD;;AAEE;AACK,IAAA,WAAW,CAAC,GAAY,EAAA;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAClC;AACM,IAAA,gBAAgB,CAAC,IAAe,EAAA;AACnC,QAAA,KAAK,IAAI,GAAG,IAAI,IAAI,EAAC;YACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAAE,gBAAA,OAAO,KAAK,CAAC;SAC9C;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;AAGG;IACK,gBAAgB,GAAA;QACpB,IAAI,QAAQ,GAAe,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;AAClC,YAAA,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACzB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC;aACpD;SACJ;aAAM;AACH,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;AACD,QAAA,OAAO,QAAQ,CAAC;KACnB;AAED;;;;AAIG;IACI,OAAO,GAAA;AACV,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAChD,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxC,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;AAIG;AACI,IAAA,KAAK,CAAC,IAA+B,EAAA;AACxC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC3C;AAED;;;;AAIG;AACI,IAAA,eAAe,CAAC,IAA+B,EAAA;AAClD,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;;AAEhD,QAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;;AAElB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,YAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC7D;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;;;AAME;IACK,yBAAyB,CAAC,IAAwB,EAAE,IAA+B,EAAA;AACtF,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;AAAE,YAAA,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAExC,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;;AAEhD,QAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;AAAE,YAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEnD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,YAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,yBAAyB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7E;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;AAGG;IACI,OAAO,CAAC,GAAG,QAAoB,EAAA;AAClC,QAAA,OAAO,eAAe,CAAC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC;KAC7C;AAED;;;;AAIG;IACI,QAAQ,GAAA;AACX,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;AAClC,YAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC;SACjC;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;SACtD;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;AAIG;IACI,UAAU,GAAA;AACb,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,EAAE;AAChC,YAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC;SACnC;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;SACxD;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;;AAKG;AACI,IAAA,UAAU,CAAC,MAAkB,EAAA;AAChC,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAChD,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,EAAE;AACpE,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;aAAE;YACjF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC5C;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzD,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC3E;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAEO,IAAA,YAAY,CAAC,SAAkC,EAAE,UAAmB,EAAE,YAA6B,EAAA;AACvG,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAChD,QAAA,IAAI,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACnC,YAAA,OAAO,IAAI,CAAC;SACf;AAAM,aAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK;AACtE,eAAA,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK;AAC/D,eAAA,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,aAAa,EAC3C;AACE,YAAA,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;SACtC;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;gBACzC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;SAC7F;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvE;AACD,QAAA,OAAO,IAAI,CAAC;KACf;;AAGM,IAAA,gBAAgB,CAAC,OAAiB,EAAA;AACrC,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,IAAG;AAC5B,YAAA,CAAC,CAAC,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7B,YAAA,OAAO,CAAC,CAAC;AACb,SAAC,CAAC,CAAC;KACN;AAEM,IAAA,IAAI,CAAC,KAAc,EAAA;AACtB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/D;AACM,IAAA,MAAM,CAAC,KAAc,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;KACjE;AACM,IAAA,OAAO,CAAC,OAAgB,EAAA;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC3D;AACM,IAAA,WAAW,CAAC,KAAc,EAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;KAClF;AACM,IAAA,aAAa,CAAC,OAAqC,EAAA;QACtD,OAAO,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;KACvD;AACM,IAAA,cAAc,CAAC,QAA8D,EAAA;QAChF,OAAO,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;KACzD;AACM,IAAA,eAAe,CAAC,SAAoB,EAAA;AACvC,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KACrE;AACM,IAAA,YAAY,CAAC,YAAqG,EAAA;QAErH,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;KAC3D;AAEM,IAAA,QAAQ,CAAC,KAAc,EAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;KACrF;AACM,IAAA,UAAU,CAAC,KAAc,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;KACvF;AACM,IAAA,eAAe,CAAC,KAAc,EAAA;QACjC,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;KACxG;IAGO,eAAe,CAAC,YAAwC,EAAE,aAAsB,EAAA;AACpF,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAChD,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,aAAa,EAAE;AACzE,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,aAAa,CAAC;SAC/C;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;SACxF;AAAM,aAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,EAAE,CAE9E;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvE;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AACM,IAAA,UAAU,CAAC,UAAmB,EAAA;QACjC,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;KAC1D;AACM,IAAA,SAAS,CAAC,SAAkB,EAAA;QAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;KACxD;AACM,IAAA,QAAQ,CAAC,QAAiB,EAAA;QAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;KACjE;AACM,IAAA,UAAU,CAAC,UAA8D,EAAA;QAC5E,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;KACrE;AACM,IAAA,SAAS,CAAC,SAA2B,EAAA;QACxC,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;KACnE;AACM,IAAA,UAAU,CAAC,UAAuC,EAAA;QACrD,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;KAC1D;AACM,IAAA,MAAM,CAAC,EAAW,EAAA;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KACzC;AACM,IAAA,SAAS,CAAC,KAAc,EAAA;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC1D;IACM,UAAU,GAAA;AACb,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,EAAE;YAC/B,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACxC;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;SACxD;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IACM,WAAW,GAAA;AACd,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,EAAE;AAC/B,YAAA,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SACtC;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;SACzD;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAID;;;AAGG;IACI,YAAY,GAAA;AACf,QAAA,IAAI,IAAI,GAAG,QAAQ,EAAE,IAAI,GAAG,QAAQ,CAAC;QACrC,IAAI,IAAI,GAAG,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,QAAQ,CAAC;QACvC,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAC;AAC7B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC1C,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;gBACtC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAChC;AACD,YAAA,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SACjE;AACI,aAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO;AACpE,eAAA,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,EAAC;AAC9B,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;aAAE;AACjF,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;aAClC;AACD,YAAA,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SACjE;AACI,aAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,aAAa,EAAC;AAC7E,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;SACnD;aACI;YACD,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvE;KACJ;AAED;;;AAGG;AACI,IAAA,SAAS,CAAC,kBAA6C,EAAA;AAC1D,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;;;AAGhD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,YAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;;AAEtE,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;YAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;;QAEhF,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;AAGG;AACI,IAAA,SAAS,CAAC,CAAW,EAAA;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KACjD;AAED;;;AAGG;IACI,QAAQ,CAAC,IAAc,IAAI,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,EAAA;QAC1C,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KAC7B;AAED;;;;AAIG;AACI,IAAA,MAAM,CAAC,KAAc,EAAE,KAAA,GAA8B,SAAS,EAAA;AACjE,QAAA,IAAI,KAAK,IAAI,SAAS,EAAE;AAAE,YAAA,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;AAChD,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACzD;AAED;;;;AAIG;IACI,KAAK,CAAC,KAAwB,EAAE,MAAiB,EAAA;AACpD,QAAA,IAAI,MAAM,IAAI,SAAS,EAAE;AAAE,YAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;AAClD,QAAA,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;YAAE,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAAE;AACpE,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;KACzD;AAED;;;AAGG;AACI,IAAA,SAAS,CAAC,KAAc,EAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,IAAG;AAC5B,YAAA,QAAQ,CAAC,CAAC,IAAI;AACV,gBAAA,KAAK,WAAW,CAAC,IAAI,EAAE;AACnB,oBAAA,IAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,gBAAgB,CAAC,CAAC;AACvE,oBAAA,IAAI,IAAI,GAAG,CAAC,CAAC,mBAAmB,EAAE,CAAC;AACnC,oBAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAE,QAAQ,EAAE,CAAC;AAC3D,oBAAA,OAAO,IAAI,CAAC;iBACf;AACD,gBAAA,KAAK,WAAW,CAAC,aAAa,EAAE;AAC5B,oBAAA,IAAI,IAAI,GAAG,CAAC,CAAC,mBAAmB,EAAE,CAAC;AACnC,oBAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC;AACvF,oBAAA,OAAO,IAAI,CAAC;iBACf;AACD,gBAAA,SAAS,OAAO,CAAC,CAAC;aACrB;AACL,SAAC,CAAC,CAAC;KACN;AAED;;;;AAIG;IACI,KAAK,CAAC,KAAc,EAAE,IAAe,EAAA;AACxC,QAAA,IAAI,IAAI,IAAI,SAAS,EAAE;AAAE,YAAA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;AAC9C,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACzD;AAED;;;;AAIG;IACI,KAAK,CAAC,KAAc,EAAE,IAAe,EAAA;AACxC,QAAA,IAAI,IAAI,IAAI,SAAS,EAAE;AAAE,YAAA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;SAAE;AAC9C,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACzD;AAED;;;AAGG;AACI,IAAA,kBAAkB,CAAC,CAAW,EAAA;QACjC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1D;AAED;;;;AAIG;IACI,iBAAiB,CAAC,EAAY,EAAE,EAAY,EAAA;AAC/C,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;KAC9D;AAED;;;;;;;AAOG;IACI,OAAO,CAAC,EAAa,EAAE,EAAa,EAAA;QACvC,IAAI,EAAE,IAAI,SAAS,IAAI,EAAE,IAAI,SAAS,EAAE;YACpC,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/C;aAAM,IAAI,EAAE,IAAI,SAAS,IAAI,EAAE,IAAI,SAAS,EAAE;AAC3C,YAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;SACtC;aAAM,IAAI,EAAE,IAAI,SAAS,IAAI,EAAE,IAAI,SAAS,EAAE;YAC3C,OAAO,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;SACzC;aAAM;AACH,YAAA,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;SAClC;KACJ;AAED;;;;;AAKG;AACI,IAAA,KAAK,CAAC,CAAW,EAAA;AACpB,QAAA,IAAI,CAAC,IAAI,SAAS,EAAE;AAAE,YAAA,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SAAE;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC7D;AAED;;;;;AAKG;AACI,IAAA,KAAK,CAAC,CAAW,EAAA;AACpB,QAAA,IAAI,CAAC,IAAI,SAAS,EAAE;AAAE,YAAA,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SAAE;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC7D;AAGD;;;;;;;AAOG;AACI,IAAA,UAAU,CAAC,MAAe,EAAA;QAC7B,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACrC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;QAC7B,IAAI,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;QAC7B,QAAQ,MAAM;YACV,KAAK,UAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,YAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,WAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,aAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,eAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,cAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,aAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,eAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,KAAK,cAAgB,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,SAAS,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,MAAM,CAAC,CAAC;SACxD;KACJ;AAED;;;;;;;;AAQG;AACI,IAAA,WAAW,CAAC,GAAsB,EAAA;AACrC,QAAA,IAAI,IAAI,GAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAChD,QAAA,IAAI,GAAG,YAAY,OAAO,EAAE;AACxB,YAAA,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;SACrB;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACtC;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;;;;AAOG;AACK,IAAA,kBAAkB,CAAC,MAAe,EAAA;;AAEtC,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACtC,QAAA,IAAI,QAAQ,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrC,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;;;;;AAQG;AACI,IAAA,gBAAgB,CAAC,MAAe,EAAA;AACnC,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACtC,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,aAAa,EAAE;AACzE,YAAA,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,gBAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;SACpE;aAAM,CAEN;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,WAAW,GAAA;QACd,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;YAClC,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;aAC5C;AACD,YAAA,OAAO,MAAM,CAAC;SACjB;AAAM,aAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;AAC3E,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;aAAE;AACjF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SAC7B;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvE;KACJ;AAED;;AAEE;IACK,YAAY,GAAA;;AACf,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACtC,QAAA,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,EAAE,CAAC;SACpC;AACD,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;;;;;;AASG;IACI,gBAAgB,CAAC,CAAU,EAAE,aAAuB,EAAA;QACvD,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;YAElC,IAAI,gBAAgB,GAAG,EAAE,CAAC;YAC1B,IAAI,MAAM,GAAK,GAAG,CAAC;AACnB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACzC,gBAAA,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACjC;YACD,IAAI,YAAY,GAAG,MAAM,CAAC;AAC1B,YAAA,IAAI,YAAY,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;;AAG/D,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,gBAAA,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;oBACtB,IAAI,QAAQ,GAAG,CAAC,CAAC;oBAEjB,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;AAC9C,oBAAA,IAAI,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;oBAC1D,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;iBAC9D;aACJ;AACD,YAAA,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,EAAE;;AAEvC,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;aAAE;AACjF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;SAC9D;aAAM,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;;AAEzC,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;aAAE;AACjF,YAAA,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;SAC7D;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvE;KACJ;IAEM,UAAU,GAAA;;AAEb,QAAA,IAAI,UAAU,GAAG,CAAC,CAAW,KAAI;YAC7B,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA;AAC/D,SAAC,CAAC;QAEF,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACrC,IAAI,SAAS,GAAG,OAAO,CAAC;YACpB,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YACpD,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AACvD,SAAA,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAErB,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAE9C,QAAA,OAAO,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACtC;IAEM,KAAK,CAAC,aAAuB,IAAI,EAAA;;AAEpC,QAAA,IAAI,UAAU,GAAG,CAAC,CAAW,KAAI;YAC7B,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA;AAC9D,SAAC,CAAC;AACF,QAAA,IAAI,WAAW,GAAG,CAAC,CAAW,KAAI;AAC9B,YAAA,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACpE,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,YAAA,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC1B,SAAC,CAAC;;QAGF,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE;AAClC,YAAA,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;SAC5B;aACI,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,EAAC;;AAEnC,YAAA,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC7B;AACI,aAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK;AACpE,eAAA,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,KAAK,EAAC;YAClC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,WAAW,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;AAEpF,YAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAEjC,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;aAAE;AACjF,YAAA,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;;AAG3D,YAAA,IAAI,UAAU,IAAI,KAAK,EAAE;AAAE,gBAAA,OAAO,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAAE;;AAGjE,YAAA,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;;YAE9B,IAAI,WAAW,GAAe,EAAE,CAAC;YACjC,IAAI,UAAU,GAAyB,SAAS,CAAC;YAEjD,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACrC,IAAI,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACzE,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;gBAEpC,IAAI,YAAY,GAAG,UAAU,IAAI,SAAS,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC3F,IAAI,YAAY,GAAG,sBAAsB;oBAAE,SAAS;gBAEpD,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;AAC5E,gBAAA,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;aAC1B;YAED,OAAO,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAC,GAAG,WAAW,CAAC,CAAC;SACtD;aACI;YACD,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvE;KACJ;AACJ,CAAA;MAEY,IAAI,CAAA;AAEb,IAAA,WAAA,CAAmB,MAAkB,EAAA;QAAlB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QADrC,IAAO,CAAA,OAAA,GAAa,KAAK,CAAC;KACgB;IAE1C,IAAI,GAAA;QACA,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,QAAA,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9B;IACD,mBAAmB,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;KAC5C;AAED;;AAEE;IACK,OAAO,GAAA;AACV,QAAA,IAAI,IAAI,GAAU,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AACpC,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;AAEG;IACI,MAAM,GAAA;QACT,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SAC3D;AACD,QAAA,OAAO,MAAM,CAAC;KACjB;AAED;;;AAGG;AACI,IAAA,UAAU,CAAC,MAAkB,EAAA;AAChC,QAAA,IAAI,IAAI,GAAU,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACzC,QAAA,OAAO,IAAI,CAAC;KACf;AAED;;;;;;;;;;AAUE;AACK,IAAA,gBAAgB,CAAC,CAAU,EAAE,MAAmB,GAAA,KAAK,EAAE,aAAuB,EAAA;AACjF,QAAA,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;AAClC,QAAA,IAAI,MAAM;AAAE,YAAA,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;AAGjE,QAAA,IAAI,aAAa,IAAI,SAAS,EAAE;YAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAAE,gBAAA,MAAM,KAAK,CAAC,2BAA2B,CAAC,CAAC;aAAE;;YAEjE,IAAI,iBAAiB,GAAG,EAAE,CAAC;YAC3B,IAAI,MAAM,GAAK,GAAG,CAAC;AACnB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,gBAAA,MAAM,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AAChE,gBAAA,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC;YACD,IAAI,YAAY,GAAG,MAAM,CAAC;AAC1B,YAAA,IAAI,YAAY,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;;AAEhE,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,gBAAA,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;oBACtB,IAAI,UAAU,GAAG,CAAC,CAAC;oBAEnB,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;AAC9C,oBAAA,IAAI,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;oBAC1D,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;iBAC/D;aACJ;;AAED,YAAA,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;SAC9B;aAAM;;AAEH,YAAA,IAAI,aAAa,GAAG,CAAC,IAAI,aAAa,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AACjE,gBAAA,MAAM,KAAK,CAAC,yCAAyC,CAAC,CAAC;aAC1D;AACD,YAAA,IAAI,KAAK,GAAG,eAAe,CAAC,aAAa,CAAC,CAAC;YAC3C,IAAI,GAAG,GAAK,eAAe,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;YAC/C,IAAI,GAAG,GAAa,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnC,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAClC;KACJ;AAED;;;AAGG;AACI,IAAA,SAAS,CAAC,kBAA6C,EAAA;AAC1D,QAAA,IAAI,IAAI,GAAU,IAAI,CAAC,mBAAmB,EAAE,CAAC;;;AAG7C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,QAAA,OAAO,IAAI,CAAC;KACf;AACJ,CAAA;AAED;;;;AAIG;AACa,SAAA,eAAe,CAAC,GAAG,QAAoB,EAAA;AACnD,IAAA,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;QAAE,OAAO,KAAK,EAAE,CAAC;KAAE;AAC7C,IAAA,IAAI,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC;;;IAI7D,IAAI,oBAAoB,GAAG,IAAI,CAAC;AAChC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACzC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;YACzB,oBAAoB,GAAG,KAAK,CAAC;YAC7B,MAAM;SACT;KACJ;AAED,IAAA,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,EAAC,QAAQ,EAAG,WAAW,EAAC,CAAC,CAAC;AACtE,IAAA,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;IACpC,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;;;AAGhD,CAAC;AAED;AAGA;;;;AAIG;AACG,SAAU,KAAK,CAAC,MAAkB,EAAA;AACpC,IAAA,IAAI,IAAI,GAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,IAAA,IAAI,KAAK,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,EAAC,IAAI,EAAG,IAAI,EAAC,CAAC,CAAC;AAC1D,IAAA,OAAO,KAAK,CAAC;AACjB,CAAC;AAED;;;;;AAKG;AACa,SAAAA,MAAI,CAAC,KAAe,EAAE,GAAa,EAAA;AAC/C,IAAA,OAAO,KAAK,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrD,CAAC;AAGD;;;;;AAKG;AACG,SAAU,OAAO,CAAC,MAAiB,EAAA;IACrC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE,qCAAqC,CAAC,CAAC;AAClE,IAAA,IAAI,IAAI,GAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;;AAGnC,IAAA,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,EAAC,IAAI,EAAG,IAAI,EAAC,CAAC,CAAC;AAC9D,IAAA,OAAO,OAAO,CAAC;AACnB,CAAC;AAED;;;;AAIG;AACG,SAAU,KAAK,CAAC,CAAA,GAAc,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAA;IACvC,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACpB,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;AAED;;;;AAIG;AACG,SAAU,IAAI,CAAC,GAAY,EAAA;IAC7B,IAAI,KAAK,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE;QACtC,QAAQ,EAAG,EAAE,IAAI,EAAG,GAAG,EAAE,WAAW,EAAG,gBAAgB,EAAE;AACzD,QAAA,IAAI,EAAG,IAAI,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvC,KAAA,CAAC,CAAC;AACH,IAAA,OAAO,KAAK,CAAC;AACjB,CAAC;AAED;;;;;;AAMG;SACa,KAAK,CAAC,GAAY,EAAE,KAAc,EAAE,MAAc,EAAA;AAC9D,IAAA,IAAI,OAAO,GAAe,EAAE,GAAG,EAAE,CAAA;;AAEjC,IAAA,IAAI,IAAI,GAAkB,IAAI,IAAI,CAAC;QAC/B,EAAE,CAAC,CAAC,KAAK,GAAC,CAAC,EAAE,CAAC,MAAM,GAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAC,CAAC,EAAE,CAAC,MAAM,GAAC,CAAC,CAAC;QAC/C,EAAE,CAAC,KAAK,GAAC,CAAC,EAAE,MAAM,GAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAC,CAAC,EAAE,MAAM,GAAC,CAAC,CAAC;AAChD,KAAA,CAAC,CAAC;AACH,IAAA,IAAI,GAAG,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,EAAC,OAAO,EAAG,OAAO,EAAE,IAAI,EAAG,IAAI,EAAC,CAAC,CAAC;AAC3E,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;AAED;;;AAGG;AACG,SAAU,SAAS,CAAC,KAAiD,EAAA;;IACvE,IAAI,MAAM,GAAoB,EAAE,CAAC;AACjC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,QAAA,IAAI,KAAK,GAAG,CAAA,EAAA,GAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;KAC9B;IACD,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE;QAChD,aAAa,EAAG,EAAE,OAAO,EAAG,MAAM,EAAE,cAAc,EAAG,CAAC,EAAE;AACxD,QAAA,IAAI,EAAG,IAAI,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvC,KAAA,CAAC,CAAC;AACH,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAEe,SAAA,YAAY,CAAC,KAAc,EAAE,SAAmB,EAAA;IAC5D,IAAI,MAAM,GAAoB,YAAY,CAAC,WAAW,CAAC,KAAK,EAAC,SAAS,CAAmB,CAAC;IAC1F,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE;QAChD,aAAa,EAAG,EAAE,OAAO,EAAG,MAAM,EAAE,cAAc,EAAG,CAAC,EAAE;AACxD,QAAA,IAAI,EAAG,IAAI,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvC,KAAA,CAAC,CAAC;AACH,IAAA,OAAO,MAAM,CAAC;AAClB;;AC9oCA;;AAEG;AACG,SAAU,SAAS,CAAC,KAAa,EAAA;AACnC,IAAA,OAAO,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AACjC,CAAC;AAED;;AAEG;AACG,SAAU,SAAS,CAAC,KAAa,EAAA;AACnC,IAAA,OAAO,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;AACjC,CAAC;AAIe,SAAA,YAAY,CAAI,GAAS,EAAE,GAAY,EAAA;IACnD,IAAI,OAAO,GAAS,EAAE,CAAC;AACvB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC1B,QAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;KACrC;AACD,IAAA,OAAO,OAAO,CAAC;AACnB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,QAAQ,CAAC,KAAa,EAAE,GAAW,EAAE,IAAY,GAAG,EAAA;IAChE,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAA,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;KACjC;AACD,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,YAAY,CAAC,KAAa,EAAE,GAAW,EAAE,IAAY,GAAG,EAAA;IACpE,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;AAC7B,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;KACjC;AACD,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,KAAK,CAAC,KAAa,EAAE,GAAW,EAAE,OAAe,CAAC,EAAA;;IAE9D,IAAI,IAAI,IAAI,CAAC;AAAE,QAAA,OAAO,EAAE,CAAC;AACzB,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI,CAAC;AAAE,QAAA,OAAO,EAAE,CAAC;IAEtB,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAA,IAAI,IAAI,GAAG,CAAC,EAAC;AACT,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;AACpC,YAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;SAAM;AACH,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;AACpC,YAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;AACD,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,SAAS,CAAC,KAAa,EAAE,GAAW,EAAE,OAAe,CAAC,EAAA;;IAElE,IAAI,IAAI,IAAI,CAAC;AAAE,QAAA,OAAO,EAAE,CAAC;AACzB,IAAA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI,CAAC;AAAE,QAAA,OAAO,EAAE,CAAC;IAEtB,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAA,IAAI,IAAI,GAAG,CAAC,EAAC;AACT,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;AACrC,YAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;SAAM;AACH,QAAA,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;AACrC,YAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;AACD,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;AAKG;AACG,SAAU,SAAS,CAAI,GAAW,EAAA;IACpC,IAAI,MAAM,GAAW,EAAE,CAAC;IACxB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACxB,QAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjC,YAAA,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B;KACJ;AACD,IAAA,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;AACM,SAAU,wBAAwB,CAAC,OAA2B,EAAA;IAChE,IAAI,CAAC,GAAG,OAAO,CAAC;IAChB,IAAI,OAAO,CAAC,KAAK,QAAQ;QAAE,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AAC5C,IAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAAE,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACxC,IAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,IAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,IAAA,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,IAAA,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;QAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACrB;;;;;;;;;;;;;;;AC1IA;AACO,MAAM,SAAS,GAA8B;AAChD,IAAA,MAAM,EAAU,SAAS;AACzB,IAAA,WAAW,EAAK,SAAS;AACzB,IAAA,QAAQ,EAAQ,SAAS;AACzB,IAAA,aAAa,EAAG,SAAS;AACzB,IAAA,OAAO,EAAS,SAAS;AACzB,IAAA,YAAY,EAAI,SAAS;AACzB,IAAA,KAAK,EAAW,SAAS;AACzB,IAAA,UAAU,EAAM,SAAS;AACzB,IAAA,QAAQ,EAAQ,SAAS;AACzB,IAAA,aAAa,EAAG,SAAS;AACzB,IAAA,OAAO,EAAS,SAAS;AACzB,IAAA,YAAY,EAAI,SAAS;AACzB,IAAA,MAAM,EAAU,SAAS;AACzB,IAAA,WAAW,EAAK,SAAS;AACzB,IAAA,MAAM,EAAU,SAAS;AACzB,IAAA,WAAW,EAAK,SAAS;AACzB,IAAA,MAAM,EAAU,SAAS;AACzB,IAAA,WAAW,EAAK,SAAS;AACzB,IAAA,OAAO,EAAS,SAAS;AACzB,IAAA,YAAY,EAAI,SAAS;AACzB,IAAA,MAAM,EAAU,SAAS;AACzB,IAAA,WAAW,EAAK,SAAS;CAC5B,CAAA;AAEe,SAAA,SAAS,CAAC,SAAkB,EAAE,OAAkC,EAAA;;AAC5E,IAAA,OAAO,MAAA,OAAO,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,SAAS,CAAC;AAC3C;;AC5BA,MAAM,2BAA2B,GAAG;AAChC,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;IAC1D,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AACtE,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,GAAG,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AACzD,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;IAC1D,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAEtE,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC9C,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC1D,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;IAC1D,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AACtE,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;AAC9C,IAAA,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI,EAAE,GAAG,EAAG,IAAI;;CAE7D,CAAA;AAC4C,MAAM,CAAC,WAAW,CAC3D,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EACnE;AAEF,MAAM,WAAW,GAAI;AACjB,IAAA,SAAS,EAAK,GAAG,EAAE,QAAQ,EAAM,GAAG,EAAE,SAAS,EAAK,GAAG,EAAE,SAAS,EAAK,GAAG,EAAE,WAAW,EAAG,GAAG;AAC7F,IAAA,QAAQ,EAAM,GAAG,EAAE,OAAO,EAAO,GAAG,EAAE,SAAS,EAAK,GAAG,EAAE,QAAQ,EAAM,GAAG,EAAE,SAAS,EAAK,GAAG;AAC7F,IAAA,UAAU,EAAI,GAAG,EAAE,MAAM,EAAQ,GAAG,EAAE,MAAM,EAAQ,GAAG,EAAE,MAAM,EAAQ,GAAG,EAAE,WAAW,EAAG,GAAG;AAC7F,IAAA,MAAM,EAAQ,GAAG,EAAE,OAAO,EAAO,GAAG,EAAE,SAAS,EAAK,GAAG,EAAE,OAAO,EAAO,GAAG,EAAE,WAAW,EAAG,GAAG;AAC7F,IAAA,OAAO,EAAO,GAAG,EAAE,OAAO,EAAO,GAAG,EAAE,OAAO,EAAO,GAAG,EAAE,SAAS,EAAK,GAAG;AAC1E,IAAA,YAAY,EAAK,GAAG,EAAE,UAAU,EAAO,GAAG,EAAE,UAAU,EAAO,GAAG,EAAE,cAAc,EAAG,GAAG;AACtF,IAAA,UAAU,EAAO,GAAG,EAAE,YAAY,EAAK,GAAG;CAC7C,CAAA;AAED,MAAM,aAAa,GAAG;AAClB,IAAA,qBAAqB,EAAG,GAAG;AAC3B,IAAA,qBAAqB,EAAG,GAAG;AAC3B,IAAA,oBAAoB,EAAG,GAAG;AAC1B,IAAA,oBAAoB,EAAG,GAAG;AAC1B,IAAA,mBAAmB,EAAG,GAAG;AACzB,IAAA,mBAAmB,EAAG,GAAG;AACzB,IAAA,mBAAmB,EAAG,GAAG;AACzB,IAAA,mBAAmB,EAAG,GAAG;AACzB,IAAA,mBAAmB,EAAG,GAAG;AACzB,IAAA,mBAAmB,EAAG,GAAG;AACzB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,kBAAkB,EAAG,GAAG;AACxB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,iBAAiB,EAAG,GAAG;AACvB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,gBAAgB,EAAG,GAAG;AACtB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,eAAe,EAAG,GAAG;AACrB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,cAAc,EAAG,GAAG;AACpB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,aAAa,EAAG,GAAG;AACnB,IAAA,aAAa,EAAG,IAAI;AACpB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,GAAG;AAClB,IAAA,YAAY,EAAG,IAAI;AACnB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,WAAW,EAAG,GAAG;AACjB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,UAAU,EAAG,GAAG;AAChB,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,SAAS,EAAG,GAAG;AACf,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,QAAQ,EAAG,GAAG;AACd,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACbb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,OAAO,EAAG,GAAG;AACb,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,MAAM,EAAG,GAAG;AACZ,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,IAAI,EAAG,IAAI;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,IAAI,EAAG,IAAI;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,KAAK,EAAG,GAAG;AACX,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,IAAI,EAAG,GAAG;AACV,IAAA,KAAK,EAAG,GAAG;AACX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"}